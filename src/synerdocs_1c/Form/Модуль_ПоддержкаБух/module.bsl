
//========================================================================
// Модуль поддержки Бухгалтерии
//========================================================================

// Модули
Перем ОбъектнаяМодель, КонфигурацияОбщий;

//========================================================================
// ИНИЦИАЛИЗАЦИЯ
//========================================================================

Процедура ПодключитьМодули()
	
	ОМКонфигурации		= Модуль("Модуль_ОбъектнаяМодельКонфигурации");
	КонфигурацияОбщий	= Модуль("Модуль_ПоддержкаОбщий");
	
	КонфигурацияОбщий.ПодключитьЗависимости(ЭтаФорма);
	
КонецПроцедуры

Процедура Инициализировать() Экспорт
	
	ПодключитьМодули();
	
КонецПроцедуры

//========================================================================
// ЭКСПОРТНЫЙ ИНТЕРФЕЙС
//========================================================================

// Конвертирует документ конфигурации в объект ИР.
//
// Параметры:
//  Ссылка	 - ДокументСсылка.СчетФактураВыданный, ДокументСсылка.РеализацияТоваровУслуг, ДокументСсылка.АктОбОказанииПроизводственныхУслуг - конвертируемый документ.
// 
// Возвращаемое значение:
//  Структура - объект ИР (см. Модуль_ОбъектнаяМодельКонфигурации.Новый_ИсходныйДокумент()).
//
Функция ИсходныйДокумент(Ссылка) Экспорт
	
	Документ = КонфигурацияОбщий.ИсходныйДокумент(Ссылка);
	
	Возврат Документ;
	
КонецФункции

// Конвертирует документ конфигурации в объект ИР.
// Никаких проверок, что это именно корректировочный документ не делается,
// и работа НЕ с корректировочным документом не гарантируется.
//
// Параметры:
//  Ссылка	 - ДокументСсылка.СчетФактураВыданный, ДокументСсылка.КорректировкаРеализации - конвертируемый документ.
// 
// Возвращаемое значение:
//  Структура - объект ИР (см. Модуль_ОбъектнаяМодельКонфигурации.Новый_КорректировочныйДокумент()).
//
Функция КорректировочныйДокумент(Ссылка) Экспорт
	
	Документ = КонфигурацияОбщий.КорректировочныйДокумент(Ссылка);
	
	Возврат Документ;
	
КонецФункции

// Получает список документов, которые можно отправить в сервис.
//
// Параметры:
//  ДоступныеКонтрагенты - Массив - массив контрагентов, по которым ограничена выборка документов.
//  НачалоПериода		 - Дата - начало периода выборки.
//  КонецПериода		 - Дата - конец периода выборка.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - список документов для отправки (см. Модуль_ОбъектнаяМодель.Новый_СписокДокументовДляОтправки()).
//
Функция ПолучитьСписокДокументовДляОтправки(ДоступныеКонтрагенты, НачалоПериода = Неопределено, КонецПериода = Неопределено) Экспорт
	
	СписокДокументов = КонфигурацияОбщий.ПолучитьСписокДокументовДляОтправки(ДоступныеКонтрагенты, НачалоПериода, КонецПериода);
	
	Возврат СписокДокументов;
	
КонецФункции

Функция ТекущаяОрганизация() Экспорт
	
	Результат = КонфигурацияОбщий.ТекущаяОрганизация();
	
	Возврат Результат;
	
КонецФункции

Функция Фактор(Ссылка) Экспорт
	
	Результат = КонфигурацияОбщий.Фактор(Ссылка);
	
	Возврат Результат;
	
КонецФункции

Функция ПолнаяИнформацияОДокументе(Ссылка) Экспорт
	
	Результат = КонфигурацияОбщий.ПолнаяИнформацияОДокументе(Ссылка);
	
	Возврат Результат;
	
КонецФункции

Функция ИнформацияОДокументе(Ссылка) Экспорт
	
	Результат = КонфигурацияОбщий.ИнформацияОДокументе(Ссылка);
	
	Возврат Результат;
	
КонецФункции

Процедура УстановитьДокументОтправлен(Ссылка, ИдДокумента) Экспорт
	
	КонфигурацияОбщий.УстановитьДокументОтправлен(Ссылка, ИдДокумента);
	
КонецПроцедуры

Процедура УдалитьИдентитфикаторДокумента(ИдДокумента) Экспорт
	
	КонфигурацияОбщий.УдалитьИдентитфикаторДокумента(ИдДокумента);
	
КонецПроцедуры

//========================================================================
// СЛУЖЕБНЫЙ ЭКСПОРТНЫЙ ИНТЕРФЕЙС
//========================================================================

Функция ПоддерживаемыеПервичныеДокументы() Экспорт
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьДокументыДляОтправки(Ссылка = Неопределено, НачалоПериода = Неопределено, КонецПериода = Неопределено, ДопустимыеКонтрагенты = Неопределено) Экспорт
	
	Возврат Неопределено;
	
КонецФункции

Функция ПервичныйДокумент(Ссылка) Экспорт
	
	Возврат Неопределено;
	
КонецФункции

//===================================
//{ Параметры конфигурации

Функция ЕдиницыИзмеренияПоддерживаютсяПолностью() Экспорт
	
	Возврат Ложь;
	
КонецФункции

Функция ЕстьШтрихкод() Экспорт
	
	Возврат Ложь;
	
КонецФункции

//}

Функция ДолжностьФизЛица(ФизЛицо, Организация, Дата) Экспорт
	
	Сотрудник = ОбщегоНазначения.ДанныеФизЛица(Организация, ФизЛицо, Дата);
	
	Должность = Сотрудник.Должность;
	Если НЕ ЗначениеЗаполнено(Должность) Тогда
		Должность = ДолжностьОтветственногоЛица(ФизЛицо, Организация, Дата);
	КонецЕсли;
	
	Возврат Должность;
	
КонецФункции

//===================================
//{ Контактная информация

Функция ВидТелефона(Ссылка) Экспорт
	
	ВидыКИ = Справочники.ВидыКонтактнойИнформации;
	
	ВидыТелефонов = Новый Соответствие;
	ВидыТелефонов[Тип("СправочникСсылка.Организации")]		= ВидыКИ.ТелефонОрганизации;
	ВидыТелефонов[Тип("СправочникСсылка.Контрагенты")]		= ВидыКИ.ТелефонКонтрагента;
	ВидыТелефонов[Тип("СправочникСсылка.ФизическиеЛица")]	= ВидыКИ.ТелефонФизЛица;
	
	Результат = ВидыТелефонов[ТипЗнч(Ссылка)];
	Возврат Результат;
	
КонецФункции

Функция ВидФакса(Ссылка) Экспорт
	
	ВидыКИ = Справочники.ВидыКонтактнойИнформации;
	
	ВидыФакса = Новый Соответствие;
	ВидыФакса[Тип("СправочникСсылка.Организации")] = ВидыКИ.ФаксОрганизации;
	
	Результат = ВидыФакса[ТипЗнч(Ссылка)];
	Возврат Результат;
	
КонецФункции

Функция ВидEmail(Ссылка) Экспорт
	
	ВидыКИ = Справочники.ВидыКонтактнойИнформации;
	
	ВидыМыла = Новый Соответствие;
	ВидыМыла[Тип("СправочникСсылка.Организации")]		= ВидыКИ.EmailОрганизации;
	ВидыМыла[Тип("СправочникСсылка.ФизическиеЛица")]	= ВидыКИ.EmailФизЛица;
	
	Результат = ВидыМыла[ТипЗнч(Ссылка)];
	Возврат Результат;
	
КонецФункции

//}

//========================================================================
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//========================================================================

// Получает должность ответственного лица.
//
// Параметры:
//  ФизЛицо		 - СправочникСсылка.ФизическиеЛица - отвественный.
//  Организация	 - СправочникСсылка.Организации - организация ответственного.
//  Дата		 - Дата - дата, на которую будет получена должность.
// 
// Возвращаемое значение:
//  Строка, Неопределено - должность.
//
Функция ДолжностьОтветственногоЛица(ФизЛицо, Организация, Дата)
	
	Если НЕ ЗначениеЗаполнено(ФизЛицо) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность
		|ИЗ
		|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница = &Организация) КАК ОтветственныеЛицаОрганизацийСрезПоследних
		|ГДЕ
		|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = &ФизЛицо";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Должность = Строка(Выборка.Должность);
		
	Иначе
		
		Должность = Неопределено;
		
	КонецЕсли;
	
	Возврат Должность;
	
КонецФункции

