
Перем _ИмяФормы;

//========================================================================
// ЭКСПОРТНЫЙ ИНТЕРФЕЙС
//========================================================================

Функция ИмяФормы() Экспорт
	
	Если _ИмяФормы = Неопределено Тогда
		_ИмяФормы = ПолучитьИмяФормы(ЭтаФорма);
	КонецЕсли;
	
	Возврат _ИмяФормы;
	
КонецФункции


Процедура НайтиКонтрагентаВСервисеНажатие(Элемент)

	ИскатьПоИННКПП = Ложь;
	
	Если Контрагент.Пустая() Тогда //Ищем по указанными ИНН/КПП
		Если СтрДлина(ИНН_Контрагента) < 10 Тогда
			Сообщить("Выберите контрагента из справочника или укажите корректный ИНН/КПП!");
			Возврат;
		Иначе
			ИскатьПоИННКПП = Истина;
		КонецЕсли;
	Иначе		
		Если СтрДлина(ИНН_Контрагента) < 10 Тогда
			Сообщить("У выбранного контрагента [" + Контрагент + "] некорректный ИНН [" + Контрагент.ИНН + "]");
			Возврат;
		Иначе
			ИскатьПоИННКПП = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Попытка
		Syn_Контрагент = ExchangeService.GetOrganizationByInnKpp(Токен, Формат(ИНН_Контрагента, "ЧГ=0"), Формат(КПП_Контрагента, "ЧГ=0"));
		
		Если Не Syn_Контрагент = Неопределено Тогда
			ЭлементыФормы.НадписьНаименованиеКонтрагента.Заголовок = Syn_Контрагент.LegalName;
			ЭлементыФормы.НадписьИНН.Заголовок = Syn_Контрагент.Inn;
			ЭлементыФормы.НадписьАдресКонтрагента.Заголовок = ПредставлениеАдреса(Syn_Контрагент.LegalAddress, Syn_Контрагент.IsForeignCompany);;
			
			//Покрасим
			ЭлементыФормы.НадписьНаименованиеКонтрагента.ЦветТекста = WebЦвета.Синий;
			ЭлементыФормы.НадписьИНН.ЦветТекста = WebЦвета.Синий;
			ЭлементыФормы.НадписьАдресКонтрагента.ЦветТекста = WebЦвета.Синий;
		Иначе
			
			ЭлементыФормы.НадписьНаименованиеКонтрагента.Заголовок = "Контрагент не найден";
			ЭлементыФормы.НадписьИНН.Заголовок = "Контрагент не найден";
			ЭлементыФормы.НадписьАдресКонтрагента.Заголовок = "Контрагент не найден";
			
			//Покрасим
			ЭлементыФормы.НадписьНаименованиеКонтрагента.ЦветТекста = WebЦвета.Красный;
			ЭлементыФормы.НадписьИНН.ЦветТекста = WebЦвета.Красный;
			ЭлементыФормы.НадписьАдресКонтрагента.ЦветТекста = WebЦвета.Красный;
			
		КонецЕсли;
		
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;

	
КонецПроцедуры

Процедура КонтрагентОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ИНН_Контрагента = ВыбранноеЗначение.ИНН;
		КПП_Контрагента = ВыбранноеЗначение.КПП;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтправитьПриглашениеНажатие(Элемент)

	Если Syn_Контрагент	= Неопределено Тогда
		
		Сообщить("Не найден контрагент для отправки приглашения!");
		Возврат;
		
	Иначе
		
		Попытка
			ExchangeService.AcceptAuthorization(Токен, Syn_IDОрганизации, Syn_Контрагент.OrganizationId, Комментарий);
			Сообщить("Приглашение к обмену отправлено контрагенту [" + Syn_Контрагент.LegalName + "].");
			ЭтаФорма.Закрыть(Истина);
		Исключение
			ОписаниеОшибкиСтрокой = ОписаниеОшибки();
			ТекстОшибкиSynerdocs = РазобратьИсключениеSynerdocs(ОписаниеОшибкиСтрокой);
			
			ОтправитьУведомлениеПользователю("Ошибка запроса авторизации контрагента <" + Syn_Контрагент.LegalName + ">: " + ТекстОшибкиSynerdocs);
			
			Возврат;
			
		КонецПопытки;

	КонецЕсли;
	
КонецПроцедуры
 
Процедура КонтрагентПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		ИНН_Контрагента = Элемент.Значение.ИНН;
		КПП_Контрагента = Элемент.Значение.КПП;		
	КонецЕсли;

КонецПроцедуры

Процедура ИНН_КонтрагентаПриИзменении(Элемент)
	
	Элемент.Значение = СокрЛП(Элемент.Значение);

КонецПроцедуры

Процедура КПП_КонтрагентаПриИзменении(Элемент)
	
	Элемент.Значение = СокрЛП(Элемент.Значение);

КонецПроцедуры

Процедура ПриОткрытии()
	
	УстановитьВидимость();

КонецПроцедуры

Процедура УстановитьВидимость()
	
	ЭлементыФормы.Контрагент.Доступность = НЕ ФлагИскатьПоИННКПП;
	ЭлементыФормы.ИНН_Контрагента.Доступность = ФлагИскатьПоИННКПП;
	ЭлементыФормы.КПП_Контрагента.Доступность = ФлагИскатьПоИННКПП;
	
КонецПроцедуры

Процедура ФлагИскатьПоИННКПППриИзменении(Элемент)
	
	УстановитьВидимость();

КонецПроцедуры



