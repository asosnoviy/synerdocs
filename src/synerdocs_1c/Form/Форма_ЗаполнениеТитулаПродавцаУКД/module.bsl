
//========================================================================
// Форма заполнения реквизитов УПД.
// Используется для заполнения объекта Модуль_ОбъектнаяМодель.Новый_ТитулПродавцаУПД().
//========================================================================

Перем _Параметры;

Перем Ссылка;

// Модули
Перем ОбъектнаяМодель, Классификаторы, РаботаСФормами, ФормированиеДокументов;

//========================================================================
// ИНИЦИАЛИЗАЦИЯ
//========================================================================

Процедура ПодключитьМодули()
	
	ОбъектнаяМодель			= Модуль("Модуль_ОбъектнаяМодель");
	Классификаторы			= Модуль("Модуль_Классификаторы");
	РаботаСФормами			= Модуль("Модуль_РаботаСФормами");
	ФормированиеДокументов	= Модуль("Модуль_ФормированиеДокументов");
	
КонецПроцедуры

Процедура Инициализировать()
	
	ПодключитьМодули();
	
КонецПроцедуры

Процедура ИнициализироватьФорму()
	
	Параметры = ПараметрыФормы();
	
	Ссылка = Параметры.Ссылка;
	
	ЭтаФорма.Заголовок = Строка(Ссылка);
	
	СписокВыбораЕдиницыИзмерения = СписокВыбораЕдиницыИзмерения();
	СписокВыбораСтавкиНДС = СписокЗначенийИзПеречисления(ОбъектнаяМодель.СтавкиНДС());
	
	КолонкиТЧ = ЭлементыФормы.ТабличнаяЧасть.Колонки;
	КолонкиТЧ.НаименованиеЕИДо.ЭлементУправления.СписокВыбора		= СписокВыбораЕдиницыИзмерения;
	КолонкиТЧ.НаименованиеЕИПосле.ЭлементУправления.СписокВыбора	= СписокВыбораЕдиницыИзмерения;
	КолонкиТЧ.СтавкаНДСДо.ЭлементУправления.СписокВыбора			= СписокВыбораСтавкиНДС;
	КолонкиТЧ.СтавкаНДСПосле.ЭлементУправления.СписокВыбора			= СписокВыбораСтавкиНДС;
	
	ЭлементыФормы.СодержаниеОперации.СписокВыбора = СписокВыбораСодержаниеОперации();
	
	НеочищаемыеПоля = Новый Массив;
	НеочищаемыеПоля.Добавить(ЭлементыФормы.ФункцияДокумента);
	НеочищаемыеПоля.Добавить(ЭлементыФормы.Продавец);
	НеочищаемыеПоля.Добавить(ЭлементыФормы.Покупатель);
	НеочищаемыеПоля.Добавить(ЭлементыФормы.Валюта);
	НеочищаемыеПоля.Добавить(ЭлементыФормы.Подписант);
	НеочищаемыеПоля.Добавить(ЭлементыФормы.Составитель);
	НеочищаемыеПоля.Добавить(ЭлементыФормы.ОснованиеИзменений);
	
	ДействиеОчитска = Новый Действие("Подключаемый_ОтменаОчистки");
	Для Каждого Элемент Из НеочищаемыеПоля Цикл //: Элемент = ЭлементыФормы.Продавец;
		Элемент.УстановитьДействие("Очистка", ДействиеОчитска);
	КонецЦикла;
	
	Документ = НеФиксированныеДанные(Параметры.Модель);
	УстановитьДокумент(Документ);
	
КонецПроцедуры

Функция ПараметрыФормы()
	
	Если _Параметры = Неопределено Тогда
		ВызватьИсключение "Параметры формы не установлены";
	КонецЕсли;
	
	Возврат _Параметры;
	
КонецФункции

//========================================================================
// ЭКСПОРТНЫЙ ИНТЕРФЕЙС
//========================================================================

Функция Параметры() Экспорт
	
	Параметры = Новый Структура(
		"Модель,
		|Ссылка"
	);
	
	Параметры.Модель = Неопределено; //: Модуль_ОбъектнаяМодель.Новый_ТитулПродавцаУПД();
	
	Возврат Параметры;
	
КонецФункции

Функция УстановитьПараметры(Параметры) Экспорт
	
	_Параметры = ФиксированныеДанные(Параметры);
	
КонецФункции

Функция ПроверяемыеРеквизиты() Экспорт
	
	Поля = Новый СписокЗначений;
	
	// Шапка
	
	Поля.Добавить("ФункцияДокументаПредставление",    НСтр("ru = 'Функция документа'"));
	Поля.Добавить("Номер",                            НСтр("ru = 'Номер'"));
	Поля.Добавить("Дата",                             НСтр("ru = 'Дата'"));
	Поля.Добавить("НомерИсправления",                 НСтр("ru = 'Исправление: Номер'"));
	Поля.Добавить("ДатаИсправления",                  НСтр("ru = 'Исправление: Дата'"));

	Поля.Добавить("ПродавецПредставление",            НСтр("ru = 'Продавец'"));
	Поля.Добавить("ПокупательПредставление",          НСтр("ru = 'Покупатель'"));

	Поля.Добавить("ВалютаПредставление",              НСтр("ru = 'Валюта'"));

	// Табличная часть
	
	ПредставлениеТЧ = НСтр("ru = 'Товары (услуги)'");
	Поля.Добавить("ТабличнаяЧасть",                   ПредставлениеТЧ);
	Поля.Добавить("ТабличнаяЧасть.Наименование",      ПредставлениеТЧ + НСтр("ru = '#Наименование товара (описание работ, услуг), прав'"));
	Поля.Добавить("ТабличнаяЧасть.СтавкаНДСДо",       ПредставлениеТЧ + НСтр("ru = '#% НДС (до изменения)'"));
	Поля.Добавить("ТабличнаяЧасть.СтавкаНДСПосле",    ПредставлениеТЧ + НСтр("ru = '#% НДС (после изменения)'"));
	Поля.Добавить("ТабличнаяЧасть.СуммаСНДСДо",       ПредставлениеТЧ + НСтр("ru = '#Сумма (с НДС) (до изменения)'"));
	Поля.Добавить("ТабличнаяЧасть.СуммаСНДСПосле",    ПредставлениеТЧ + НСтр("ru = '#Сумма (с НДС) (после изменения)'"));

	// Данные транспортировки
	
	Поля.Добавить("СодержаниеОперации",               НСтр("ru = 'Содержание операции'"));
	Поля.Добавить("ОснованиеИзмененийПредставление",  НСтр("ru = 'Основание отгрузки'"));

	// Дополнительная информация
	
	ПредставлениеДопИнфо = НСтр("ru = 'Дополнительная информация'");
	Поля.Добавить("ДополнительнаяИнформация.Поле",        ПредставлениеДопИнфо + НСтр("ru = '#Поле'"));
	Поля.Добавить("ДополнительнаяИнформация.Значение",    ПредставлениеДопИнфо + НСтр("ru = '#Значение'"));

	// Подвал
	
	Поля.Добавить("ПодписантПредставление",   НСтр("ru = 'Подписант'"));
	Поля.Добавить("СоставительПредставление", НСтр("ru = 'Составитель'"));
	
	Возврат Поля;
	
КонецФункции

//========================================================================
// СОБЫТИЯ
//========================================================================

//===================================
//{ События формы

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьФорму();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	УстановитьОтображение();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты) Экспорт
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если НЕ ЭтоИсправление Тогда
		НепроверяемыеРеквизиты.Добавить("НомерИсправления");
		НепроверяемыеРеквизиты.Добавить("ДатаИсправления");
	КонецЕсли;
	
	УдалитьНепроверяемыеРеквизиты(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

//}

//===================================
//{ Кнопки формы

Процедура ОсновныеДействияФормыСохранить(Кнопка)
	
	Если НЕ ПроверитьЗаполнениеФормы(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;
	
	Сохранить();
	
КонецПроцедуры

//}

//===================================
//{ События элементов шапки

Процедура ФункцияДокументаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = ПолучитьФорму("Форма_ВыборФункцииДокумента", Элемент);
	
	Параметры = ФормаВыбора.Параметры();
	Параметры.ТекущееЗначение	= ФункцияДокумента;
	Параметры.ЭтоФункцияУПД		= Ложь;
	
	ФормаВыбора.УстановитьПараметры(Параметры);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура ФункцияДокументаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УстановитьФункциюДокумента(ВыбранноеЗначение);
	
КонецПроцедуры

Процедура ЭтоИсправлениеПриИзменении(Элемент)
	
	УстановитьЭтоИсправление(ЭтоИсправление);
	
КонецПроцедуры

Процедура УчитыватьИсправлениеИсходногоДокументаПриИзменении(Элемент)
	
	УстановитьУчитыватьИсправлениеИсходногоДокумента(УчитыватьИсправлениеИсходногоДокумента);
	
КонецПроцедуры

Процедура ПродавецНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	НачатьЗаполнениеКонтрагента(Элемент, Продавец, НСтр("ru = 'Продавец'"));
	
КонецПроцедуры

Процедура ПродавецОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УстановитьПродавца(ВыбранноеЗначение);
	
КонецПроцедуры

Процедура ПокупательНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	НачатьЗаполнениеКонтрагента(Элемент, Покупатель, НСтр("ru = 'Покупатель'"));
	
КонецПроцедуры

Процедура ПокупательОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УстановитьПокупателя(ВыбранноеЗначение);
	
КонецПроцедуры

Процедура ВалютаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = ПолучитьФорму("Форма_ЗаполнениеВалюты", Элемент);
	
	Параметры = ФормаВыбора.Параметры();
	Параметры.Модель = Валюта;
	
	ФормаВыбора.УстановитьПараметры(Параметры);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура ВалютаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УстановитьВалюту(ВыбранноеЗначение);
	
КонецПроцедуры

//}

//===================================
//{ События элементов таблицы ТабличнаяЧасть

Процедура ТабличнаяЧастьПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	НомерСтроки = ТабличнаяЧасть.Индекс(ДанныеСтроки) + 1;
	ОформлениеСтроки.Ячейки.НомерСтроки.УстановитьТекст(Формат(НомерСтроки, "ЧГ="));
	
	УстановитьПредставлениеКолонкиСоСпискомВыбора("СтавкаНДСДо", ЭлементыФормы.ТабличнаяЧасть, ОформлениеСтроки);
	УстановитьПредставлениеКолонкиСоСпискомВыбора("СтавкаНДСПосле", ЭлементыФормы.ТабличнаяЧасть, ОформлениеСтроки);
	
	Ячейки = ОформлениеСтроки.Ячейки;
	Ячейки.ПоказательДо.УстановитьТекст(НСтр("ru = 'А (до изменения)'"));
	Ячейки.ПоказательПосле.УстановитьТекст(НСтр("ru = 'Б (после изменения)'"));
	Ячейки.ПоказательУвеличение.УстановитьТекст(НСтр("ru = 'В (увеличение)'"));
	Ячейки.ПоказательУменьшение.УстановитьТекст(НСтр("ru = 'Г (уменьшение)'"));
	
	Ячейки.ЕдиницаИзмерения.Видимость	= Ложь;
	Ячейки.КоррСчета.Видимость			= Ложь;
	
КонецПроцедуры

Процедура ТабличнаяЧастьНаименованиеЕИДоПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьЕдиницуИзмерения(ТекущаяСтрока, СуффиксыТЧ().До, ТекущаяСтрока.НаименованиеЕИДо);
	
КонецПроцедуры

Процедура ТабличнаяЧастьНаименованиеЕИДоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЕдиницаИзмерения = ВыбранноеЗначение;
	УстановитьЕдиницуИзмерения(ТекущаяСтрока, СуффиксыТЧ().До, ЕдиницаИзмерения.Наименование, ЕдиницаИзмерения.Код);
	
КонецПроцедуры

Процедура ТабличнаяЧастьНаименованиеЕИПослеПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьЕдиницуИзмерения(ТекущаяСтрока, СуффиксыТЧ().После, ТекущаяСтрока.НаименованиеЕИПосле);
	
КонецПроцедуры

Процедура ТабличнаяЧастьНаименованиеЕИПослеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЕдиницаИзмерения = ВыбранноеЗначение;
	УстановитьЕдиницуИзмерения(ТекущаяСтрока, СуффиксыТЧ().После, ЕдиницаИзмерения.Наименование, ЕдиницаИзмерения.Код);
	
КонецПроцедуры

Процедура ТабличнаяЧастьКоличествоДоПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные;
	
	УстановитьКоличество(ТекущаяСтрока, СуффиксыТЧ().До, ТекущаяСтрока.КоличествоДо);
	
КонецПроцедуры

Процедура ТабличнаяЧастьКоличествоПослеПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные;
	
	УстановитьКоличество(ТекущаяСтрока, СуффиксыТЧ().После, ТекущаяСтрока.КоличествоПосле);
	
КонецПроцедуры

Процедура ТабличнаяЧастьЦенаДоПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные;
	
	УстановитьЦену(ТекущаяСтрока, СуффиксыТЧ().До, ТекущаяСтрока.ЦенаДо);
	
КонецПроцедуры

Процедура ТабличнаяЧастьЦенаПослеПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные;
	
	УстановитьЦену(ТекущаяСтрока, СуффиксыТЧ().После, ТекущаяСтрока.ЦенаПосле);
	
КонецПроцедуры

Процедура ТабличнаяЧастьСуммаБезНДСДоПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные;
	
	УстановитьСуммуБезНДС(ТекущаяСтрока, СуффиксыТЧ().До, ТекущаяСтрока.СуммаБезНДСДо);
	
КонецПроцедуры

Процедура ТабличнаяЧастьСуммаБезНДСПослеПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные;
	
	УстановитьСуммуБезНДС(ТекущаяСтрока, СуффиксыТЧ().После, ТекущаяСтрока.СуммаБезНДСПосле);
	
КонецПроцедуры

Процедура ТабличнаяЧастьАкцизДоПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные;
	
	УстановитьАкциз(ТекущаяСтрока, СуффиксыТЧ().До, ТекущаяСтрока.АкцизДо);
	
КонецПроцедуры

Процедура ТабличнаяЧастьАкцизПослеПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные;
	
	УстановитьАкциз(ТекущаяСтрока, СуффиксыТЧ().После, ТекущаяСтрока.АкцизПосле);
	
КонецПроцедуры

Процедура ТабличнаяЧастьСтавкаНДСДоПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные;
	
	УстановитьСтавкуНДС(ТекущаяСтрока, СуффиксыТЧ().До, ТекущаяСтрока.СтавкаНДСДо);
	
КонецПроцедуры

Процедура ТабличнаяЧастьСтавкаНДСПослеПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные;
	
	УстановитьСтавкуНДС(ТекущаяСтрока, СуффиксыТЧ().После, ТекущаяСтрока.СтавкаНДСПосле);
	
КонецПроцедуры

Процедура ТабличнаяЧастьСуммаСНДСДоПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные;
	
	УстановитьСуммуСНДС(ТекущаяСтрока, СуффиксыТЧ().До, ТекущаяСтрока.СуммаСНДСДо);
	
КонецПроцедуры

Процедура ТабличнаяЧастьСуммаСНДСПослеПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТабличнаяЧасть.ТекущиеДанные;
	
	УстановитьСуммуСНДС(ТекущаяСтрока, СуффиксыТЧ().После, ТекущаяСтрока.СуммаСНДСПосле);
	
КонецПроцедуры

//}

//===================================
//{ События элементов страницы ДанныеСогласования

Процедура ОснованиеИзмененийНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ФормаВыбора = ПолучитьФорму("Форма_ЗаполнениеОснования", Элемент);
	
	Параметры = ФормаВыбора.Параметры();
	Параметры.Модель = ОснованиеИзменений;
	
	ФормаВыбора.УстановитьПараметры(Параметры);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура ОснованиеИзмененийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УстановитьОснованиеИзменений(ВыбранноеЗначение);
	
КонецПроцедуры

//}

//===================================
//{ События элементов страницы Дополнительно

Процедура ФакторНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = ПолучитьФорму("Форма_ЗаполнениеФактора", Элемент);
	
	Параметры = ФормаВыбора.Параметры();
	Параметры.Модель = Фактор;
	
	ФормаВыбора.УстановитьПараметры(Параметры);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура ФакторОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УстановитьФактора(Неопределено);
	
КонецПроцедуры

Процедура ФакторОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УстановитьФактора(ВыбранноеЗначение);
	
КонецПроцедуры

//}

//===================================
//{ События элементов таблицы ДополнительнаяИнформация

Процедура ДополнительнаяИнформацияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	НомерСтроки = ДополнительнаяИнформация.Индекс(ДанныеСтроки) + 1;
	ОформлениеСтроки.Ячейки.НомерСтроки.УстановитьТекст(Формат(НомерСтроки, "ЧГ="));
	
КонецПроцедуры

//}

//===================================
//{ События элементов подвала

Процедура ПодписантНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = ПолучитьФорму("Форма_ЗаполнениеПодписанта", Элемент);
	
	Параметры = ФормаВыбора.Параметры();
	Параметры.Модель		= Подписант;
	Параметры.ТипДокумента	= ОбъектнаяМодель.ТипыДокументов().ТитулПродавцаУПД;
	
	ФормаВыбора.УстановитьПараметры(Параметры);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура ПодписантОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УстановитьПодписанта(ВыбранноеЗначение);
	
КонецПроцедуры

Процедура СоставительНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = ПолучитьФорму("Форма_ЗаполнениеСоставителяДокумента", Элемент);
	
	Параметры = ФормаВыбора.Параметры();
	Параметры.Модель = Составитель;
	
	ФормаВыбора.УстановитьПараметры(Параметры);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура СоставительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УстановитьСоставителя(ВыбранноеЗначение);
	
КонецПроцедуры

//}

//===================================
//{ Команды

Процедура Сохранить()
	
	Модель = Документ();
	
	ТипыДокумента = ОбъектнаяМодель.ТипыДокументов();
	
	ТипДокумента = ?(НЕ ЭтоИсправление,
		ТипыДокумента.ТитулПродавцаУКД,
		ТипыДокумента.ИсправленныйТитулПродавцаУКД
	);
	
	РезультатСериализации = ФормированиеДокументов.МодельВДокумент(ТипДокумента, Модель);
	Если РезультатСериализации.ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;
	
	Результат = ФормированиеДокументов.Новый_ОтредактированныйДокумент();
	Результат.Ссылка				= Ссылка;
	Результат.Модель				= Модель;
	Результат.ТипДокумента			= ТипДокумента;
	Результат.ВидДокумента			= Модель.ВидДокумента;
	Результат.РезультатСериализации	= РезультатСериализации;
	
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

//}

//===================================
//{ Общие обработчики

// Обработчик для полей, для которых не нужна очистка,
// чтобы пользователь не мог эту самую очистку вызывать.
Процедура Подключаемый_ОтменаОчистки(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

//}

//========================================================================
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//========================================================================

Процедура УстановитьОтображение()
	
	ЭлементыФормы.Исправление.Доступность					= ЭтоИсправление;
	ЭлементыФормы.ИсправлениеИсходногоДокумента.Доступность	= УчитыватьИсправлениеИсходногоДокумента;
	
КонецПроцедуры

Процедура УстановитьПредставлениеКолонкиСоСпискомВыбора(ИмяКолонки, ТабличноеПоле, ОформлениеСтроки)
	
	ДанныеСтроки = ОформлениеСтроки.ДанныеСтроки;
	
	СписокВыбора = ТабличноеПоле.Колонки[ИмяКолонки].ЭлементУправления.СписокВыбора; //: СписокВыбора = Новый СписокЗначений;
	ЭлементСписка = СписокВыбора.НайтиПоЗначению(ДанныеСтроки[ИмяКолонки]);
	Если ЭлементСписка <> Неопределено Тогда
		ОформлениеСтроки.Ячейки[ИмяКолонки].УстановитьТекст(ЭлементСписка.Представление);
	КонецЕсли;
	
КонецПроцедуры

Функция СуффиксыТЧ()
	
	Суффиксы = Новый Структура(
		"До,
		|После,
		|Увеличение,
		|Уменьшение"
	);
	
	Для Каждого Суффикс Из Суффиксы Цикл
		Суффиксы[Суффикс.Ключ] = Суффикс.Ключ;
	КонецЦикла;
	
	Суффиксы = Новый_Перечисление(Суффиксы);
	
	Возврат Суффиксы;
	
КонецФункции

Процедура ПересчитатьУвеличениеУменьшение(СтрокаТЧ)
	
	ИменаКолонок = "СуммаБезНДС, СуммаНДС, СуммаСНДС, Акциз";
	
	ДоПослеУвелУмен = ПоляССуффиксами(
		ИменаКолонок,
		"До, После, Увеличение, Уменьшение"
	);
	
	СписокКолонок = СтрРазделить2(ИменаКолонок, ",",, Истина);
	
	Для Каждого ИмяКолонки Из СписокКолонок Цикл
		
		До			= ДоПослеУвелУмен.До[ИмяКолонки];
		После		= ДоПослеУвелУмен.После[ИмяКолонки];
		Увеличение	= ДоПослеУвелУмен.Увеличение[ИмяКолонки];
		Уменьшение	= ДоПослеУвелУмен.Уменьшение[ИмяКолонки];
		
		Разность = СтрокаТЧ[После] - СтрокаТЧ[До];
		
		Если Разность > 0 Тогда
			СтрокаТЧ[Увеличение] = Разность;
			СтрокаТЧ[Уменьшение] = 0;
		Иначе
			СтрокаТЧ[Увеличение] = 0;
			СтрокаТЧ[Уменьшение] = -Разность;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//===================================
//{ Геттеры и сеттеры

// Модель документа

Процедура УстановитьДокумент(Документ)
	
	УстановитьФункциюДокумента(Документ.ВидДокумента);
	
	Номер = Документ.Описание.Номер;
	Дата = Документ.Описание.Дата;
	
	УстановитьИсправление(Документ.Описание.ИсправлениеНомер, Документ.Описание.ИсправлениеДата);
	
	ИсходныйДокумент = Документ.ИсходныеДокументы[0];
	НомерИсходногоДокумента	= ИсходныйДокумент.Номер;
	ДатаИсходногоДокумента	= ИсходныйДокумент.Дата;
	
	УстановитьИсправлениеИсходногоДокумента(ИсходныйДокумент.ИсправлениеНомер, ИсходныйДокумент.ИсправлениеДата);
	
	УстановитьПродавца(Документ.Продавец);
	УстановитьПокупателя(Документ.Покупатель);
	
	УстановитьВалюту(Документ.Валюта);
	
	ИдГосКонтракта = Документ.ИдГосКонтракта;
	
	СодержаниеОперации	= Документ.ИнформацияПродавца.СведенияОбОперации.Описание;
	
	ДатаОтправкиНаСогласование	= Документ.ИнформацияПродавца.СведенияОбОперации.Дата;
	ПередаточныеДокументы		= Документ.ПередаточныеДокументы;
	ИныеСведения				= Документ.ДопИнфо;
	
	Основания = Документ.Основание;
	Если Основания.Количество() > 0 Тогда
		УстановитьОснованиеИзменений(Основания[0]);
	КонецЕсли;
	
	ДоПосле = ПоляССуффиксами(
		"Количество, ЕИКод, ЕИНаименование, Цена, СтавкаНДС, СуммаБезНДС, СуммаНДС, СуммаСНДС, Акциз",
		"До, После"
	);
	
	ДоПослеФормы = ПоляССуффиксами(
		"Количество, КодЕИ, НаименованиеЕИ, Цена, СтавкаНДС, СуммаБезНДС, СуммаНДС, СуммаСНДС, Акциз",
		"До, После"
	);
	
	УвелУмен = ПоляССуффиксами(
		"СуммаБезНДС, СуммаНДС, СуммаСНДС, Акциз",
		"Увеличение, Уменьшение"
	); //: УвелУмен = Новый Структура;
	
	Для Каждого СтрокаТЧ Из Документ.ИзмененияТМЦ.ТабличнаяЧасть Цикл
		
		НоваяСтрока = ТабличнаяЧасть.Добавить();
		
		НоваяСтрока.Наименование = СтрокаТЧ.Наименование;
		
		НоваяСтрока.СчетДт = СтрокаТЧ.СчетДт;
		НоваяСтрока.СчетКт = СтрокаТЧ.СчетКт;		
		
		Для Каждого Суффикс Из ДоПосле Цикл
			
			Поля = Суффикс.Значение;
			ПоляФормы = ДоПослеФормы[Суффикс.Ключ];
			
			НоваяСтрока[ПоляФормы.КодЕИ]			= СтрокаТЧ[Поля.ЕИКод];
			НоваяСтрока[ПоляФормы.НаименованиеЕИ]	= СтрокаТЧ[Поля.ЕИНаименование];
			
			НоваяСтрока[ПоляФормы.Количество]		= СтрокаТЧ[Поля.Количество];
			НоваяСтрока[ПоляФормы.Цена]				= СтрокаТЧ[Поля.Цена];
			НоваяСтрока[ПоляФормы.СуммаБезНДС]		= СтрокаТЧ[Поля.СуммаБезНДС];
			НоваяСтрока[ПоляФормы.СуммаСНДС]		= СтрокаТЧ[Поля.СуммаСНДС];
		
			НоваяСтрока[ПоляФормы.СтавкаНДС]		= СтрокаТЧ[Поля.СтавкаНДС];
			НоваяСтрока[ПоляФормы.СуммаНДС]			= СтрокаТЧ[Поля.СуммаНДС];
			
			НоваяСтрока[ПоляФормы.Акциз]			= СтрокаТЧ[Поля.Акциз];
			
		КонецЦикла;
		
		Для Каждого Суффикс Из УвелУмен Цикл
			
			Поля = Суффикс.Значение;
			
			НоваяСтрока[Поля.СуммаБезНДС]	= СтрокаТЧ[Поля.СуммаБезНДС];
			НоваяСтрока[Поля.СуммаНДС]		= СтрокаТЧ[Поля.СуммаНДС];
			НоваяСтрока[Поля.СуммаСНДС]		= СтрокаТЧ[Поля.СуммаСНДС];
			
			НоваяСтрока[Поля.Акциз]			= СтрокаТЧ[Поля.Акциз];
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого СтрокаИнфПоле Из Документ.ИнфПоле Цикл
		НовоеПоле = ДополнительнаяИнформация.Добавить();
		НовоеПоле.Поле		= СтрокаИнфПоле.Идентификатор;
		НовоеПоле.Значение	= СтрокаИнфПоле.Значение;
	КонецЦикла;
	
	Подписанты = Документ.ИнформацияПродавца.Подписанты;
	Если Подписанты.Количество() > 0 Тогда
		УстановитьПодписанта(Подписанты[0]);
	КонецЕсли;
	
	УстановитьСоставителя(Документ.ИнформацияПродавца.Составитель);
	
	УстановитьФактора(Документ.Фактор);
	
КонецПроцедуры

Функция Документ()
	
	Документ = ОбъектнаяМодель.Новый_ТитулПродавцаУКД();
	
	Документ.ВидДокумента = ФункцияДокумента;
	
	Документ.Описание.Номер	= Номер;
	Документ.Описание.Дата	= Дата;
	
	Если ЭтоИсправление Тогда
		Документ.Описание.ИсправлениеНомер	= НомерИсправления;
		Документ.Описание.ИсправлениеДата	= ДатаИсправления;
	КонецЕсли;
	
	ИсходныйДокумент = ОбъектнаяМодель.Новый_ИсходныйДокумент();
	ИсходныйДокумент.Номер	= НомерИсходногоДокумента;
	ИсходныйДокумент.Дата	= ДатаИсходногоДокумента;
	
	Если УчитыватьИсправлениеИсходногоДокумента Тогда
		ИсходныйДокумент.ИсправлениеНомер	= НомерИсправленияИсходногоДокумента;
		ИсходныйДокумент.ИсправлениеДата	= ДатаИсправленияИсходногоДокумента;
	КонецЕсли;
	
	Документ.ИсходныеДокументы.Добавить(ИсходныйДокумент);
	
	Документ.Продавец	= Продавец;
	Документ.Покупатель	= Покупатель;
	
	Документ.Валюта = Валюта;
	
	Документ.ИдГосКонтракта = ИдГосКонтракта;
	
	Документ.ИнформацияПродавца.СведенияОбОперации.Описание	= СодержаниеОперации;
	
	Документ.ИнформацияПродавца.СведенияОбОперации.Дата	= ДатаОтправкиНаСогласование;
	Документ.ПередаточныеДокументы						= ПередаточныеДокументы;
	Документ.ДопИнфо									= ИныеСведения;
	
	Документ.Основание.Добавить(ОснованиеИзменений);
	
	ДоПосле = ПоляССуффиксами(
		"Количество, ЕИКод, ЕИНаименование, Цена, СтавкаНДС, СуммаБезНДС, СуммаНДС, СуммаСНДС, Акциз",
		"До, После"
	);
	
	ДоПослеФормы = ПоляССуффиксами(
		"Количество, КодЕИ, НаименованиеЕИ, Цена, СтавкаНДС, СуммаБезНДС, СуммаНДС, СуммаСНДС, Акциз",
		"До, После"
	);
	
	УвелУмен = ПоляССуффиксами(
		"СуммаБезНДС, СуммаНДС, СуммаСНДС, Акциз",
		"Увеличение, Уменьшение"
	); //: УвелУмен = Новый Структура;
	
	Для Каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
		
		НоваяСтрока = Документ.ИзмененияТМЦ.ТабличнаяЧасть.Добавить();
		
		НоваяСтрока.Наименование = СтрокаТЧ.Наименование;
		
		НоваяСтрока.СчетДт = СтрокаТЧ.СчетДт;
		НоваяСтрока.СчетКт = СтрокаТЧ.СчетКт; 
		
		Для Каждого Суффикс Из ДоПосле Цикл
			
			Поля = Суффикс.Значение;
			ПоляФормы = ДоПослеФормы[Суффикс.Ключ];
			
			НоваяСтрока[Поля.ЕИКод]				= СтрокаТЧ[ПоляФормы.КодЕИ];
			НоваяСтрока[Поля.ЕИНаименование]	= СтрокаТЧ[ПоляФормы.НаименованиеЕИ];
			
			НоваяСтрока[Поля.Количество]		= СтрокаТЧ[ПоляФормы.Количество];
			НоваяСтрока[Поля.Цена]				= СтрокаТЧ[ПоляФормы.Цена];
			НоваяСтрока[Поля.СуммаБезНДС]		= СтрокаТЧ[ПоляФормы.СуммаБезНДС];
			НоваяСтрока[Поля.СуммаСНДС]			= СтрокаТЧ[ПоляФормы.СуммаСНДС];
		
			НоваяСтрока[Поля.СтавкаНДС]			= СтрокаТЧ[ПоляФормы.СтавкаНДС];
			НоваяСтрока[Поля.СуммаНДС]			= СтрокаТЧ[ПоляФормы.СуммаНДС];
			
			НоваяСтрока[Поля.Акциз]				= СтрокаТЧ[ПоляФормы.Акциз];
			
		КонецЦикла;
		
		Для Каждого Суффикс Из УвелУмен Цикл
			
			Поля = Суффикс.Значение;
			
			НоваяСтрока[Поля.СуммаБезНДС]	= СтрокаТЧ[Поля.СуммаБезНДС];
			НоваяСтрока[Поля.СуммаНДС]		= СтрокаТЧ[Поля.СуммаНДС];
			НоваяСтрока[Поля.СуммаСНДС]		= СтрокаТЧ[Поля.СуммаСНДС];
			
			НоваяСтрока[Поля.Акциз]			= СтрокаТЧ[Поля.Акциз];
			
		КонецЦикла;
		
	КонецЦикла;
	
	// TODO: Нормальный расчет итогов
	Для Каждого Итого Из Документ.ИзмененияТМЦ.Итого Цикл
		Документ.ИзмененияТМЦ.Итого[Итого.Ключ] = Документ.ИзмененияТМЦ.ТабличнаяЧасть.Итог(Итого.Ключ);
	КонецЦикла;
	
	Для Каждого СтрокаДопИнфо Из ДополнительнаяИнформация Цикл
		НовоеПоле = Документ.ИнфПоле.Добавить();
		НовоеПоле.Идентификатор	= СтрокаДопИнфо.Поле;
		НовоеПоле.Значение		= СтрокаДопИнфо.Значение;
	КонецЦикла;
	
	Документ.ИнформацияПродавца.Подписанты.Добавить(Подписант);
	
	Документ.ИнформацияПродавца.Составитель = Составитель;
	
	Документ.Фактор = Фактор;
	
	Возврат Документ;
	
КонецФункции

// Шапка

Процедура УстановитьФункциюДокумента(НовоеЗначение)
	
	ФункцияДокумента				= НовоеЗначение;
	ФункцияДокументаПредставление	= ПредставлениеПеречисления(ОбъектнаяМодель.ВидыУКД(), ФункцияДокумента);
	
КонецПроцедуры

Процедура УстановитьЭтоИсправление(НовоеЗначение)
	
	ЭтоИсправление = НовоеЗначение;
	
	УстановитьОтображение();
	
КонецПроцедуры

Процедура УстановитьИсправление(НовыйНомерИсправления, НоваяДатаИсправления)
	
	НомерИсправления	= НовыйНомерИсправления;
	ДатаИсправления		= НоваяДатаИсправления;
	
	Исправление = Ложь
		ИЛИ ЗначениеЗаполнено(НомерИсправления)
		ИЛИ ЗначениеЗаполнено(ДатаИсправления);
		
	УстановитьЭтоИсправление(Исправление);
	
КонецПроцедуры

Процедура УстановитьУчитыватьИсправлениеИсходногоДокумента(НовоеЗначение)
	
	УчитыватьИсправлениеИсходногоДокумента = НовоеЗначение;
	
	УстановитьОтображение();
	
КонецПроцедуры

Процедура УстановитьИсправлениеИсходногоДокумента(НовыйНомерИсправления, НоваяДатаИсправления)
	
	НомерИсправленияИсходногоДокумента	= НовыйНомерИсправления;
	ДатаИсправленияИсходногоДокумента	= НоваяДатаИсправления;
	
	Исправление = Ложь
		ИЛИ ЗначениеЗаполнено(НовыйНомерИсправления)
		ИЛИ ЗначениеЗаполнено(НоваяДатаИсправления);
		
	УстановитьУчитыватьИсправлениеИсходногоДокумента(Исправление);
	
КонецПроцедуры

Процедура УстановитьПродавца(Контрагент)
	
	Продавец				= Контрагент;
	ПродавецПредставление	= ОбъектнаяМодель.КонтрагентПредставлениеДляUI(Контрагент);
	
КонецПроцедуры

Процедура УстановитьПокупателя(Контрагент)
	
	Покупатель				= Контрагент;
	ПокупательПредставление	= ОбъектнаяМодель.КонтрагентПредставлениеДляUI(Контрагент);
	
КонецПроцедуры

Процедура УстановитьВалюту(НоваяВалюта)
	
	Валюта				= НоваяВалюта;
	ВалютаПредставление	= ОбъектнаяМодель.ВалютаПредставлениеДляUI(Валюта);
	
КонецПроцедуры

// Табличная часть

Процедура УстановитьЗначенияРеквизитовТЧ(СтрокаТЧ, Суффикс, РеквизитыТЧ)
	
	ПоляТЧ = СтрРазделить2(
		"Количество, Цена, СтавкаНДС, СуммаБезНДС, СуммаНДС, СуммаСНДС",
		",",, Истина
	);
	
	Для Каждого ИмяРеквизита Из ПоляТЧ Цикл
		ИмяРеквизитаТЧ = ИмяРеквизита + Суффикс;
		СтрокаТЧ[ИмяРеквизитаТЧ] = РеквизитыТЧ[ИмяРеквизита];
	КонецЦикла;
	
КонецПроцедуры

Функция ЗначенияРеквизитовТЧ(СтрокаТЧ, Суффикс)
	
	ПоляТЧ = СтрРазделить2(
		"Количество, Цена, СтавкаНДС, СуммаБезНДС, СуммаНДС, СуммаСНДС",
		",",, Истина
	);
	
	РеквизитыТЧ = РаботаСФормами.Новый_РеквизитыТЧ();
	
	Для Каждого ИмяРеквизита Из ПоляТЧ Цикл
		ИмяРеквизитаТЧ = ИмяРеквизита + Суффикс;
		РеквизитыТЧ[ИмяРеквизита] = СтрокаТЧ[ИмяРеквизитаТЧ];
	КонецЦикла;
	
	Возврат РеквизитыТЧ;
	
КонецФункции

Процедура УстановитьЕдиницуИзмерения(СтрокаТЧ, Суффикс, Наименование, Код = Неопределено)
	
	//: СтрокаТЧ = ТабличнаяЧасть[0];
	
	ИмяНаименоавние	= "НаименованиеЕИ" + Суффикс;
	ИмяКод			= "КодЕИ" + Суффикс;
	
	СтрокаТЧ[ИмяНаименоавние]	= Наименование;
	СтрокаТЧ[ИмяКод]			= ЗаполненноеЗначение(Код, "0000");
	
КонецПроцедуры

Процедура УстановитьКоличество(СтрокаТЧ, Суффикс, НовоеЗначение)
	
	РеквизитыТЧ = ЗначенияРеквизитовТЧ(СтрокаТЧ, Суффикс);
	РеквизитыТЧ.Количество = НовоеЗначение;
	
	РаботаСФормами.ПересчитатьЗначенияРеквизитовТЧ(РеквизитыТЧ, РаботаСФормами.ИзмененныеРеквизитыТЧ().Количество);
	
	УстановитьЗначенияРеквизитовТЧ(СтрокаТЧ, Суффикс, РеквизитыТЧ);
	
	ПересчитатьУвеличениеУменьшение(СтрокаТЧ);
	
КонецПроцедуры

Процедура УстановитьЦену(СтрокаТЧ, Суффикс, НовоеЗначение)
	
	РеквизитыТЧ = ЗначенияРеквизитовТЧ(СтрокаТЧ, Суффикс);
	РеквизитыТЧ.Цена = НовоеЗначение;
	
	РаботаСФормами.ПересчитатьЗначенияРеквизитовТЧ(РеквизитыТЧ, РаботаСФормами.ИзмененныеРеквизитыТЧ().Цена);
	
	УстановитьЗначенияРеквизитовТЧ(СтрокаТЧ, Суффикс, РеквизитыТЧ);
	
	ПересчитатьУвеличениеУменьшение(СтрокаТЧ);
	
КонецПроцедуры

Процедура УстановитьСтавкуНДС(СтрокаТЧ, Суффикс, НовоеЗначение)
	
	РеквизитыТЧ = ЗначенияРеквизитовТЧ(СтрокаТЧ, Суффикс);
	РеквизитыТЧ.СтавкаНДС = НовоеЗначение;
	
	РаботаСФормами.ПересчитатьЗначенияРеквизитовТЧ(РеквизитыТЧ, РаботаСФормами.ИзмененныеРеквизитыТЧ().СтавкаНДС);
	
	УстановитьЗначенияРеквизитовТЧ(СтрокаТЧ, Суффикс, РеквизитыТЧ);
	
	ПересчитатьУвеличениеУменьшение(СтрокаТЧ);
	
КонецПроцедуры

Процедура УстановитьСуммуБезНДС(СтрокаТЧ, Суффикс, НовоеЗначение)
	
	РеквизитыТЧ = ЗначенияРеквизитовТЧ(СтрокаТЧ, Суффикс);
	РеквизитыТЧ.СуммаБезНДС = НовоеЗначение;
	
	РаботаСФормами.ПересчитатьЗначенияРеквизитовТЧ(РеквизитыТЧ, РаботаСФормами.ИзмененныеРеквизитыТЧ().СуммаБезНДС);
	
	УстановитьЗначенияРеквизитовТЧ(СтрокаТЧ, Суффикс, РеквизитыТЧ);
	
	ПересчитатьУвеличениеУменьшение(СтрокаТЧ);
	
КонецПроцедуры

Процедура УстановитьСуммуСНДС(СтрокаТЧ, Суффикс, НовоеЗначение)
	
	РеквизитыТЧ = ЗначенияРеквизитовТЧ(СтрокаТЧ, Суффикс);
	РеквизитыТЧ.СуммаСНДС = НовоеЗначение;
	
	РаботаСФормами.ПересчитатьЗначенияРеквизитовТЧ(РеквизитыТЧ, РаботаСФормами.ИзмененныеРеквизитыТЧ().СуммаСНДС);
	
	УстановитьЗначенияРеквизитовТЧ(СтрокаТЧ, Суффикс, РеквизитыТЧ);
	
	ПересчитатьУвеличениеУменьшение(СтрокаТЧ);
	
КонецПроцедуры

Процедура УстановитьАкциз(СтрокаТЧ, Суффикс, НовоеЗначение)
	
	ИмяРеквизита = "Акциз" + Суффикс;
	СтрокаТЧ[ИмяРеквизита] = НовоеЗначение;
	
	ПересчитатьУвеличениеУменьшение(СтрокаТЧ);
	
КонецПроцедуры

// Операции и транспортировка

Процедура УстановитьОснованиеИзменений(НовоеЗначение)
	
	ОснованиеИзменений				= НовоеЗначение;
	ОснованиеИзмененийПредставление	= ОбъектнаяМодель.ОснованиеПредставлениеДляUI(ОснованиеИзменений);
	
КонецПроцедуры

// Дополнительно

Процедура УстановитьФактора(НовоеЗначение)
	
	Фактор				= НовоеЗначение;
	ФакторПредставление	= ОбъектнаяМодель.ФакторПредставлениеДляUI(Фактор);
	
КонецПроцедуры

// Подвал

Процедура УстановитьПодписанта(НовоеЗначение)
	
	Подписант = НовоеЗначение;
	ПодписантПредставление = ОбъектнаяМодель.ПодписантПредставление(Подписант);
	
КонецПроцедуры

Процедура УстановитьСоставителя(НовоеЗначение)
	
	Составитель					= НовоеЗначение;
	СоставительПредставление	= ОбъектнаяМодель.СоставительДокументаПредставление(Составитель);
	
КонецПроцедуры

//}

Функция СписокВыбораЕдиницыИзмерения()
	
	СписокВыбора = Новый СписокЗначений;
	
	ВсеЕИ = Классификаторы.ВсеЕдиинцыИзмерения();
	Для Каждого ЕдиницаИзмерения Из ВсеЕИ Цикл
		СписокВыбора.Добавить(ЕдиницаИзмерения, ЕдиницаИзмерения.Наименование);
	КонецЦикла;
	
	Возврат СписокВыбора;
	
КонецФункции

Функция СписокВыбораСодержаниеОперации()
	
	СписокВыбора = Новый СписокЗначений;
	
	СписокВыбора.Добавить(НСтр("ru = 'Предлагаю изменить стоимость'"));
	СписокВыбора.Добавить(НСтр("ru = 'Уведомляю об изменении стоимости'"));
	
	Возврат СписокВыбора;
	
КонецФункции

Процедура НачатьЗаполнениеКонтрагента(Элемент, Контрагент, ВидКонтрагента)
	
	ФормаВыбора = ПолучитьФорму("Форма_ЗаполнениеКонтрагента", Элемент);
	
	Параметры = ФормаВыбора.Параметры();
	Параметры.ЗаголовокФормы	= ВидКонтрагента;
	Параметры.Модель			= Контрагент;
	
	ФормаВыбора.УстановитьПараметры(Параметры);
	ФормаВыбора.Открыть();
	
КонецПроцедуры


Инициализировать();
