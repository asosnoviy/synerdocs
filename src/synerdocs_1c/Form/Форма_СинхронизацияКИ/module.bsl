
Перем _ИмяФормы;

//========================================================================
// ЭКСПОРТНЫЙ ИНТЕРФЕЙС
//========================================================================

Функция ИмяФормы() Экспорт
	
	Если _ИмяФормы = Неопределено Тогда
		_ИмяФормы = ПолучитьИмяФормы(ЭтаФорма);
	КонецЕсли;
	
	Возврат _ИмяФормы;
	
КонецФункции


Процедура ПриОткрытии()
	
	УстановитьЗаголовокОкна(ЭтаФорма, "Синхронизация контактной информации");
	
	ИнициализироватьФорму();
	
КонецПроцедуры

Процедура ИнициализироватьФорму()
	
	Заполнить();
	УстановитьВидимость();
	
КонецПроцедуры

// Процедура устанавливает доступность и видимость полей в зависимости от режима открытия формы
//
// Параметры:
//  Нет
//
Процедура УстановитьВидимость()
	
	Если РоссийскийАдрес Тогда
		ЭлементыФормы.ПанельАдреса.ТекущаяСтраница = ЭлементыФормы.ПанельАдреса.Страницы.РегламентированныйАдрес;
	Иначе
		ЭлементыФормы.ПанельАдреса.ТекущаяСтраница = ЭлементыФормы.ПанельАдреса.Страницы.ПроизвольныйАдрес;
	КонецЕсли;
	
	Если Syn_РоссийскийАдрес Тогда
		ЭлементыФормы.Syn_ПанельАдреса.ТекущаяСтраница = ЭлементыФормы.Syn_ПанельАдреса.Страницы.РегламентированныйАдрес;
	Иначе
		ЭлементыФормы.Syn_ПанельАдреса.ТекущаяСтраница = ЭлементыФормы.Syn_ПанельАдреса.Страницы.ПроизвольныйАдрес;
	КонецЕсли;
	
	Если РоссийскийАдресФакт Тогда
		ЭлементыФормы.ПанельАдресаФакт.ТекущаяСтраница = ЭлементыФормы.ПанельАдресаФакт.Страницы.РегламентированныйАдресФакт;
	Иначе
		ЭлементыФормы.ПанельАдресаФакт.ТекущаяСтраница = ЭлементыФормы.ПанельАдресаФакт.Страницы.ПроизвольныйАдресФакт;
	КонецЕсли;
	
	Если Syn_РоссийскийАдресФакт Тогда
		ЭлементыФормы.Syn_ПанельАдресаФакт.ТекущаяСтраница = ЭлементыФормы.Syn_ПанельАдресаФакт.Страницы.РегламентированныйАдресФакт;
	Иначе
		ЭлементыФормы.Syn_ПанельАдресаФакт.ТекущаяСтраница = ЭлементыФормы.Syn_ПанельАдресаФакт.Страницы.ПроизвольныйАдресФакт;
	КонецЕсли;
	
	ЭтоКонтрагент 	= ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты");
    ЭтоБух			= Метаданные.Имя = "БухгалтерияПредприятия";
	
	Если ЭтоБух И ЭтоКонтрагент Тогда
		ЭлементыФормы.НадписьФакс.Видимость = Ложь;
		ЭлементыФормы.ФаксКонтр.Видимость = Ложь;
	КонецЕсли;
		
	// Покрасим все поля если отличаются значения 1С и сервиса
	Для Каждого Элемент Из ЭлементыФормы  Цикл
		Если ТипЗнч(Элемент) = Тип("ПолеВвода") И НЕ Лев(Элемент.Имя, 4) = "Syn_" Тогда
			ЭлементSyn = ЭлементыФормы.Найти("Syn_" + Элемент.Имя);
			
			Если НЕ ЭлементSyn = Неопределено Тогда
				Если НЕ СокрЛП(Элемент.Значение) = СокрЛП(ЭлементSyn.Значение) Тогда
					Элемент.ЦветТекстаПоля = WebЦвета.Красный;
				Иначе
					Элемент.ЦветТекстаПоля = WebЦвета.Черный;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыСинхронизироватьSynerdocs1С(Кнопка)
	
	СинхронизироватьАдрес(Истина);
	СинхронизироватьАдрес();
	СинхронизироватьОбщее();
	
	ИнициализироватьФорму();
	
КонецПроцедуры

Процедура Заполнить()
	
	ЗаполнитьАдреса(Истина);
	ЗаполнитьАдреса();
	
КонецПроцедуры

Процедура ЗаполнитьАдреса(ЮрАдрес = Ложь)
		
	//заполняем поля контрагента 1С
	ЭтоОрганизация 	= НЕ ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты");
	ЭтоИП			= Контрагент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо;
	ФизЛицо			= Контрагент;
	
	Если ЭтоОрганизация Тогда
		Если Контрагент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
			Если ЕстьРеквизитСправочника("ИндивидуальныйПредприниматель", Метаданные.Справочники.Организации) Тогда
				ФизЛицо 	=  Контрагент.ИндивидуальныйПредприниматель;
				ТипАдреса 	= ?(ЮрАдрес, Справочники.ВидыКонтактнойИнформации.ЮрАдресФизЛица, Справочники.ВидыКонтактнойИнформации.ФактАдресФизЛица);
			Иначе      
				ФизЛицо 	= Контрагент;
				ТипАдреса 	= ?(ЮрАдрес, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации, Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
			КонецЕсли;
			
			АдресКонтрагента = ПолучитьАдресКонтрагента(Контрагент, Истина, ТипАдреса);
		Иначе
			ТипАдреса 			= ?(ЮрАдрес, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации, Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
			АдресКонтрагента 	= ПолучитьАдресКонтрагента(Контрагент, Истина, ТипАдреса);
		КонецЕсли;
	Иначе
		ТипАдреса 			= ?(ЮрАдрес, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента, Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации); 
	    АдресКонтрагента 	= ПолучитьАдресКонтрагента(Контрагент, Неопределено, ТипАдреса);
	КонецЕсли;
    				
	Если АдресКонтрагента <> НЕОПРЕДЕЛЕНО Тогда
		//определяем вид адреса (РФ или иностранный)
		НаборЗаписейКИ = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей(); 
		НаборЗаписейКИ.Отбор.Объект.Установить(ФизЛицо);
		НаборЗаписейКИ.Отбор.Тип.Установить(Перечисления.ТипыКонтактнойИнформации.Адрес);
		НаборЗаписейКИ.Отбор.Вид.Установить(ТипАдреса);
	   		
		НаборЗаписейКИ.Прочитать();
		
		Если НаборЗаписейКИ.Количество() > 0 Тогда
			ЗаписьКИ = НаборЗаписейКИ[0];
						
			Если НЕ ЮрАдрес Тогда
			//	РоссийскийАдресФакт = (ВРЕГ(УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдреса(ЗаписьКИ)) = ВРЕГ(ЗаписьКИ.Представление)); WTF ??
				РоссийскийАдресФакт = АдресКонтрагента.АдресРФ; 
				
				Если РоссийскийАдресФакт Тогда
					КодРегионаФакт		= ?(АдресКонтрагента.Свойство("КодРегион"), Формат(АдресКонтрагента.КодРегион, "ЧЦ=2; ЧВН="), "");
					ИндексФакт 			= ?(АдресКонтрагента.Свойство("Индекс"), АдресКонтрагента.Индекс, "");
					РегионФакт 			= ?(АдресКонтрагента.Свойство("Регион"), АдресКонтрагента.Регион, "");
					РайонФакт 			= ?(АдресКонтрагента.Свойство("Район"), АдресКонтрагента.Район, "");
					ГородФакт 			= ?(АдресКонтрагента.Свойство("Город"), АдресКонтрагента.Город, "");
					НаселенныйПунктФакт = ?(АдресКонтрагента.Свойство("НаселПункт"), АдресКонтрагента.НаселПункт, "");
					УлицаФакт 			= ?(АдресКонтрагента.Свойство("Улица"), АдресКонтрагента.Улица, "");
					ДомФакт 			= ?(АдресКонтрагента.Свойство("Дом"), АдресКонтрагента.Дом, "");
					КорпусФакт 			= ?(АдресКонтрагента.Свойство("Корпус"), АдресКонтрагента.Корпус, "");
					КвартираФакт 		= ?(АдресКонтрагента.Свойство("Кварт"), АдресКонтрагента.Кварт, "");
					ПредставлениеРФФакт = ?(АдресКонтрагента.Свойство("Представление"), АдресКонтрагента.Представление, "");
				Иначе
					КодСтраныФакт 		= ?(АдресКонтрагента.Свойство("КодСтр"), АдресКонтрагента.КодСтр, "");
					СтранаФакт 			= Справочники.КлассификаторСтранМира.НайтиПоКоду(КодСтраныФакт);
					ПредставлениеФакт 	= ?(АдресКонтрагента.Свойство("АдрТекст"), АдресКонтрагента.АдрТекст, "");
				КонецЕсли;
			Иначе
			//	РоссийскийАдрес = (ВРЕГ(УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдреса(ЗаписьКИ)) = ВРЕГ(ЗаписьКИ.Представление)); WTF???
			    РоссийскийАдрес 	= АдресКонтрагента.АдресРФ; 
			
				Если РоссийскийАдрес Тогда
					КодРегиона		= ?(АдресКонтрагента.Свойство("КодРегион"), Формат(АдресКонтрагента.КодРегион, "ЧЦ=2; ЧВН="), "");
					Индекс 			= ?(АдресКонтрагента.Свойство("Индекс"), АдресКонтрагента.Индекс, "");
					Регион 			= ?(АдресКонтрагента.Свойство("Регион"), АдресКонтрагента.Регион, "");
					Район 			= ?(АдресКонтрагента.Свойство("Район"), АдресКонтрагента.Район, "");
					Город 			= ?(АдресКонтрагента.Свойство("Город"), АдресКонтрагента.Город, "");
					НаселенныйПункт = ?(АдресКонтрагента.Свойство("НаселПункт"), АдресКонтрагента.НаселПункт, "");
					Улица 			= ?(АдресКонтрагента.Свойство("Улица"), АдресКонтрагента.Улица, "");
					Дом 			= ?(АдресКонтрагента.Свойство("Дом"), АдресКонтрагента.Дом, "");
					Корпус 			= ?(АдресКонтрагента.Свойство("Корпус"), АдресКонтрагента.Корпус, "");
					Квартира 		= ?(АдресКонтрагента.Свойство("Кварт"), АдресКонтрагента.Кварт, "");
					ПредставлениеРФ = ?(АдресКонтрагента.Свойство("Представление"), АдресКонтрагента.Представление, "");
				Иначе
					КодСтраны 		= ?(АдресКонтрагента.Свойство("КодСтр"), АдресКонтрагента.КодСтр, "");
					Страна 			= Справочники.КлассификаторСтранМира.НайтиПоКоду(КодСтраны);
					Представление 	= ?(АдресКонтрагента.Свойство("АдрТекст"), АдресКонтрагента.АдрТекст, "");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	//заполняем поля контрагента Synerdocs
	Попытка
		Syn_Контакт = ExchangeService.GetContact(Токен, Число(Syn_IDОрганизации), Число(Syn_IDКонтрагента));
		Syn_Контрагент = ExchangeService.GetOrganizationByInnKpp(Токен, Syn_Контакт.ContragentInn, Syn_Контакт.ContragentKpp);
		
		Если ЮрАдрес Тогда
			Если Syn_Контрагент.IsForeignCompany Тогда
				Syn_РоссийскийАдрес = Ложь;
				Syn_Представление = Syn_Контрагент.LegalAddress.ForeignStreetAddress;
				Syn_КодСтраны = Syn_Контрагент.LegalAddress.CountryCode;
				Если Справочники.КлассификаторСтранМира.НайтиПоКоду(Syn_КодСтраны).Пустая() Тогда
					Сообщить("В справочнике не найдена страна контрагента. Добавьте страну вручную и повторите синхронизацию");
					Возврат;
				Иначе
					Syn_Страна = Справочники.КлассификаторСтранМира.НайтиПоКоду(Syn_КодСтраны).Наименование;
				КонецЕсли;
				
			Иначе
				Syn_РоссийскийАдрес = Истина;
				
				Syn_Адрес = Syn_Контрагент.LegalAddress;
				Если Syn_Адрес <> НЕОПРЕДЕЛЕНО Тогда
					Syn_КодРегиона = Syn_Адрес.RegionCode;
					
					Попытка
						КодРегионаЧислом = Число(Syn_КодРегиона);
						//Ищем регион в РСВ "Адресный классификатор по коду"
						Запрос = Новый Запрос("ВЫБРАТЬ
						|	АдресныйКлассификатор.Наименование КАК Наименование,
						|	АдресныйКлассификатор.Сокращение
						|ИЗ
						|	РегистрСведений.АдресныйКлассификатор КАК АдресныйКлассификатор
						|ГДЕ
						|	АдресныйКлассификатор.ТипАдресногоЭлемента = 1
						|	И АдресныйКлассификатор.КодРегионаВКоде = &КодРегионаВКоде");
						Запрос.УстановитьПараметр("КодРегионаВКоде", КодРегионаЧислом);
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда
							Syn_Регион = Выборка.Наименование + " " + СокрЛП(Выборка.Сокращение);
						КонецЕсли;
						
					Исключение
						
					КонецПопытки;
					
					Syn_Индекс = Syn_Адрес.PostalCode;
					Syn_Район = Syn_Адрес.District;
					Syn_Город = Syn_Адрес.City;
					Syn_НаселенныйПункт = Syn_Адрес.locality;
					Syn_Улица = Syn_Адрес.Street;
					Syn_Дом = Syn_Адрес.House;
					Syn_Корпус = Syn_Адрес.Building;
					Syn_Квартира = Syn_Адрес.Apartment;
					
					Syn_ПредставлениеРФ = ?(ЗначениеЗаполнено(Syn_Индекс), Syn_Индекс, "") +
					?(ЗначениеЗаполнено(Syn_Регион), ", " + Syn_Регион, "") +		
					?(ЗначениеЗаполнено(Syn_Район), ", " + Syn_Район, "") +
					?(ЗначениеЗаполнено(Syn_Город), ", " + Syn_Город, "") +
					?(ЗначениеЗаполнено(Syn_НаселенныйПункт), ", " + Syn_НаселенныйПункт, "") +
					?(ЗначениеЗаполнено(Syn_Улица), ", " + Syn_Улица, "") + 
					?(ЗначениеЗаполнено(Syn_Дом), ", д. " + Syn_Дом, "") +
					?(ЗначениеЗаполнено(Syn_Корпус), ", корп. " + Syn_Корпус, "") +
					?(ЗначениеЗаполнено(Syn_Квартира), ", кв. " + Syn_Квартира, "");
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если НЕ Syn_Контрагент.MailingAddress.CountryCode = "643" Тогда
				Syn_РоссийскийАдресФакт = Ложь;
				Syn_ПредставлениеФакт = Syn_Контрагент.MailingAddress.ForeignStreetAddress;
				Syn_КодСтраныФакт = Syn_Контрагент.MailingAddress.CountryCode;
				Если Справочники.КлассификаторСтранМира.НайтиПоКоду(Syn_КодСтраныФакт).Пустая() Тогда
					Сообщить("В справочнике не найдена страна контрагента. Добавьте страну вручную и повторите синхронизацию");
					Возврат;
				Иначе
					Syn_СтранаФакт = Справочники.КлассификаторСтранМира.НайтиПоКоду(Syn_КодСтраныФакт).Наименование;
				КонецЕсли;
				
			Иначе
				Syn_РоссийскийАдресФакт = Истина;
				
				Syn_Адрес = Syn_Контрагент.MailingAddress;
				Если Syn_Адрес <> НЕОПРЕДЕЛЕНО Тогда
					Syn_КодРегионаФакт = Syn_Адрес.RegionCode;
					
					Попытка
						КодРегионаЧислом = Число(Syn_КодРегионаФакт);
						//Ищем регион в РСВ "Адресный классификатор по коду"
						Запрос = Новый Запрос("ВЫБРАТЬ
						|	АдресныйКлассификатор.Наименование КАК Наименование,
						|	АдресныйКлассификатор.Сокращение
						|ИЗ
						|	РегистрСведений.АдресныйКлассификатор КАК АдресныйКлассификатор
						|ГДЕ
						|	АдресныйКлассификатор.ТипАдресногоЭлемента = 1
						|	И АдресныйКлассификатор.КодРегионаВКоде = &КодРегионаВКоде");
						Запрос.УстановитьПараметр("КодРегионаВКоде", КодРегионаЧислом);
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда
							Syn_РегионФакт = Выборка.Наименование + " " + СокрЛП(Выборка.Сокращение);
						КонецЕсли;
						
					Исключение
						
					КонецПопытки;
					
					Syn_ИндексФакт = Syn_Адрес.PostalCode;
					Syn_РайонФакт = Syn_Адрес.District;
					Syn_ГородФакт = Syn_Адрес.City;
					Syn_НаселенныйПунктФакт = Syn_Адрес.locality;
					Syn_УлицаФакт = Syn_Адрес.Street;
					Syn_ДомФакт = Syn_Адрес.House;
					Syn_КорпусФакт = Syn_Адрес.Building;
					Syn_КвартираФакт = Syn_Адрес.Apartment;
					
					Syn_ПредставлениеРФФакт = ?(ЗначениеЗаполнено(Syn_ИндексФакт), Syn_ИндексФакт, "") +
					?(ЗначениеЗаполнено(Syn_РегионФакт), ", " + Syn_РегионФакт, "") +		
					?(ЗначениеЗаполнено(Syn_РайонФакт), ", " + Syn_РайонФакт, "") +
					?(ЗначениеЗаполнено(Syn_ГородФакт), ", " + Syn_ГородФакт, "") +
					?(ЗначениеЗаполнено(Syn_НаселенныйПунктФакт), ", " + Syn_НаселенныйПунктФакт, "") +
					?(ЗначениеЗаполнено(Syn_УлицаФакт), ", " + Syn_УлицаФакт, "") + 
					?(ЗначениеЗаполнено(Syn_ДомФакт), ", " + Syn_ДомФакт, "") +
					?(ЗначениеЗаполнено(Syn_КорпусФакт), ", " + Syn_КорпусФакт, "") +
					?(ЗначениеЗаполнено(Syn_КвартираФакт), ", " + Syn_КвартираФакт, "");
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	//Общая информация
	НаименованиеКонтр 		= Контрагент.Наименование;
	НаименованиеКонтрПолное = Контрагент.НаименованиеПолное;
	ИННКонтр 				= Контрагент.ИНН;
	КППКонтр 				= Контрагент.КПП;
	ТелефонКонтр			= ПолучитьТелефон(Контрагент);
	ФаксКонтр				= ПолучитьТелефон(Контрагент, Истина);
	
	// Общие реквизиты
	Syn_НаименованиеКонтр 		= Syn_Контрагент.Name;
	Syn_НаименованиеКонтрПолное = Syn_Контрагент.LegalName;
	Syn_ИННКонтр 				= Syn_Контрагент.Inn;
	Syn_КППКонтр 				= Syn_Контрагент.Kpp;
	Syn_ТелефонКонтр			= Syn_Контрагент.Tel;
	Syn_ФаксКонтр				= Syn_Контрагент.Fax;
	
	// Банк
	Syn_НаимБанкКонтр 	= Syn_Контрагент.Bank;
	Syn_БИККонтр		= Syn_Контрагент.Bik;
	Syn_КоррСчетКонтр	= Syn_Контрагент.CorrespondentAccount;
	Syn_РасчСчетКонтр	= Syn_Контрагент.CurrentAccount;	
    	
	// Банк
	Если ЗначениеЗаполнено(Syn_Контрагент.CurrentAccount) Тогда 
		// Ищем по номеру счета Synerdocs
		РасчетныйСчет = Справочники.БанковскиеСчета.НайтиПоНаименованию(Syn_Контрагент.CurrentAccount); 
		
		// Ищем основной р/с
		Если Не ЗначениеЗаполнено(РасчетныйСчет) Тогда
			РасчетныйСчет = Контрагент.ОсновнойБанковскийСчет;
		КонецЕсли;
		
		// Ищем первый попавшийся
		Если Не ЗначениеЗаполнено(РасчетныйСчет) Тогда
			ЗапросРС = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			|	БанковскиеСчета.Ссылка
			|ИЗ
			|	Справочник.БанковскиеСчета КАК БанковскиеСчета
			|ГДЕ
			|	БанковскиеСчета.ПометкаУдаления = ЛОЖЬ
			|	И БанковскиеСчета.Владелец = &Контрагент");
			ЗапросРС.УстановитьПараметр("Контрагент", Контрагент);
			Результат = ЗапросРС.Выполнить().Выбрать();
			РасчетныйСчет = ?(Результат.Следующий(), Результат.Ссылка, Неопределено);
		КонецЕсли;
	КонецЕсли;
	
	// НЕ нашли ничего :)
	Если Не ЗначениеЗаполнено(РасчетныйСчет) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РасчетныйСчет) Тогда
		НаимБанкКонтр 	= РасчетныйСчет.Банк.Наименование;
		БИККонтр		= РасчетныйСчет.Банк.Код;
		КоррСчетКонтр	= РасчетныйСчет.Банк.КоррСчет;
		РасчСчетКонтр	= РасчетныйСчет.НомерСчета;
	КонецЕсли;
						
	Исключение
		ОписаниеОшибкиСтрокой = ОписаниеОшибки();
		ТекстОшибкиSynerdocs = РазобратьИсключениеSynerdocs(ОписаниеОшибкиСтрокой);
		
		ОтправитьУведомлениеПользователю("Ошибка получения информации о контрагенте: <" + Контрагент + ">. " + ТекстОшибкиSynerdocs);
	КонецПопытки;

КонецПроцедуры

Процедура СинхронизироватьАдрес(ЮрАдрес = Ложь)
	
	ЭтоОрганизация 	= НЕ ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты");
	ЭтоИП			= Контрагент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо;
	ФизЛицо			= Контрагент;
	
	Если ЭтоОрганизация Тогда
		Если Контрагент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
			Если ЕстьРеквизитСправочника("ИндивидуальныйПредприниматель", Метаданные.Справочники.Организации) Тогда
				// !!!!!!!
				ТипАдреса 	= ?(ЮрАдрес, Справочники.ВидыКонтактнойИнформации.ЮрАдресФизЛица, Справочники.ВидыКонтактнойИнформации.ФактАдресФизЛица);
				Физлицо 	= Контрагент.ИндивидуальныйПредприниматель;			
			Иначе      
				ТипАдреса 	= ?(ЮрАдрес, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации, Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
			КонецЕсли;
		Иначе
			ТипАдреса = ?(ЮрАдрес, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации, Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
		КонецЕсли;
	Иначе
		ТипАдреса = ?(ЮрАдрес, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента, Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации); 
	КонецЕсли;
         	 	
	//Создаем адрес
	НаборЗаписейКИ = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей(); 
	НаборЗаписейКИ.Отбор.Объект.Установить(ФизЛицо);
	НаборЗаписейКИ.Отбор.Тип.Установить(Перечисления.ТипыКонтактнойИнформации.Адрес);
	НаборЗаписейКИ.Отбор.Вид.Установить(ТипАдреса);
		
	НаборЗаписейКИ.Прочитать();
	НаборЗаписейКИ.Очистить();
		
	//Создаем адрес
	ЗаписьКИ = НаборЗаписейКИ.Добавить(); 
	ЗаписьКИ.Объект = ФизЛицо;
	ЗаписьКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	ЗаписьКИ.Вид = ТипАдреса;
	
	Если ЮрАдрес Тогда
		Если Syn_РоссийскийАдрес Тогда
			
			//проверяем наличие региона по коду в РСВ "Адресный классификатор"
			Попытка
				КодРегионаЧислом = Число(Syn_КодРегиона);
			Исключение
				ОтправитьУведомлениеПользователю("Некорректный код региона");
				Возврат;
			КонецПопытки;
			
			//Ищем регион в РСВ "Адресный классификатор по коду"
			Регион = "";
			Запрос = Новый Запрос("ВЫБРАТЬ
			|	АдресныйКлассификатор.Наименование КАК Наименование,
			|	АдресныйКлассификатор.Сокращение
			|ИЗ
			|	РегистрСведений.АдресныйКлассификатор КАК АдресныйКлассификатор
			|ГДЕ
			|	АдресныйКлассификатор.ТипАдресногоЭлемента = 1
			|	И АдресныйКлассификатор.КодРегионаВКоде = &КодРегионаВКоде");
			Запрос.УстановитьПараметр("КодРегионаВКоде", КодРегионаЧислом);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Регион = Выборка.Наименование + " " + Выборка.Сокращение;
			Иначе
				ОтправитьУведомлениеПользователю("По коду региона " + Syn_КодРегиона + " не найден регион в РСВ <Адресный классификатор>." + Символы.ПС + "Проверьте код региона, либо загрузите адресный классификатор");
				Возврат;
			КонецЕсли;
			
			ЗаписьКИ.Поле1 = Syn_Индекс;
			ЗаписьКИ.Поле2 = СокрЛП(Регион);
			ЗаписьКИ.Поле3 = Syn_Район;
			ЗаписьКИ.Поле4 = Syn_Город;
			ЗаписьКИ.Поле5 = Syn_НаселенныйПункт;
			ЗаписьКИ.Поле6 = Syn_Улица;
			ЗаписьКИ.Поле7 = Syn_Дом;
			ЗаписьКИ.Поле8 = Syn_Корпус;
			ЗаписьКИ.Поле9 = Syn_Квартира;
			ЗаписьКИ.Представление = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдреса(ЗаписьКИ);
		Иначе
			ЗаписьКИ.Поле1 = Syn_Страна;
			ЗаписьКИ.Представление = Syn_Страна + ", " + Syn_Представление;
		КонецЕсли;
	Иначе
		Если Syn_РоссийскийАдресФакт Тогда
			
			//проверяем наличие региона по коду в РСВ "Адресный классификатор"
			Попытка
				КодРегионаЧислом = Число(Syn_КодРегионаФакт);
			Исключение
				ОтправитьУведомлениеПользователю("Некорректный код региона");
				Возврат;
			КонецПопытки;
			
			//Ищем регион в РСВ "Адресный классификатор по коду"
			РегионФакт = "";
			Запрос = Новый Запрос("ВЫБРАТЬ
			|	АдресныйКлассификатор.Наименование КАК Наименование,
			|	АдресныйКлассификатор.Сокращение
			|ИЗ
			|	РегистрСведений.АдресныйКлассификатор КАК АдресныйКлассификатор
			|ГДЕ
			|	АдресныйКлассификатор.ТипАдресногоЭлемента = 1
			|	И АдресныйКлассификатор.КодРегионаВКоде = &КодРегионаВКоде");
			Запрос.УстановитьПараметр("КодРегионаВКоде", КодРегионаЧислом);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				РегионФакт = Выборка.Наименование + " " + Выборка.Сокращение;
			Иначе
				ОтправитьУведомлениеПользователю("По коду региона " + Syn_КодРегионаФакт + " не найден регион в РСВ <Адресный классификатор>." + Символы.ПС + "Проверьте код региона, либо загрузите адресный классификатор");
				Возврат;
			КонецЕсли;
			
			ЗаписьКИ.Поле1 = Syn_ИндексФакт;
			ЗаписьКИ.Поле2 = СокрЛП(РегионФакт);
			ЗаписьКИ.Поле3 = Syn_РайонФакт;
			ЗаписьКИ.Поле4 = Syn_ГородФакт;
			ЗаписьКИ.Поле5 = Syn_НаселенныйПунктФакт;
			ЗаписьКИ.Поле6 = Syn_УлицаФакт;
			ЗаписьКИ.Поле7 = Syn_ДомФакт;
			ЗаписьКИ.Поле8 = Syn_КорпусФакт;
			ЗаписьКИ.Поле9 = Syn_КвартираФакт;
			ЗаписьКИ.Представление = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдреса(ЗаписьКИ);
		Иначе
			ЗаписьКИ.Поле1 = Syn_СтранаФакт;
			ЗаписьКИ.Представление = Syn_СтранаФакт + ", " + Syn_ПредставлениеФакт;
		КонецЕсли;
	КонецЕсли;
	
	НаборЗаписейКИ.Записать();
	
КонецПроцедуры

Процедура СинхронизироватьОбщее()
	
	ЭтоКонтрагент 	= ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты");
	Syn_Контакт 	= ExchangeService.GetContact(Токен, Число(Syn_IDОрганизации), Число(Syn_IDКонтрагента));
	Syn_Контрагент 	= ExchangeService.GetOrganizationByInnKpp(Токен, Syn_Контакт.ContragentInn, Syn_Контакт.ContragentKpp);
	
	КонтрагентОбъект 					= Контрагент.ПолучитьОбъект();
	КонтрагентОбъект.Наименование 		= Syn_Контрагент.Name;
	КонтрагентОбъект.НаименованиеПолное = Syn_Контрагент.LegalName;
	КонтрагентОбъект.ИНН 				= Syn_Контрагент.Inn;
	КонтрагентОбъект.КПП 				= Syn_Контрагент.Kpp;
	
	Попытка
		КонтрагентОбъект.Записать();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	//Телефон
	Если ЗначениеЗаполнено(Syn_ТелефонКонтр) Тогда
		НаборЗаписейКИ = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
		НаборЗаписейКИ.Отбор.Объект.Установить(КонтрагентОбъект.Ссылка);
		НаборЗаписейКИ.Отбор.Тип.Установить(Перечисления.ТипыКонтактнойИнформации.Телефон);
		НаборЗаписейКИ.Отбор.Вид.Установить(?(ЭтоКонтрагент, Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента, Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации));
		НаборЗаписейКИ.Прочитать();
		НаборЗаписейКИ.Очистить();
		
		ЗаписьКИ 				= НаборЗаписейКИ.Добавить(); 
		ЗаписьКИ.Объект 		= КонтрагентОбъект.Ссылка;
		ЗаписьКИ.Тип 			= Перечисления.ТипыКонтактнойИнформации.Телефон;
		ЗаписьКИ.Вид 			= ?(ЭтоКонтрагент, Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента, Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
		ЗаписьКИ.Представление 	= Syn_Контрагент.Tel;
		
		НаборЗаписейКИ.Записать();
	КонецЕсли;
	
	ЭтоБух = Метаданные.Имя = "БухгалтерияПредприятия";
	
	Если НЕ ЭтоБух Тогда
		Если ЗначениеЗаполнено(Syn_ФаксКонтр) Тогда
			////Факс
			НаборЗаписейКИ = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
			НаборЗаписейКИ.Отбор.Объект.Установить(КонтрагентОбъект.Ссылка);
			НаборЗаписейКИ.Отбор.Тип.Установить(Перечисления.ТипыКонтактнойИнформации.Телефон);
			НаборЗаписейКИ.Отбор.Вид.Установить(?(ЭтоКонтрагент, Справочники.ВидыКонтактнойИнформации.ФаксКонтрагента, Справочники.ВидыКонтактнойИнформации.ФаксОрганизации));
			НаборЗаписейКИ.Прочитать();
			НаборЗаписейКИ.Очистить();
			
			
			ЗаписьКИ 				= НаборЗаписейКИ.Добавить(); 
			ЗаписьКИ.Объект 		= КонтрагентОбъект.Ссылка;
			ЗаписьКИ.Тип 			= Перечисления.ТипыКонтактнойИнформации.Телефон;
			ЗаписьКИ.Вид 			= ?(ЭтоКонтрагент, Справочники.ВидыКонтактнойИнформации.ФаксКонтрагента, Справочники.ВидыКонтактнойИнформации.ФаксОрганизации);
			ЗаписьКИ.Представление 	= Syn_Контрагент.Fax;
			
			НаборЗаписейКИ.Записать();
		КонецЕсли;
	ИначеЕсли ЭтоБух И НЕ ЭтоКонтрагент Тогда
		Если ЗначениеЗаполнено(Syn_ФаксКонтр) Тогда
			////Факс
			НаборЗаписейКИ = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
			НаборЗаписейКИ.Отбор.Объект.Установить(КонтрагентОбъект.Ссылка);
			НаборЗаписейКИ.Отбор.Тип.Установить(Перечисления.ТипыКонтактнойИнформации.Телефон);
			НаборЗаписейКИ.Отбор.Вид.Установить(Справочники.ВидыКонтактнойИнформации.ФаксОрганизации);
			НаборЗаписейКИ.Прочитать();
			НаборЗаписейКИ.Очистить();
			
			
			ЗаписьКИ 				= НаборЗаписейКИ.Добавить(); 
			ЗаписьКИ.Объект 		= КонтрагентОбъект.Ссылка;
			ЗаписьКИ.Тип 			= Перечисления.ТипыКонтактнойИнформации.Телефон;
			ЗаписьКИ.Вид 			= Справочники.ВидыКонтактнойИнформации.ФаксОрганизации;
			ЗаписьКИ.Представление 	= Syn_Контрагент.Fax;
			
			НаборЗаписейКИ.Записать();
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Syn_НаимБанкКонтр) И ЗначениеЗаполнено(Syn_БИККонтр) И ЗначениеЗаполнено(Syn_РасчСчетКонтр) Тогда
		
		// Проверим данные сервиса на корректность
		Если СтрДлина(Syn_БИККонтр) <> 9 ИЛИ Лев(Syn_БИККонтр, 2) <> "04" Тогда
			Сообщить("Некорректный БИК банка " + Syn_НаимБанкКонтр + " в Synerdocs. Невозможно синхронизировать банковские реквизиты.");
			Возврат;
		КонецЕсли;
		
		Если СтрДлина(Syn_РасчСчетКонтр) <> 20 Тогда
			Сообщить("Некорректный номер расчетного счета в Synerdocs. Невозможно синхронизировать банковские реквизиты.");
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Syn_КоррСчетКонтр) И СтрДлина(Syn_КоррСчетКонтр) <> 20 Тогда
			Сообщить("Некорректный номер корр. счета в Synerdocs. Невозможно синхронизировать банковские реквизиты.");
			Возврат;
		КонецЕсли;
		
		//Сначала найдем банк
		Банк1С = Справочники.Банки.НайтиПоКоду(Syn_БИККонтр);
		
		Если ЗначениеЗаполнено(Банк1С) Тогда
			ТестВопроса = "";
			
			Если Банк1С.Наименование <> Syn_НаимБанкКонтр Тогда
				ТекстВопроса = "Наименование банка в 1С отличается от наименования банка в Synerdocs."; 
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Syn_КоррСчетКонтр) И Syn_КоррСчетКонтр <> Банк1С.КоррСчет Тогда
				ТекстВопроса2 = "Корр. счет банка в 1С отличается от корр. счета банка в Synerdocs."; 
				ТекстВопроса = ?(ЗначениеЗаполнено(ТекстВопроса), ТекстВопроса + Символы.ПС + ТекстВопроса2, ТекстВопроса2);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекстВопроса) Тогда
				Режим = РежимДиалогаВопрос.ДаНет;
				Текст = ТекстВопроса + Символы.ПС + "Заменить данными Synerdocs?";
				Ответ = Вопрос(Текст, Режим, 0);
				
				// Заменим данные в 1С по банку
				Если Ответ = КодВозвратаДиалога.Да Тогда
					БанкОбъект 				= Банк1С.ПолучитьОбъект();
					БанкОбъект.Наименование = Syn_НаимБанкКонтр;
					БанкОбъект.КоррСчет		= Syn_КоррСчетКонтр;
					БанкОбъект.ПолноеНаименование();
					
					Попытка
						БанкОбъект.Записать();
					Исключение
						Сообщить(ОписаниеОшибки());
					КонецПопытки;
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
					
		// расчетный счет
		Запрос = Новый Запрос; 
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БанковскиеСчета.Ссылка
		|ИЗ
		|	Справочник.БанковскиеСчета КАК БанковскиеСчета
		|ГДЕ
		|	БанковскиеСчета.Владелец = &Контрагент
		|	И БанковскиеСчета.НомерСчета = &НомерСчета
		|	И БанковскиеСчета.Банк.Код = &БИКБанка";
		Запрос.УстановитьПараметр("Контрагент", КонтрагентОбъект.Ссылка);
		Запрос.УстановитьПараметр("НомерСчета", Syn_РасчСчетКонтр);
		Запрос.УстановитьПараметр("БИКБанка", Syn_БИККонтр);
		
		Результат = Запрос.Выполнить().Выбрать();
		
		Если Результат.Следующий() Тогда
			СчетОбъект				= Результат.Ссылка.ПолучитьОбъект();
			Попытка 
				СчетОбъект.Наименование = "в " + Syn_НаимБанкКонтр;
				СчетОбъект.Записать();
				Возврат;
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		Иначе
			НовыйСчет 						= Справочники.БанковскиеСчета.СоздатьЭлемент();
			НовыйСчет.ВалютаДенежныхСредств = Константы.ВалютаРегламентированногоУчета.Получить();
			НовыйСчет.НомерСчета			= Syn_РасчСчетКонтр;
			НовыйСчет.Владелец				= Контрагент.Ссылка;
			
			Если ЭтоБух Тогда
				НовыйСчет.ВидСчета			= "Расчетный"
			КонецЕсли;
			
			БанкОбъект = Справочники.Банки.НайтиПоКоду(Syn_БИККонтр);
							
			Если ЗначениеЗаполнено(БанкОбъект) Тогда
				НовыйСчет.Банк = БанкОбъект.Ссылка;
			Иначе
				БанкОбъект 				= Справочники.Банки.СоздатьЭлемент();
				БанкОбъект.Наименование = Syn_НаимБанкКонтр;
				БанкОбъект.Код			= Syn_БикКонтр;
				БанкОбъект.КоррСчет		= Syn_КоррСчетКонтр;
				
				Попытка 
					БанкОбъект.Записать();
					НовыйСчет.Банк = БанкОбъект.Ссылка;
					НовыйСчет.Записать();
				Исключение
					Сообщить(ОписаниеОшибки());
				КонецПопытки;
			КонецЕсли;
			
			НовыйСчет.Наименование = "в " + БанкОбъект.Наименование;
			
			Попытка
				НовыйСчет.Записать();	
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
			
		КонецЕсли;
		
		КонтрагентОбъект.ОсновнойБанковскийСчет = НовыйСчет.Ссылка;
		КонтрагентОбъект.Записать();
		
	КонецЕсли;
			
КонецПроцедуры
