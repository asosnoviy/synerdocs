
//========================================================================
// Форма для настройки фильтрации списка входящих и исходящих документов.
// 
//========================================================================

Перем _Параметры;
Перем _ИмяФормы;

Перем ПрименитьФильтр;

// Модули
Перем СпискиДокументов, Телеметрия;
Перем СобытияТелеметрии;

//========================================================================
// ИНИЦИАЛИЗАЦИЯ
//========================================================================

Процедура ПодключитьМодули()
	
	Модули = ТребуютсяМодули("Модуль_СпискиДокументов, Модуль_Телеметрия");
	
	СпискиДокументов	= Модули.Модуль_СпискиДокументов;
	Телеметрия			= Модули.Модуль_Телеметрия;
	
	СобытияТелеметрии = Телеметрия.ОписаниеСобытий();
	
КонецПроцедуры

Процедура ИнциализироватьФорму()
	
	ПрименитьФильтр = Ложь;
	
	ТипыДокументов		= СпискиДокументов.ТипыДокументов();
	СтатусыДокументов	= СпискиДокументов.СтатусыДокументов();
	
	ЭлементыФормы.ТипДокумента.СписокВыбора		= СписокЗначенийИзПеречисления(ТипыДокументов);
	ЭлементыФормы.СтатусДокумента.СписокВыбора	= СписокЗначенийИзПеречисления(СтатусыДокументов);
	ЭлементыФормы.Контрагент.СписокВыбора		= СписокВыбораКонтрагента();

КонецПроцедуры

Процедура ИзвлечьПараметры()
	
	Если _Параметры = Неопределено Тогда
		ВызватьИсключение "Параметры формы не установлены";
	КонецЕсли;
	
	УстановитьРазмерСтраницы(_Параметры.РазмерСтраницы);
	
	УстановитьПериод(
		_Параметры.НачалоПериода,
		_Параметры.КонецПериода
	);
	
	ТипДокумента	= _Параметры.ТипДокумента;
	СтатусДокумента	= _Параметры.СтатусДокумента;
	
	УстановитьКонтрагента(_Параметры.Контрагент);
	
КонецПроцедуры

//========================================================================
// ЭКСПОРТНЫЙ ИНТЕРФЕЙС
//========================================================================

Функция ИмяФормы() Экспорт
	
	Если _ИмяФормы = Неопределено Тогда
		_ИмяФормы = ПолучитьИмяФормы(ЭтаФорма);
	КонецЕсли;
	
	Возврат _ИмяФормы;
	
КонецФункции


Функция Параметры() Экспорт
	
	Параметры = СпискиДокументов.Новый_НастройкиОтбора();
	
	Возврат Параметры;
	
КонецФункции

Процедура УстановитьПараметры(Параметры) Экспорт
	
	_Параметры = ФиксированныеДанные(Параметры);
	
КонецПроцедуры

//========================================================================
// СОБЫТИЯ
//========================================================================

//===================================
//{ События формы

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ИнциализироватьФорму();
	
	ИзвлечьПараметры();
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	Если НЕ ПрименитьФильтр Тогда
		Телеметрия.ОтправитьАналитику(
			СобытияТелеметрии.Фильтрация.Отмена,
			ЭтаФорма
		);
	КонецЕсли;
	
КонецПроцедуры

//}

//===================================
//{ События элементов формы

Процедура ПериодНачалоПриИзменении(Элемент)
	
	УстановитьПериод(ПериодНачало);
	
КонецПроцедуры

Процедура ПериодКонецПриИзменении(Элемент)
	
	УстановитьПериод(, ПериодКонец);
	
КонецПроцедуры

Процедура ВыбратьПериодНажатие(Элемент)
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал	= Истина;
	НастройкаПериода.РедактироватьКакПериод		= Истина;
	НастройкаПериода.ВариантНастройки			= ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(
		ПериодНачало, 
		?(ПериодКонец = '0001-01-01', ПериодКонец, КонецДня(ПериодКонец))
	);
	
	Если НастройкаПериода.Редактировать() Тогда
		УстановитьПериод(
			НастройкаПериода.ПолучитьДатуНачала(),
			НастройкаПериода.ПолучитьДатуОкончания()
		);
	КонецЕсли;
	
КонецПроцедуры

Процедура РазмерСтраницыПриИзменении(Элемент)
	
	УстановитьРазмерСтраницы(РазмерСтраницы);
	
КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)
	
	УстановитьКонтрагента(Контрагент);
	
КонецПроцедуры

//}

//===================================
//{ Команды

Процедура ОсновныеДействияФормыПрименить(Кнопка)
	
	ПрименитьФильтр = Истина;
	
	Результат = Результат();
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

//}

//========================================================================
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//========================================================================

//===================================
//{ Сеттеры

Процедура УстановитьРазмерСтраницы(НовыйРазмер)
	
	Минимум = 25;
	Максимум = 1000;
	
	РазмерСтраницы = ПривестиКИнтервалу(НовыйРазмер, Минимум, Максимум);
	
КонецПроцедуры

Процедура УстановитьПериод(НачалоПериода = Неопределено, КонецПериода = Неопределено)
	
	Если НачалоПериода <> Неопределено Тогда
		ПериодНачало = НачалоПериода;
	КонецЕсли;
	
	Если КонецПериода <> Неопределено Тогда
		ПериодКонец = КонецПериода;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПериодНачало) И ЗначениеЗаполнено(ПериодКонец) Тогда
		ПериодНачало	= Мин(ПериодНачало, ПериодКонец);
		ПериодКонец		= Макс(ПериодНачало, ПериодКонец);
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьКонтрагента(НовыйКонтрагент)
	
	Если НовыйКонтрагент = Контрагент Тогда
		Возврат;
	КонецЕсли;
	
	СписокВыбора = ЭлементыФормы.Контрагент.СписокВыбора;
	
	ЕстьВСписке = (СписокВыбора.НайтиПоЗначению(НовыйКонтрагент) <> Неопределено);
	
	Если ЗначениеЗаполнено(НовыйКонтрагент) И НЕ ЕстьВСписке Тогда
		Контрагент = "";
	Иначе
		Контрагент = НовыйКонтрагент;
	КонецЕсли;
	
КонецПроцедуры

//}

Функция СписокВыбораКонтрагента()
	
	Список = Новый СписокЗначений;
	
	Для Каждого СтрКонтрагент Из Контрагенты_Авторизованные Цикл
		Список.Добавить(СтрКонтрагент.Ящик, СтрКонтрагент.КонтрагентПредставление);
	КонецЦикла;
	
	Возврат Список;
	
КонецФункции

//===================================
//{ Формирование результата

Функция Результат()
	
	Результат = СпискиДокументов.Новый_НастройкиОтбора();
	
	Результат.РазмерСтраницы	= РазмерСтраницы;
	
	Результат.НачалоПериода		= ПериодНачало;
	Результат.КонецПериода		= ПериодКонец;
	
	Результат.ТипДокумента		= ТипДокумента;
	Результат.СтатусДокумента	= СтатусДокумента;
	
	Результат.Контрагент		= Контрагент;
	
	Возврат Результат;
	
КонецФункции

//}


ПодключитьМодули();
