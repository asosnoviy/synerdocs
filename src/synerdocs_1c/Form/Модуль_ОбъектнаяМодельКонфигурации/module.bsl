
//========================================================================
// Объектная модель, используемя при работе с конфигурацией.
// Модель общая для всех конфигураций.
//========================================================================

// Модули
Перем ОбъектнаяМодель;

//========================================================================
// ИНИЦИАЛИЗАЦИЯ
//========================================================================

Процедура ПодключитьМодули()
	
	ОбъектнаяМодель = Модуль("Модуль_ОбъектнаяМодель");
	
КонецПроцедуры

Процедура Инициализировать() Экспорт
	
	ПодключитьМодули();
	
КонецПроцедуры

//========================================================================
// ЭКСПОРТНЫЙ ИНТЕРФЕЙС
//========================================================================

// Константы

Функция ДопСвойстваОбъектов() Экспорт
	
	ПВХ = Новый Структура(
		"ИдДокумента"
	);
	
	ПВХ.ИдДокумента = "Syn_IDДокумента";
	
	ПВХ = Новый ФиксированнаяСтруктура(ПВХ);
	Возврат ПВХ;
	
КонецФункции

// Общие объекты

Функция Новый_Номенклатура() Экспорт
	
	Номенклатура = Новый Структура(
		"Наименование,
		|Код,
		|Артикул,
		|Характеристика,
		|Штрихкод"
	);
	
	Номенклатура.Наименование	= "";
	Номенклатура.Код			= "";
	
	Номенклатура.Характеристика = Неопределено; //: Новый_Характеристика();
	
	Возврат Номенклатура;
	
КонецФункции

Функция Новый_Характеристика() Экспорт
	
	Характеристика = Новый Структура(
		"Ссылка,
		|Представление"
	);
	
	Характеристика.Представление = "";
	
	Возврат Характеристика;
	
КонецФункции

Функция Новый_ЕдиницаИзмерения() Экспорт
	
	ЕИ = Новый Структура(
		"Код,
		|Наименование"
	);
	
	ЕИ.Код			= "0000";
	ЕИ.Наименование	= "";
	
	Возврат ЕИ;
	
КонецФункции

// Информация о документе

Функция Новый_ПолнаяИнформацияОДокументе() Экспорт
	
	Информация = Новый Структура(
		"ТипДокумента,
		|ВидДокумента,
		|
		|ЭтоСФ,
		|ЭтоКорректировка,
		|
		|ЭтотДокумент,
		|ПарныйДокумент,
		|
		|ПервичныйДокумент,
		|СчетФактура,
		|
		|РодительскийДокумент"
	);
	
	Информация.ТипДокумента = Неопределено; //: Модуль_ОбъектнаяМодель.ТипыДокументов();
	Информация.ВидДокумента = Неопределено; //: Модуль_ОбъектнаяМодель.ВидыНеформализованныхДокументов();
	
	Информация.ЭтоСФ			= Ложь;
	Информация.ЭтоКорректировка	= Ложь;
	
	Информация.ЭтотДокумент			= Новый_ИнформацияОДокументе();
	Информация.ПарныйДокумент		= Неопределено; //: Новый_ИнформацияОДокументе();
	
	Информация.ПервичныйДокумент	= Неопределено; //: Новый_ИнформацияОДокументе();
	Информация.СчетФактура			= Неопределено; //: Новый_ИнформацияОДокументе();
	
	Информация.РодительскийДокумент = Неопределено; //: Новый_ИнформацияОДокументе();
	
	Возврат Информация;
	
КонецФункции

Функция Новый_ИнформацияОДокументе() Экспорт
	
	Документ = Новый Структура(
		"Ссылка,
		|Контрагент,
		|
		|ИД,
		|Отправлен"
	);
	
	Документ.Ссылка		= Неопределено; //: ДокументСсылка
	Документ.Контрагент = Неопределено; //: Справочники.Контрагенты
	
	Документ.ИД			= Неопределено; //: Строка (УИД)
	Документ.Отправлен	= Ложь;
	
	Возврат Документ;
	
КонецФункции

//===================================
//{ Объектная модель документов конфигурации

// Реквизиты документа

Функция Новый_РеквизитыДокумента() Экспорт
	
	Реквизиты = Новый Структура(
		"Номер, Дата,
		|Исправление"
	);
	
	Реквизиты.Номер			= "б/н";
	Реквизиты.Дата			= ПустаяДата();
	
	Реквизиты.Исправление	= Неопределено; //: Новый_Исправление();
	
	Возврат Реквизиты;
	
КонецФункции

Функция Новый_Исправление() Экспорт
	
	Исправление = Новый Структура(
		"Номер, Дата"
	);
	
	Исправление.Номер	= 0;
	Исправление.Дата	= ПустаяДата();
	
	Возврат Исправление;
	
КонецФункции

Функция Новый_РеквизитыКорректировки() Экспорт
	
	Реквизиты = Новый_РеквизитыДокумента();
	
	Расширение = Новый Структура(
		"ИсходныйДокумент"
	);
	РасширитьОбъект(Реквизиты, Расширение);
	
	Реквизиты.ИсходныйДокумент = Новый_РеквизитыДокумента();
	
	Возврат Реквизиты;
	
КонецФункции

// Прочее

Функция Новый_СтороныСделки() Экспорт
	
	СтороныСделки = Новый Структура(
		"Продавец,
		|Покупатель"
	);
	
	СтороныСделки.Продавец		= ОбъектнаяМодель.Новый_Контрагент();
	СтороныСделки.Покупатель	= ОбъектнаяМодель.Новый_Контрагент();
	
	Возврат СтороныСделки;
	
КонецФункции

Функция Новый_ДанныеТранспортировки() Экспорт
	
	Транспортировка = Новый Структура(
		"Основание,
		|
		|Грузоотправитель,
		|Грузополучатель,
		|
		|Перевозчик,
		|
		|ТранспортныеНакладные"
	);
	
	Транспортировка.Основание				= ОбъектнаяМодель.Новый_Основание();
	
	Транспортировка.Грузоотправитель		= Неопределено; //: ОбъектнаяМодель.Новый_Контрагент();
	Транспортировка.Грузополучатель			= Неопределено; //: ОбъектнаяМодель.Новый_Контрагент();
	
	Транспортировка.Перевозчик				= Неопределено; //: ОбъектнаяМодель.Новый_Контрагент();
	
	Транспортировка.ТранспортныеНакладные	= ОбъектнаяМодель.Новый_ТранспортныеНакладные();
	
	Возврат Транспортировка;
	
КонецФункции

Функция Новый_ДанныеСогласования() Экспорт
	
	ДанныеСогласования = Новый Структура(
		"Основание"
	);
	
	ДанныеСогласования.Основание = ОбъектнаяМодель.Новый_Основание();
	
	Возврат ДанныеСогласования;
	
КонецФункции

Функция Новый_ОтветственныеЛица() Экспорт
	
	ОтветственныеЛица = Новый Структура(
		"ОтпускПроизвел"
	);
	
	ОтветственныеЛица.ОтпускПроизвел = Неопределено; //: ОбъектнаяМодель.Новый_ОтветственноеЛицо();
	
	Возврат ОтветственныеЛица;
	
КонецФункции

// Табличная часть

Функция Новый_ТМЦ() Экспорт
	
	ТМЦ = Новый Структура(
		"ТолькоУслуги,
		|
		|ТабличнаяЧасть,
		|Итого"
	);
	
	ТМЦ.ТолькоУслуги = Ложь;
	
	ТМЦ.ТабличнаяЧасть	= Новый_ТабЧастьИсходногоДокумента();
	ТМЦ.Итого			= Новый_ИтогоИсходногоДокумента();
	
	Возврат ТМЦ;
	
КонецФункции

Функция Новый_ТабЧастьИсходногоДокумента() Экспорт
	
	ТабличнаяЧасть = Новый ТаблицаЗначений;
	
	ТипНомерСтроки = ОписаниеТипаЧисло(15, 0, Истина);
	
	ТипНоменклатура	= ОписаниеТипаЗначения(Новый_Номенклатура());
	ТипЕИ			= ОписаниеТипаЗначения(Новый_ЕдиницаИзмерения());
	
	ТипКоличество	= ОписаниеТипаЧисло(15, 3, Истина);
	ТипЦена			= ОписаниеТипаЧисло(26, 11, Истина);
	ТипСумма		= ОписаниеТипаЧисло(15, 2, Истина);
	
	ТипСтрока = ОписаниеТипаСтрока();
	ТипБулево = ОписаниеТипаБулево();
	
	Колонки = ТабличнаяЧасть.Колонки;
	Колонки.Добавить("НомерСтроки",               ТипНомерСтроки);
	Колонки.Добавить("Номенклатура",              ТипНоменклатура);
	Колонки.Добавить("Количество",                ТипКоличество);
	Колонки.Добавить("ЕдиницаИзмерения",          ТипЕИ);
	Колонки.Добавить("СтавкаНДС");                //: ОбъектнаяМодель.СтавкиНДС();
	Колонки.Добавить("Цена",                      ТипЦена);
	Колонки.Добавить("СуммаБезНДС",               ТипСумма);
	Колонки.Добавить("СуммаНДС",                  ТипСумма);
	Колонки.Добавить("СуммаСНДС",                 ТипСумма);
	Колонки.Добавить("НомерГТД",                  ТипСтрока);
	Колонки.Добавить("КодСтраныПроисхождения",    ТипСтрока);
	Колонки.Добавить("ЭтоУслуга",                 ТипБулево);
	
	Возврат ТабличнаяЧасть;
	
КонецФункции

Функция Новый_ИтогоИсходногоДокумента() Экспорт
	
	Итого = Новый Структура(
		"Количество,
		|СуммаБезНДС,
		|СуммаНДС,
		|СуммаСНДС"
	);
	
	Итого.Количество	= 0;
	Итого.СуммаБезНДС	= 0;
	Итого.СуммаНДС		= Неопределено; //: Число
	Итого.СуммаСНДС		= 0;
	
	Возврат Итого;
	
КонецФункции

Функция Новый_ИзмененияТМЦ() Экспорт
	
	ИзмененияТМЦ = Новый Структура(
		"ТабличнаяЧасть,
		|Итого"
	);
	
	ИзмененияТМЦ.ТабличнаяЧасть	= Новый_ТабЧастьКорректировки();
	ИзмененияТМЦ.Итого			= Новый_ИтогоКорректировки();
	
	Возврат ИзмененияТМЦ;
	
КонецФункции

Функция Новый_ТабЧастьКорректировки() Экспорт
	
	ТабличнаяЧасть = Новый ТаблицаЗначений;
	
	ТипНомерСтроки = ОписаниеТипаЧисло(15, 0, Истина);
	
	ТипНоменклатура	= ОписаниеТипаСтрока(1000);
	ТипЕИ			= ОписаниеТипаЗначения(Новый_ЕдиницаИзмерения());
	
	ТипКоличество	= ОписаниеТипаЧисло(15, 3, Истина);
	ТипЦена			= ОписаниеТипаЧисло(26, 11, Истина);
	ТипСумма		= ОписаниеТипаЧисло(15, 2, Истина);
	
	Колонки = ТабличнаяЧасть.Колонки;
	Колонки.Добавить("НомерСтроки", ТипНомерСтроки);
	Колонки.Добавить("Наименование", ТипНоменклатура);
	
	Колонки.Добавить("КоличествоДо",          ТипКоличество);
	Колонки.Добавить("ЕдиницаИзмеренияДо",    ТипЕИ);
	Колонки.Добавить("СтавкаНДСДо");          //: ОбъектнаяМодель.СтавкиНДС();
	Колонки.Добавить("ЦенаДо",                ТипЦена);
	Колонки.Добавить("СуммаБезНДСДо",         ТипСумма);
	Колонки.Добавить("СуммаНДСДо",            ТипСумма);
	Колонки.Добавить("СуммаСНДСДо",           ТипСумма);
	
	Колонки.Добавить("КоличествоПосле",       ТипКоличество);
	Колонки.Добавить("ЕдиницаИзмеренияПосле", ТипЕИ);
	Колонки.Добавить("СтавкаНДСПосле");       //: ОбъектнаяМодель.СтавкиНДС();
	Колонки.Добавить("ЦенаПосле",             ТипЦена);
	Колонки.Добавить("СуммаБезНДСПосле",      ТипСумма);
	Колонки.Добавить("СуммаНДСПосле",         ТипСумма);
	Колонки.Добавить("СуммаСНДСПосле",        ТипСумма);

	Колонки.Добавить("СуммаБезНДСУвеличение", ТипСумма);
	Колонки.Добавить("СуммаНДСУвеличение",    ТипСумма);
	Колонки.Добавить("СуммаСНДСУвеличение",   ТипСумма);

	Колонки.Добавить("СуммаБезНДСУменьшение", ТипСумма);
	Колонки.Добавить("СуммаНДСУменьшение",    ТипСумма);
	Колонки.Добавить("СуммаСНДСУменьшение",   ТипСумма);
	
	Возврат ТабличнаяЧасть;

КонецФункции

Функция Новый_ИтогоКорректировки() Экспорт
	
	Итого = Новый Структура(
		"СуммаБезНДСУвеличение,
		|СуммаНДСУвеличение,
		|СуммаСНДСУвеличение,
		|
		|СуммаБезНДСУменьшение,
		|СуммаНДСУменьшение,
		|СуммаСНДСУменьшение"
	);
	
	Итого.СуммаБезНДСУвеличение	= 0;
	Итого.СуммаНДСУвеличение	= Неопределено; //: Число
	Итого.СуммаСНДСУвеличение	= 0;
	
	Итого.СуммаБезНДСУменьшение	= 0;
	Итого.СуммаНДСУменьшение	= Неопределено; //: Число
	Итого.СуммаСНДСУменьшение	= 0;
	
	Возврат Итого;
	
КонецФункции

// Документы

Функция Новый_ИсходныйДокумент() Экспорт
	
	Документ = Новый Структура(
		"Реквизиты,
		|
		|СтороныСделки,
		|ДанныеТранспортировки,
		|
		|Валюта,
		|ПлатежноРасчетныеДокументы,
		|
		|ОтветственныеЛица,
		|
		|ТМЦ"
	);
	
	Документ.Реквизиты					= Новый_РеквизитыДокумента();
	
	Документ.СтороныСделки				= Новый_СтороныСделки();
	Документ.ДанныеТранспортировки		= Новый_ДанныеТранспортировки();
	
	Документ.Валюта						= ОбъектнаяМодель.Новый_Валюта();
	Документ.ПлатежноРасчетныеДокументы	= ОбъектнаяМодель.Новый_ПлатежноРасчетныеДокументы();
	
	Документ.ОтветственныеЛица			= Новый_ОтветственныеЛица();
	
	Документ.ТМЦ						= Новый_ТМЦ();
	
	Возврат Документ;
	
КонецФункции

Функция Новый_КорректировочныйДокумент() Экспорт
	
	Документ = Новый Структура(
		"Реквизиты,
		|
		|СтороныСделки,
		|ДанныеСогласования,
		|
		|Валюта,
		|
		|ИзмененияТМЦ"
	);
	
	Документ.Реквизиты			= Новый_РеквизитыКорректировки();
	
	Документ.СтороныСделки		= Новый_СтороныСделки();
	Документ.ДанныеСогласования	= Новый_ДанныеСогласования();
	
	Документ.Валюта				= ОбъектнаяМодель.Новый_Валюта();
	
	Документ.ИзмененияТМЦ		= Новый_ИзмененияТМЦ();
	
	Возврат Документ;
	
КонецФункции

//}

// Заполняет номер строки в табличной части документа ИР.
// Табличная часть документа ИР формируется из нескольких табличных частей документа конфигурации,
// поэтому номер строки нельзя брать из конфигурации.
//
// Параметры:
//  ТабличнаяЧасть	 - ТаблицаЗначений - таб.часть документа ИР (см. Модуль_ОбъектнаяМодельКонфигурации.Новый_ТабЧастьИсходногоДокумента(),
// 											Модуль_ОбъектнаяМодельКонфигурации.Новый_ТабЧастьКорректировки()).
//
Процедура ЗаполнитьКолонкуНомерСтроки(ТабличнаяЧасть) Экспорт
	
	//: ТабличнаяЧасть = Новый ТаблицаЗначений;
	
	Нпп = 0;
	Для Каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
		Нпп = Нпп + 1;
		СтрокаТЧ.НомерСтроки = Нпп;
	КонецЦикла;
	
КонецПроцедуры

// Рассчитывает и заполняет Итого по табличной части документа ИР.
//
// Параметры:
//  Итого			 - Структура - итого (см. Модуль_ОбъектнаяМодельКонфигурации.Новый_ИтогоИсходногоДокумента(),
// 									Модуль_ОбъектнаяМодельКонфигурации.Новый_ИтогоКорректировки()).
//  ТабличнаяЧасть	 - ТаблицаЗначений - таб.часть документа ИР (см. Модуль_ОбъектнаяМодельКонфигурации.Новый_ТабЧастьИсходногоДокумента(),
// 											Модуль_ОбъектнаяМодельКонфигурации.Новый_ТабЧастьКорректировки()).
//
Процедура ЗаполнитьИтого(Итого, ТабличнаяЧасть) Экспорт
	
	Для Каждого ЭлементИтого Из Итого Цикл
		Итого[ЭлементИтого.Ключ] = ТабличнаяЧасть.Итог(ЭлементИтого.Ключ);
	КонецЦикла;
	
КонецПроцедуры

//========================================================================
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//========================================================================

