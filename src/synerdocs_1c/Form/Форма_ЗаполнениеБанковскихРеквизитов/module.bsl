
//========================================================================
// Форма заполнения реквизитов банковского счета.
// Используется для заполнения объекта Модуль_ОбъектнаяМодель.Новый_БанковскийСчет().
//========================================================================

Перем _Параметры;

Перем ПроверятьЗаполнениеРеквизитов;

// Модули
Перем ОбъектнаяМодель;

//========================================================================
// ИНИЦИАЛИЗАЦИЯ
//========================================================================

Процедура ПодключитьМодули()
	
	ОбъектнаяМодель = Модуль("Модуль_ОбъектнаяМодель");
	
КонецПроцедуры

Процедура Инициализировать()
	
	ПодключитьМодули();
	
КонецПроцедуры

Процедура ИнициализироватьФорму()
	
	Параметры = ПараметрыФормы();
	
	ПроверятьЗаполнениеРеквизитов = Параметры.ПроверятьЗаполнение;
	Если НЕ ПроверятьЗаполнениеРеквизитов Тогда
		
		ПроверяемыеРеквизиты = ПроверяемыеРеквизиты(); //: ПроверяемыеРеквизиты = Новый СписокЗначений;
		Для Каждого РеквизитФормы Из ПроверяемыеРеквизиты Цикл
			
			Элемент = ЭлементыФормы[РеквизитФормы.Значение]; //: Элемент = ЭлементыФормы.НаименованиеБанка;
			
			Элемент.ОтметкаНезаполненного		= Ложь;
			Элемент.АвтоОтметкаНезаполненного	= Ложь;
			
		КонецЦикла;
		
	КонецЕсли;
	
	УстановитьБанковскийСчет(Параметры.Модель);
	
КонецПроцедуры

Функция ПараметрыФормы()
	
	Если _Параметры = Неопределено Тогда
		ВызватьИсключение "Параметры формы не установлены";
	КонецЕсли;
	
	Возврат _Параметры;
	
КонецФункции

//========================================================================
// ЭКСПОРТНЫЙ ИНТЕРФЕЙС
//========================================================================

Функция Параметры() Экспорт
	
	Параметры = Новый Структура(
		"Модель,
		|ПроверятьЗаполнение"
	);
	
	Параметры.Модель = Неопределено; //: Модуль_ОбъектнаяМодель.Новый_БанковскийСчет();
	Параметры.ПроверятьЗаполнение = Истина;
	
	Возврат Параметры;
	
КонецФункции

Функция УстановитьПараметры(Параметры) Экспорт
	
	_Параметры = ФиксированныеДанные(Параметры);
	
КонецФункции

Функция ПроверяемыеРеквизиты() Экспорт
	
	Поля = Новый СписокЗначений;
	
	Поля.Добавить("РасчетныйСчет",        НСтр("ru = 'Номер счета'"));
	Поля.Добавить("БИК",                  НСтр("ru = 'БИК'"));
	Поля.Добавить("КоррСчет",             НСтр("ru = 'Корр. счет'"));
	Поля.Добавить("НаименованиеБанка",    НСтр("ru = 'Наименование банка'"));
	
	Возврат Поля;
	
КонецФункции

//========================================================================
// СОБЫТИЯ
//========================================================================

//===================================
//{ События формы

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьФорму();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты) Экспорт
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если НЕ ПроверятьЗаполнениеРеквизитов Тогда
		НепроверяемыеРеквизиты = СкопироватьМассив(ПроверяемыеРеквизиты);
	КонецЕсли;
	
	УдалитьНепроверяемыеРеквизиты(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

//}

//===================================
//{ Кнопки формы

Процедура ОсновныеДействияФормыСохранить(Кнопка)
	
	Если НЕ ПроверитьЗаполнениеФормы(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;
	
	Сохранить();
	
КонецПроцедуры

//}

//===================================
//{ Команды

Процедура Сохранить()
	
	Результат = БанковскийСчет();
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

//}

//========================================================================
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//========================================================================

//===================================
//{ Геттеры и сеттеры

// Модель формы

Процедура УстановитьБанковскийСчет(НовоеЗначение)
	
	Если НовоеЗначение = Неопределено Тогда
		БанковскийСчет = ОбъектнаяМодель.Новый_БанковскийСчет();
	Иначе
		БанковскийСчет = НовоеЗначение;
	КонецЕсли;
	
	РасчетныйСчет		= БанковскийСчет.РасчетныйСчет;
	БИК					= БанковскийСчет.БИК;
	КоррСчет			= БанковскийСчет.КоррСчет;
	НаименованиеБанка	= БанковскийСчет.НаименованиеБанка;
	
КонецПроцедуры

Функция БанковскийСчет()
	
	БанковскийСчет = ОбъектнаяМодель.Новый_БанковскийСчет();
	
	БанковскийСчет.РасчетныйСчет		= РасчетныйСчет;
	БанковскийСчет.БИК					= БИК;
	БанковскийСчет.КоррСчет				= КоррСчет;
	БанковскийСчет.НаименованиеБанка	= НаименованиеБанка;
	
	Возврат БанковскийСчет;
	
КонецФункции

//}


Инициализировать();

