
//========================================================================
// Форма заполнения реквизитов контрагента.
// Используется для заполнения объекта Модуль_ОбъектнаяМодель.Новый_Фактор().
//========================================================================

Перем _Параметры;

// Модули
Перем ОбъектнаяМодель;

//========================================================================
// ИНИЦИАЛИЗАЦИЯ
//========================================================================

Процедура ПодключитьМодули()
	
	ОбъектнаяМодель = Модуль("Модуль_ОбъектнаяМодель");
	
КонецПроцедуры

Процедура Инициализировать()
	
	ПодключитьМодули();
	
КонецПроцедуры

Процедура ИнициализироватьФорму()
	
	Параметры = ПараметрыФормы();
	
	НеочищаемыеПоля = Новый Массив;
	НеочищаемыеПоля.Добавить(ЭлементыФормы.БанковскиеРеквизиты);
	
	ДействиеОчитска = Новый Действие("Подключаемый_ОтменаОчистки");
	Для Каждого Элемент Из НеочищаемыеПоля Цикл
		Элемент.УстановитьДействие("Очистка", ДействиеОчитска);
	КонецЦикла;
	
	УстановитьФактора(Параметры.Модель);
	
КонецПроцедуры

Функция ПараметрыФормы()
	
	Если _Параметры = Неопределено Тогда
		ВызватьИсключение "Параметры формы не установлены";
	КонецЕсли;
	
	Возврат _Параметры;
	
КонецФункции

//========================================================================
// ЭКСПОРТНЫЙ ИНТЕРФЕЙС
//========================================================================

Функция Параметры() Экспорт
	
	Параметры = Новый Структура(
		"Модель"
	);
	
	Параметры.Модель = ОбъектнаяМодель.Новый_Фактор();
	
	Возврат Параметры;
	
КонецФункции

Функция УстановитьПараметры(Параметры) Экспорт
	
	_Параметры = ФиксированныеДанные(Параметры);
	
КонецФункции

Функция ПроверяемыеРеквизиты() Экспорт
	
	Поля = Новый СписокЗначений;
	
	Поля.Добавить("НаименованиеОрганизации",  НСтр("ru = 'Наименование'"));
	Поля.Добавить("ИНН",                      НСтр("ru = 'ИНН'"));
	Поля.Добавить("КПП",                      НСтр("ru = 'КПП'"));
	Поля.Добавить("Телефон",                  НСтр("ru = 'Телефон'"));
	
	Поля.Добавить("БанковскиеРеквизитыПредставление", НСтр("ru = 'Банковские реквизиты'"));
	
	Возврат Поля;
	
КонецФункции

//========================================================================
// СОБЫТИЯ
//========================================================================

//===================================
//{ События формы

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьФорму();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты) Экспорт
КонецПроцедуры

//}

//===================================
//{ Кнопки формы

Процедура ОсновныеДействияФормыСохранить(Кнопка)
	
	Если НЕ ПроверитьЗаполнениеФормы(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;
	
	Сохранить();
	
КонецПроцедуры

//}

//===================================
//{ События элементов формы

Процедура БанковскиеРеквизитыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Форма = ЭтотОбъект.ПолучитьФорму("Форма_ЗаполнениеБанковскихРеквизитов", Элемент);
	
	Параметры = Форма.Параметры();
	Параметры.Модель				= БанковскиеРеквизиты;
	Параметры.ПроверятьЗаполнение	= Истина;
	
	Форма.УстановитьПараметры(Параметры);
	Форма.Открыть();
	
КонецПроцедуры

Процедура БанковскиеРеквизитыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УстановитьБанковскиеРеквизиты(ВыбранноеЗначение);
	
КонецПроцедуры

//}

//===================================
//{ Команды

Процедура Сохранить()
	
	Результат = Фактор();
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

//}

//===================================
//{ Общие обработчики

// Обработчик для полей, для которых не нужна очистка,
// чтобы пользователь не мог эту самую очистку вызывать.
Процедура Подключаемый_ОтменаОчистки(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

//}

//========================================================================
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//========================================================================

//===================================
//{ Геттеры и сеттеры

// Модель формы

Процедура УстановитьФактора(НовоеЗначение)
	
	Если НовоеЗначение = Неопределено Тогда
		Фактор = ОбъектнаяМодель.Новый_Фактор();
	Иначе
		Фактор = НовоеЗначение;
	КонецЕсли;
	
	НаименованиеОрганизации	= Фактор.Наименование;
	ИНН						= Фактор.ИНН;
	КПП						= Фактор.КПП;
	Телефон					= Фактор.Телефон;
	Адрес					= Фактор.Адрес;
	
	УстановитьБанковскиеРеквизиты(Фактор.БанковскийСчет);
	
КонецПроцедуры

Функция Фактор()
	
	Фактор = ОбъектнаяМодель.Новый_Фактор();
	
	Фактор.Наименование	= НаименованиеОрганизации;
	Фактор.ИНН			= ИНН;
	Фактор.КПП			= КПП;
	Фактор.Телефон		= Телефон;
	Фактор.Адрес		= Адрес;
	
	Фактор.БанковскийСчет = БанковскиеРеквизиты;
	
	Возврат Фактор;
	
КонецФункции

// Прочее

Процедура УстановитьБанковскиеРеквизиты(НовоеЗначение)
	
	БанковскиеРеквизиты					= НовоеЗначение;
	БанковскиеРеквизитыПредставление	= ОбъектнаяМодель.БанковскийСчетПредставлениеДляUI(БанковскиеРеквизиты);
	
КонецПроцедуры

//}

Инициализировать();
