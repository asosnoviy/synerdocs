
//========================================================================
// Форма выбора функции универсального документа.
// Используется для выбора из перечислений Модуль_ОбъектнаяМодель.ВидыУПД()
// и Модуль_ОбъектнаяМодель.ВидыУКД().
//========================================================================

Перем _Параметры;

// Модули
Перем ОбъектнаяМодель;

//========================================================================
// ИНИЦИАЛИЗАЦИЯ
//========================================================================

Процедура ПодключитьМодули()
	
	ОбъектнаяМодель = Модуль("Модуль_ОбъектнаяМодель");
	
КонецПроцедуры

Процедура Инициализировать()
	
	ПодключитьМодули();
	
КонецПроцедуры

Процедура ИнициализироватьФорму()
	
	Параметры = ПараметрыФормы();
	
	Если Параметры.ЭтоФункцияУПД Тогда
		
		ВидыУПД = ОбъектнаяМодель.ВидыУПД();
		
		ЭлементыФормы.ВидДокументаСФ.ВыбираемоеЗначение					= ВидыУПД.СЧФ;
		ЭлементыФормы.ВидДокументаПервичныйДокумент.ВыбираемоеЗначение	= ВидыУПД.ДОП;
		ЭлементыФормы.ВидДокументаЕдиныйДокумент.ВыбираемоеЗначение		= ВидыУПД.СЧФДОП;
		
		ЭлементыФормы.ПояснениеСФ.Заголовок					= НСтр("ru = 'Счет-фактура, применяемый при расчетах по налогу на добавленную стоимость'");
		ЭлементыФормы.ПояснениеПервичныйДокумент.Заголовок	= НСтр("ru = 'Документ об отгрузке товаров (выполнении работ), передаче имущественных прав'");
		ЭлементыФормы.ПояснениеЕдиныйДокумент.Заголовок		= НСтр(
			"ru = 'Счет-фактура, применяемый при расчетах по налогу на добавленную стоимость, и документ об отгрузке товаров (выполнении работ), передаче имущественных прав (документ об оказании услуг)'"
		);
		
		Перечисление = ВидыУПД;
		
	Иначе
		
		ВидыУКД = ОбъектнаяМодель.ВидыУКД();
		
		ЭлементыФормы.ВидДокументаСФ.ВыбираемоеЗначение					= ВидыУКД.КСЧФ;
		ЭлементыФормы.ВидДокументаПервичныйДокумент.ВыбираемоеЗначение	= ВидыУКД.ДИС;
		ЭлементыФормы.ВидДокументаЕдиныйДокумент.ВыбираемоеЗначение		= ВидыУКД.КСЧФДИС;
		
		ЭлементыФормы.ПояснениеСФ.Заголовок					= НСтр("ru = 'Корректировочный счет-фактура, применяемый при расчетах по налогу на добавленную стоимость'");
		ЭлементыФормы.ПояснениеПервичныйДокумент.Заголовок	= НСтр("ru = 'Документ об изменении стоимости отгруженных товаров (выполненных работ, оказанных услуг), переданных имущественных прав'");
		ЭлементыФормы.ПояснениеЕдиныйДокумент.Заголовок		= НСтр(
			"ru = 'Корректировочный счет-фактура, применяемый при расчетах по налогу на добавленную стоимость, и документ об изменении стоимости отгруженных товаров (выполненных работ, оказанных услуг), переданных имущественных прав'"
		);
		
		Перечисление = ВидыУКД;
		
	КонецЕсли;
	
	Элементы = ЗначенияВМассиве(
		ЭлементыФормы.ВидДокументаСФ,
		ЭлементыФормы.ВидДокументаПервичныйДокумент,
		ЭлементыФормы.ВидДокументаЕдиныйДокумент
	);
	Для Каждого Элемент Из Элементы Цикл //: Элемент = ЭлементыФормы.ВидДокументаЕдиныйДокумент;
		Элемент.Заголовок = ПредставлениеПеречисления(Перечисление, Элемент.ВыбираемоеЗначение);
	КонецЦикла;
	
	ВидДокумента = Параметры.ТекущееЗначение;
	
КонецПроцедуры

Функция ПараметрыФормы()
	
	Если _Параметры = Неопределено Тогда
		ВызватьИсключение "Параметры формы не установлены";
	КонецЕсли;
	
	Возврат _Параметры;
	
КонецФункции

//========================================================================
// ЭКСПОРТНЫЙ ИНТЕРФЕЙС
//========================================================================

Функция Параметры() Экспорт
	
	Параметры = Новый Структура(
		"ТекущееЗначение,
		|ЭтоФункцияУПД"
	);
	
	//: Модуль_ОбъектнаяМодель.ВидыУПД();
	//: Модуль_ОбъектнаяМодель.ВидыУКД();
	Параметры.ТекущееЗначение	= Неопределено;
	Параметры.ЭтоФункцияУПД			= Истина;
	
	Возврат Параметры;
	
КонецФункции

Функция УстановитьПараметры(Параметры) Экспорт
	
	_Параметры = ФиксированныеДанные(Параметры);
	
КонецФункции

//========================================================================
// СОБЫТИЯ
//========================================================================

//===================================
//{ События формы

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьФорму();
	
КонецПроцедуры

//}

//===================================
//{ Кнопки формы

Процедура ОсновныеДействияФормыСохранить(Кнопка)
	
	Сохранить();
	
КонецПроцедуры

//}

//===================================
//{ Команды

Процедура Сохранить()
	
	Результат = ВидДокумента;
	ОповеститьОВыборе(ВидДокумента);
	
КонецПроцедуры

//}

//========================================================================
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//========================================================================


Инициализировать();

