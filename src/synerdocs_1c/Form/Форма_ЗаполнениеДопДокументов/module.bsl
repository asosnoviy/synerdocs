
//========================================================================
// Форма заполнения реквизитов дополнительных документов, 
// таких как транспортные накладные и платежно-расчетные документы.
// Используется для заполнения объектов Модуль_ОбъектнаяМодель.Новый_ТранспортныеНакладные()
// и Модуль_ОбъектнаяМодель.Новый_ПлатежноРасчетныеДокументы().
//========================================================================

Перем _Параметры;

Перем ВидСписка;

// Модули
Перем ОбъектнаяМодель;

//========================================================================
// ИНИЦИАЛИЗАЦИЯ
//========================================================================

Процедура ПодключитьМодули()
	
	ОбъектнаяМодель = Модуль("Модуль_ОбъектнаяМодель");
	
КонецПроцедуры

Процедура Инициализировать()
	
	ПодключитьМодули();
	
КонецПроцедуры

Процедура ИнициализироватьФорму()
	
	Параметры = ПараметрыФормы();
	
	ВидСписка = Параметры.ВидСписка;
	УстановитьСписокДокументов(Параметры.Модель);
	
	ЭтаФорма.Заголовок = ПредставлениеПеречисления(ВидыСпискаДокументов(), ВидСписка);
	
КонецПроцедуры

Функция ПараметрыФормы()
	
	Если _Параметры = Неопределено Тогда
		ВызватьИсключение "Параметры формы не установлены";
	КонецЕсли;
	
	Возврат _Параметры;
	
КонецФункции

//========================================================================
// ЭКСПОРТНЫЙ ИНТЕРФЕЙС
//========================================================================

Функция ВидыСпискаДокументов() Экспорт
	
	Виды = Новый Структура(
		"ПлатежноРасчетныеДокументы,
		|ТранспортныеНакладные"
	);
	
	Для Каждого Вид Из Виды Цикл
		Виды[Вид.Ключ] = Вид.Ключ;
	КонецЦикла;
	
	Представление = Новый Соответствие;
	Представление[Виды.ПлатежноРасчетныеДокументы]	= НСтр("ru = 'Платежно-расчетные документы'");
	Представление[Виды.ТранспортныеНакладные]		= НСтр("ru = 'Транспортные накладные'");
	
	Виды = Новый_Перечисление(Виды, Представление);
	
	Возврат Виды;
	
КонецФункции

Функция Параметры() Экспорт
	
	Параметры = Новый Структура(
		"Модель,
		|ВидСписка"
	);
	
	//: Модуль_ОбъектнаяМодель.Новый_ТранспортныеНакладные();
	//: Модуль_ОбъектнаяМодель.Новый_ПлатежноРасчетныеДокументы();
	Параметры.Модель	= Неопределено; 
	Параметры.ВидСписка	= Неопределено; //: ВидыСпискаДокументов();
	
	Возврат Параметры;
	
КонецФункции

Функция УстановитьПараметры(Параметры) Экспорт
	
	_Параметры = ФиксированныеДанные(Параметры);
	
КонецФункции

Функция ПроверяемыеРеквизиты() Экспорт
	
	Поля = Новый СписокЗначений;
	
	ПредставлениеСписка = ПредставлениеПеречисления(ВидыСпискаДокументов(), ВидСписка);
	Поля.Добавить("СписокДокументов.Номер",   ПредставлениеСписка + НСтр("ru = '#Номер'"));
	Поля.Добавить("СписокДокументов.Дата",    ПредставлениеСписка + НСтр("ru = '#Дата'"));
	
	Возврат Поля;
	
КонецФункции

//========================================================================
// СОБЫТИЯ
//========================================================================

//===================================
//{ События формы

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьФорму();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты) Экспорт
	
КонецПроцедуры

//}

//===================================
//{ Кнопки формы

Процедура ОсновныеДействияФормыСохранить(Кнопка)
	
	Если НЕ ПроверитьЗаполнениеФормы(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;
	
	Сохранить();
	
КонецПроцедуры

//}

//===================================
//{ Команды

Процедура Сохранить()
	
	Результат = СписокДокументов();
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

//}

//========================================================================
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//========================================================================

Процедура УстановитьСписокДокументов(НовоеЗначение)
	
	ЗаполнитьТаблицу(СписокДокументов, НовоеЗначение, "Номер, Дата");
	
КонецПроцедуры

Функция СписокДокументов()
	
	ВидыСписка = ВидыСпискаДокументов();
	
	Если ВидСписка = ВидыСписка.ПлатежноРасчетныеДокументы Тогда
		НомерДата = ОбъектнаяМодель.Новый_ПлатежноРасчетныеДокументы();
	ИначеЕсли ВидСписка = ВидыСписка.ТранспортныеНакладные Тогда
		НомерДата = ОбъектнаяМодель.Новый_ТранспортныеНакладные();
	Иначе
		ВызватьИсключение "Не реализовано";
	КонецЕсли;
	
	ЗаполнитьТаблицу(НомерДата, СписокДокументов, "Номер, Дата");
	
	Возврат НомерДата;
	
КонецФункции


Инициализировать();

