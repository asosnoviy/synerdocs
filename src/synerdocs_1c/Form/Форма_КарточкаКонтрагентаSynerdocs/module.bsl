
Перем _ИмяФормы;

Перем Создан;

// Модули
Перем Телеметрия;
Перем СобытияТелеметрии;

Процедура ПодключитьМодули()
	
	Модули = ТребуютсяМодули("Модуль_Телеметрия");
	Телеметрия = Модули.Модуль_Телеметрия;
	
	СобытияТелеметрии = Телеметрия.ОписаниеСобытий();
	
КонецПроцедуры

Процедура ИнициализироватьФорму()
	
	ПодключитьМодули();
	
	Создан = Ложь;
	
КонецПроцедуры

//========================================================================
// ЭКСПОРТНЫЙ ИНТЕРФЕЙС
//========================================================================

Функция ИмяФормы() Экспорт
	
	Если _ИмяФормы = Неопределено Тогда
		_ИмяФормы = ПолучитьИмяФормы(ЭтаФорма);
	КонецЕсли;
	
	Возврат _ИмяФормы;
	
КонецФункции


Процедура ПриОткрытии()
	
	УстановитьЗаголовокОкна(ЭтаФорма, "Карточка контрагента Synerdocs");
	ЗаполнитьКонтактнуюИнформацию();
	УстановитьВидимость();

КонецПроцедуры

Процедура ОсновныеДействияФормыОсновныеДействияФормыСоздать(Кнопка)
	
	Если ЭтоБГУ Тогда
		СоздатьКонтрагентаБГУ();
	Иначе
		
		Если Покупатель
				ИЛИ Поставщик Тогда
			
			НовыйКонтрагент = Справочники.Контрагенты.СоздатьЭлемент();
			НовыйКонтрагент.НаименованиеПолное = Наименование;
			НовыйКонтрагент.Наименование = Наименование;
			НовыйКонтрагент.ИНН = ИНН;
			НовыйКонтрагент.КПП = КПП;
			НовыйКонтрагент.ЮрФизЛицо = ?(ЮрФизЛицо = "Физ. лицо" ИЛИ ЮрФизЛицо = "Физлицо", Перечисления.ЮрФизЛицо.ФизЛицо, Перечисления.ЮрФизЛицо.ЮрЛицо);
			
			//Для КА и УТ
			МетаданныеСправочникаКонтрагенты = НовыйКонтрагент.Метаданные();
			Если ЕстьРеквизитСправочника("Покупатель", МетаданныеСправочникаКонтрагенты) Тогда
				НовыйКонтрагент.Покупатель = Покупатель;
			КонецЕсли;
			
			Если ЕстьРеквизитСправочника("Поставщик", МетаданныеСправочникаКонтрагенты) Тогда
				НовыйКонтрагент.Поставщик = Поставщик;
			КонецЕсли;
			
			МетаданныеСправочникаДоговоры = Метаданные.Справочники.ДоговорыКонтрагентов;
			
			НовыйКонтрагент.ПроверитьЗаполнение();
			НовыйКонтрагент.Записать();
			
			//Создаем договор с контрагентом в зависимости от галочек
			Если Покупатель Тогда
				Договор = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
				Договор.Организация = Организация;
				Договор.Владелец = НовыйКонтрагент.Ссылка;
				Договор.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
				Договор.Наименование = "Договор с покупателем б/н";
				Договор.Комментарий = "Создан автоматически при загрузке из Synerdocs пользователем <" + Пользователь + "> от " + ТекущаяДата();
				Договор.ВалютаВзаиморасчетов = мВалютаРегламентированногоУчета;
				
				//Для КА и УТ
				Если ЕстьРеквизитСправочника("ВедениеВзаиморасчетов", МетаданныеСправочникаДоговоры) Тогда
					Договор.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом;
				КонецЕсли;
				
				Договор.Записать();
				НовыйКонтрагент.ОсновнойДоговорКонтрагента = Договор.Ссылка;
			КонецЕсли;
			
			Если Поставщик Тогда
				Договор = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
				Договор.Организация = Организация;
				Договор.Владелец = НовыйКонтрагент.Ссылка;
				Договор.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком;
				Договор.Наименование = "Договор с поставщиком б/н";
				Договор.Комментарий = "Создан автоматически при загрузке из Synerdocs пользователем <" + Пользователь + "> от " + ТекущаяДата();
				Договор.ВалютаВзаиморасчетов = мВалютаРегламентированногоУчета;
				
				//Для КА и УТ
				Если ЕстьРеквизитСправочника("ВедениеВзаиморасчетов", МетаданныеСправочникаДоговоры) Тогда
					Договор.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом;
				КонецЕсли;
				
				Договор.Записать();
				НовыйКонтрагент.ОсновнойДоговорКонтрагента = Договор.Ссылка;
			КонецЕсли;
			
			НовыйКонтрагент.Записать();		
			
			//Создаем адрес
			ОтказВСозданииАдреса = Ложь;
			ЗаписьКИ = РегистрыСведений.КонтактнаяИнформация.СоздатьМенеджерЗаписи();
			ЗаписьКИ.Объект = НовыйКонтрагент.Ссылка;
			ЗаписьКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
			ЗаписьКИ.Вид = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
			
			Если Syn_РоссийскийАдрес Тогда			
				//проверяем наличие региона по коду в РСВ "Адресный классификатор"
				Попытка
					КодРегионаЧислом = Число(Syn_КодРегиона);
				Исключение
					ОтправитьУведомлениеПользователю("Некорректный код региона");
					ОтказВСозданииАдреса = Истина;
				КонецПопытки;
				
				Если Не ОтказВСозданииАдреса Тогда
					//Ищем регион в РСВ "Адресный классификатор по коду"
					Регион = "";
					Запрос = Новый Запрос("ВЫБРАТЬ
					|	АдресныйКлассификатор.Наименование КАК Наименование,
					|	АдресныйКлассификатор.Сокращение
					|ИЗ
					|	РегистрСведений.АдресныйКлассификатор КАК АдресныйКлассификатор
					|ГДЕ
					|	АдресныйКлассификатор.ТипАдресногоЭлемента = 1
					|	И АдресныйКлассификатор.КодРегионаВКоде = &КодРегионаВКоде");
					Запрос.УстановитьПараметр("КодРегионаВКоде", КодРегионаЧислом);
					Выборка = Запрос.Выполнить().Выбрать();
					Если Выборка.Следующий() Тогда
						//Syn_Регион = Выборка.Наименование + " " + Выборка.Сокращение;
						Регион = Выборка.Наименование;
					Иначе
						ОтправитьУведомлениеПользователю("По коду региона " + Syn_КодРегиона + " не найден регион в РСВ <Адресный классификатор>." + Символы.ПС + "Проверьте код региона, либо загрузите адресный классификатор");
						ОтказВСозданииАдреса = Истина;
					КонецЕсли;
					
					Если Не ОтказВСозданииАдреса Тогда
						ЗаписьКИ.Поле1 = Syn_Индекс;
						ЗаписьКИ.Поле2 = Регион;
						ЗаписьКИ.Поле3 = Syn_Район;
						ЗаписьКИ.Поле4 = Syn_Город;
						ЗаписьКИ.Поле5 = Syn_НаселенныйПункт;
						ЗаписьКИ.Поле6 = Syn_Улица;
						ЗаписьКИ.Поле7 = Syn_Дом;
						ЗаписьКИ.Поле8 = Syn_Корпус;
						ЗаписьКИ.Поле9 = Syn_Квартира;
						ЗаписьКИ.Представление = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдреса(ЗаписьКИ);
						ЗаписьКИ.Записать();
					КонецЕсли;
				КонецЕсли;
			Иначе
				Страна = Справочники.КлассификаторСтранМира.НайтиПоКоду(Syn_КодСтраны).Наименование;
				Если ЗначениеЗаполнено(Страна) Тогда
					ЗаписьКИ.Поле1 = Страна;      
					ЗаписьКИ.Представление = Страна + ", " + Syn_Представление;
					ЗаписьКИ.Записать();
				Иначе
					Сообщить("В классификаторе стран мира не найдена страна с кодом [" + Syn_Страна +  "]. Добавьте ее вручную.");
				КонецЕсли;
			КонецЕсли;
						
			Если ОтказВСозданииАдреса Тогда
				ОтправитьУведомлениеПользователю("Ошибка записи контактной информации. Контрагент создан без контактной информации. Для синхронизации адреса воспользуйтесь кнопкой <Синхронизировать адрес>");
			КонецЕсли;
			
			Создан = Истина;
			ЭтаФорма.Закрыть(НовыйКонтрагент.Ссылка);
			
		Иначе
			
			ТекстСообщения = "Для автоматического создания договора с контрагентом необходимо поставить хотя бы один флажок <Покупатель> или <Поставщик>!";
			Предупреждение(ТекстСообщения);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьКонтрагентаБГУ()
	
	НовыйКонтрагент = Справочники.Контрагенты.СоздатьЭлемент();
	НовыйКонтрагент.НаименованиеПолное = Наименование;
	НовыйКонтрагент.Наименование = Наименование;
	НовыйКонтрагент.ИНН = ИНН;
	НовыйКонтрагент.КПП = КПП;
	НовыйКонтрагент.ВидКонтрагента = ?(ЮрФизЛицо = "Организация",Перечисления.ВидыКонтрагентов.Организация,Перечисления.ВидыКонтрагентов.ФизЛицо);
			
	МетаданныеСправочникаДоговоры = Метаданные.Справочники.Договоры;
	
	НовыйКонтрагент.Записать();
							 		
	//Создаем адрес
	ОтказВСозданииАдреса = Ложь;
	ЗаписьКИ = РегистрыСведений.КонтактнаяИнформация.СоздатьМенеджерЗаписи();
	ЗаписьКИ.Объект = НовыйКонтрагент.Ссылка;
	ЗаписьКИ.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	ЗаписьКИ.Вид = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
	
	Если Syn_РоссийскийАдрес Тогда			
		//проверяем наличие региона по коду в РСВ "Адресный классификатор"
		Попытка
			КодРегионаЧислом = Число(Syn_КодРегиона);
		Исключение
			ОтправитьУведомлениеПользователю("Некорректный код региона");
			ОтказВСозданииАдреса = Истина;
		КонецПопытки;
		
		Если Не ОтказВСозданииАдреса Тогда
			Регион = "";
			Запрос = Новый Запрос("ВЫБРАТЬ
			                      |	АдресныйКлассификатор.Наименование КАК Наименование,
			                      |	АдресныйКлассификатор.Сокращение
			                      |ИЗ
			                      |	РегистрСведений.АдресныйКлассификатор КАК АдресныйКлассификатор
			                      |ГДЕ
			                      |	АдресныйКлассификатор.ТипАдресногоЭлемента = 1
			                      |	И АдресныйКлассификатор.КодРегионаВКоде = &КодРегионаВКоде");
			Запрос.УстановитьПараметр("КодРегионаВКоде", КодРегионаЧислом);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Регион = Выборка.Наименование;
			Иначе
				ОтправитьУведомлениеПользователю("По коду региона " + Syn_КодРегиона + " не найден регион в РСВ <Адресный классификатор>." + Символы.ПС + "Проверьте код региона, либо загрузите адресный классификатор");
				ОтказВСозданииАдреса = Истина;
			КонецЕсли;
			
			Если Не ОтказВСозданииАдреса Тогда
				ЗаписьКИ.Поле1 = Syn_Индекс;
				ЗаписьКИ.Поле2 = Регион;
				ЗаписьКИ.Поле3 = Syn_Район;
				ЗаписьКИ.Поле4 = Syn_Город;
				ЗаписьКИ.Поле5 = Syn_НаселенныйПункт;
				ЗаписьКИ.Поле6 = Syn_Улица;
				ЗаписьКИ.Поле7 = Syn_Дом;
				ЗаписьКИ.Поле8 = Syn_Корпус;
				ЗаписьКИ.Поле9 = Syn_Квартира;
				ЗаписьКИ.Представление = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдреса(ЗаписьКИ);
				ЗаписьКИ.Записать();
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если НЕ Справочники.КлассификаторСтранМира.НайтиПоКоду(Syn_КодСтраны).Пустая() Тогда				
			ЗаписьКИ.Поле1 = Syn_КодСтраны;
		Иначе
			Сообщить("В классификаторе не найдена страна с кодом " + Syn_КодСтраны + ". Необходимо добавить страну в справочник вручную.");
		КонецЕсли;
	
		ЗаписьКИ.Представление = Syn_Представление;
		ЗаписьКИ.Записать();
	КонецЕсли;
			
	Если ОтказВСозданииАдреса Тогда
		ОтправитьУведомлениеПользователю("Ошибка записи контактной информации. Контрагент создан без контактной информации. Для синхронизации адреса воспользуйтесь кнопкой <Синхронизировать адрес>");
	КонецЕсли;
	
	Создан = Истина;
	ЭтаФорма.Закрыть(НовыйКонтрагент.Ссылка);
	
КонецПроцедуры

// Процедура устанавливает доступность и видимость полей в зависимости от режима открытия формы
//
// Параметры:
//  Нет
//
Процедура УстановитьВидимость()
	
	Если ЭтоБГУ Тогда
		ЭлементыФормы.Покупатель.Доступность = Ложь;
		ЭлементыФормы.Поставщик.Доступность = Ложь;
	КонецЕсли;
		
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.СоздатьКонтрагента.Доступность = РежимСозданияКонтрагента;
	
	ЭлементыФормы.Наименование.Доступность = РежимСозданияКонтрагента;
	ЭлементыФормы.ПанельОбщие.Доступность = РежимСозданияКонтрагента;
	ЭлементыФормы.ПанельАдрес.Доступность = РежимСозданияКонтрагента;
	ЭлементыФормы.Syn_РоссийскийАдрес.Доступность = РежимСозданияКонтрагента;
	ЭлементыФормы.Syn_АдресЗаПределамиРФ.Доступность = РежимСозданияКонтрагента;
	ЭлементыФормы.Комментарий.Доступность = РежимСозданияКонтрагента;
	
	ЭлементыФормы.Покупатель.Видимость = РежимСозданияКонтрагента;
	ЭлементыФормы.Поставщик.Видимость = РежимСозданияКонтрагента;
	
	Если Syn_РоссийскийАдрес Тогда
		ЭлементыФормы.ПанельАдрес.ТекущаяСтраница = ЭлементыФормы.ПанельАдрес.Страницы.СтраницаРФ;
	Иначе
		ЭлементыФормы.ПанельАдрес.ТекущаяСтраница = ЭлементыФормы.ПанельАдрес.Страницы.СтраницаНеРФ;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьКонтактнуюИнформацию()
					
	//заполняем поля контрагента Synerdocs
	Попытка
		Syn_Контакт = ExchangeService.GetContact(Токен, Syn_IDОрганизации, Syn_IDКонтрагента);
		Syn_Контрагент = ExchangeService.GetOrganizationByInnKpp(Токен, Syn_Контакт.ContragentInn, Syn_Контакт.ContragentKpp);
				
		Если Syn_Контрагент.IsForeignCompany Тогда
			//для иностранной компании
			Syn_РоссийскийАдрес = Ложь;
			
			Syn_Представление = Syn_Контрагент.LegalAddress.ForeignStreetAddress;
			Syn_Страна = Справочники.КлассификаторСтранМира.НайтиПоКоду(Syn_Контрагент.LegalAddress.CountryCode);
			
			Если Не ЗначениеЗаполнено(Syn_Страна) Тогда
				Сообщить("Страна с кодом [" + Syn_Контрагент.LegalAddress.CountryCode + "] не найдена в справочнике. Создайте ее и/или укажите вручную");
			Иначе
				Syn_КодСтраны = Syn_Контрагент.LegalAddress.CountryCode;
			КонецЕсли;
		Иначе
			//для русской компании
			Syn_РоссийскийАдрес = Истина;
			
			Syn_Адрес = Syn_Контрагент.LegalAddress;
			Если Syn_Адрес <> НЕОПРЕДЕЛЕНО Тогда
				Syn_КодРегиона = Syn_Адрес.RegionCode;
				
				Попытка
					КодРегионаЧислом = Число(Syn_КодРегиона);
					//Ищем регион в РСВ "Адресный классификатор по коду"
					Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
					                      |	АдресныйКлассификатор.Наименование КАК Наименование,
					                      |	АдресныйКлассификатор.Сокращение
					                      |ИЗ
					                      |	РегистрСведений.АдресныйКлассификатор КАК АдресныйКлассификатор
					                      |ГДЕ
					                      |	АдресныйКлассификатор.ТипАдресногоЭлемента = 1
					                      |	И АдресныйКлассификатор.КодРегионаВКоде = &КодРегионаВКоде");
					Запрос.УстановитьПараметр("КодРегионаВКоде", КодРегионаЧислом);
					Выборка = Запрос.Выполнить().Выбрать();
					Если Выборка.Следующий() Тогда
						Syn_Регион 		= СокрЛП(Выборка.Наименование + " " + Выборка.Сокращение);
					Иначе
				        Syn_Регион = Syn_КодРегиона;
					КонецЕсли;
					
				Исключение
					
				КонецПопытки;
				
				Syn_Индекс = Syn_Адрес.PostalCode;
				Syn_Район = Syn_Адрес.District;
				Syn_Город = Syn_Адрес.City;
				Syn_НаселенныйПункт = Syn_Адрес.locality;
				Syn_Улица = Syn_Адрес.Street;
				Syn_Дом = Syn_Адрес.House;
				Syn_Корпус = Syn_Адрес.Building;
				Syn_Квартира = Syn_Адрес.Apartment;
				
				Syn_ПредставлениеРФ = "Россия" +
				  ?(ЗначениеЗаполнено(Syn_Индекс), ", " + Syn_Индекс, "") +
				  ?(ЗначениеЗаполнено(Syn_Регион), ", " + Syn_Регион, "")	+
				  ?(ЗначениеЗаполнено(Syn_Район), ", " + Syn_Район, "") +
				  ?(ЗначениеЗаполнено(Syn_Город), ", " + Syn_Город, "") + 
				  ?(ЗначениеЗаполнено(Syn_НаселенныйПункт), ", " + Syn_НаселенныйПункт, "") + 
				  ?(ЗначениеЗаполнено(Syn_Улица), ", " + Syn_Улица, "") + 
				  ?(ЗначениеЗаполнено(Syn_Дом), ", дом " + Syn_Дом, "") + 
				  ?(ЗначениеЗаполнено(Syn_Корпус), ", корпус " + Syn_Корпус, "") + 
				  ?(ЗначениеЗаполнено(Syn_Квартира), ", кв. " + Syn_Квартира, "");
									

			КонецЕсли;
		КонецЕсли;
	Исключение
		ОписаниеОшибкиСтрокой = ОписаниеОшибки();
		ТекстОшибкиSynerdocs = РазобратьИсключениеSynerdocs(ОписаниеОшибкиСтрокой);
		
		ОтправитьУведомлениеПользователю("Ошибка получения информации о контрагенте с : <" + Наименование + ">. " + ТекстОшибкиSynerdocs);
		
	КонецПопытки;
	
КонецПроцедуры

Процедура Syn_РоссийскийАдресПриИзменении(Элемент)
	Если Syn_РоссийскийАдрес Тогда
		ЭлементыФормы.ПанельАдрес.ТекущаяСтраница = ЭлементыФормы.ПанельАдрес.Страницы.СтраницаРФ;
	Иначе
		ЭлементыФормы.ПанельАдрес.ТекущаяСтраница = ЭлементыФормы.ПанельАдрес.Страницы.СтраницаНеРФ;
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗакрытии()
	
	Если НЕ Создан Тогда
		Телеметрия.ОтправитьАналитику(
			СобытияТелеметрии.Синхронизация.ОтменаСозданияКонтрагента,
			ЭтаФорма
		);
	КонецЕсли;
	
КонецПроцедуры


ИнициализироватьФорму();
