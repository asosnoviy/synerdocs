
Перем _ИмяФормы;

//========================================================================
// ЭКСПОРТНЫЙ ИНТЕРФЕЙС
//========================================================================

Функция ИмяФормы() Экспорт
	
	Если _ИмяФормы = Неопределено Тогда
		_ИмяФормы = ПолучитьИмяФормы(ЭтаФорма);
	КонецЕсли;
	
	Возврат _ИмяФормы;
	
КонецФункции


Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ПолеХарактеристикиДоступно = ЕстьРеквизитСправочника("ВестиУчетПоХарактеристикам", Метаданные.Справочники.Номенклатура);
	ПолеНомерГТДДоступно = Метаданные.Справочники.Найти("НомераГТД") <> НЕОПРЕДЕЛЕНО;
	
	ОсновнаяФорма = ЭтотОбъект.ПолучитьФорму("ОсновнаяФорма");
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	УстановитьЗаголовокОкна(ЭтаФорма, "Синхронизация номенклатуры");
	
	ФлагСинхронизироватьХарактеристики = Истина;
	ТЗ_СинхронизацияНоменклатуры = ТаблицаНоменклатуры;
	Если ПолеХарактеристикиДоступно Тогда
		Для Каждого Стр ИЗ ТЗ_СинхронизацияНоменклатуры Цикл 
			Если Не ЗначениеЗаполнено(Стр.ХарактеристикаНоменклатуры) Тогда
				Стр.ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ПолеНомерГТДДоступно Тогда
		ЭлементыФормы.ТЗ_СинхронизацияНоменклатуры.Колонки.НомерГТД.Доступность = ПолеНомерГТДДоступно;
		Для Каждого Стр ИЗ ТЗ_СинхронизацияНоменклатуры Цикл
			Если НЕ ЗначениеЗаполнено(Стр.НомерГТД) Тогда 
				Стр.НомерГТД = Справочники.НомераГТД.ПустаяСсылка();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЭлементыФормы.Контрагент.Заголовок = "Поставщик: " + СтруктураИнформации.Контрагент;
	ЭлементыФормы.Документ.Заголовок =   " Документ: " + СтруктураИнформации.Документ;
	
	Если СинхронизироватьАвтоматически Тогда
		ПодключитьОбработчикОжидания("АвтоматическаяСинхронизация", 1);
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьНенайденное(Кнопка)

	МетаданныеСправочникаНоменклатура = Метаданные.Справочники.Номенклатура;
	ЕстьНесинхронизированнаяНоменклатура = (ТЗ_СинхронизацияНоменклатуры.Найти(Справочники.Номенклатура.ПустаяСсылка(), "Номенклатура") <> НЕОПРЕДЕЛЕНО);
	
	// Проверим наличие необходимых каталогов в справочнике Номенклатура
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ЭтоГруппа = ИСТИНА
	|	И Номенклатура.ПометкаУдаления = ЛОЖЬ
	|	И Номенклатура.Наименование = &Наименование
	|	И Номенклатура.Родитель = &Родитель";
	
	// Общий каталог
	Запрос.УстановитьПараметр("Наименование", "Synerdocs. Синхронизация");
	Запрос.УстановитьПараметр("Родитель", Справочники.Номенклатура.ПустаяСсылка());
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		ГруппаОбщая = Результат.Ссылка;
		
		// Каталог контрагента
		Запрос.УстановитьПараметр("Наименование", Контрагент.Наименование);
		Запрос.УстановитьПараметр("Родитель", ГруппаОбщая);
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			ГруппаКонтрагент = Результат.Ссылка;
			
			// Товары или Услуги
			Запрос.УстановитьПараметр("Наименование", ?(ЭтоУслуги, "Услуги", "Товары"));
			Запрос.УстановитьПараметр("Родитель", ГруппаКонтрагент);
			Результат = Запрос.Выполнить().Выбрать();
			Если Результат.Следующий() Тогда
				ГруппаТоварыУслуги = Результат.Ссылка;
			Иначе
				ГруппаТоварыУслуги = Справочники.Номенклатура.ПустаяСсылка();
			КонецЕсли;
		Иначе
			ГруппаТоварыУслуги = Справочники.Номенклатура.ПустаяСсылка();
			ГруппаКонтрагент = Справочники.Номенклатура.ПустаяСсылка();
		КонецЕсли;
	Иначе
		ГруппаТоварыУслуги = Справочники.Номенклатура.ПустаяСсылка();
		ГруппаКонтрагент = Справочники.Номенклатура.ПустаяСсылка();
		ГруппаОбщая = Справочники.Номенклатура.ПустаяСсылка();
	КонецЕсли;
	
	Если ЕстьНесинхронизированнаяНоменклатура Тогда
		// Создадим, если еще не созданы, каталоги (группы)
		Если Не ЗначениеЗаполнено(ГруппаТоварыУслуги) Тогда
			Если Не ЗначениеЗаполнено(ГруппаКонтрагент) Тогда
				Если Не ЗначениеЗаполнено(ГруппаОбщая) Тогда
					ГруппаОбщаяОб = Справочники.Номенклатура.СоздатьГруппу();
					ГруппаОбщаяОб.Наименование = "Synerdocs. Синхронизация";
					ГруппаОбщаяОб.Записать();
					ГруппаОбщая = ГруппаОбщаяОб.Ссылка;
				КонецЕсли;
				ГруппаКонтрагентОб = Справочники.Номенклатура.СоздатьГруппу();
				ГруппаКонтрагентОб.Родитель = ГруппаОбщая;
				ГруппаКонтрагентОб.Наименование = Контрагент.Наименование;
				ГруппаКонтрагентОб.Записать();
				ГруппаКонтрагент = ГруппаКонтрагентОб.Ссылка;
			КонецЕсли;
			ГруппаТоварыУслугиОб = Справочники.Номенклатура.СоздатьГруппу();
			ГруппаТоварыУслугиОб.Родитель = ГруппаКонтрагент;
			ГруппаТоварыУслугиОб.Наименование = ?(ЭтоУслуги, "Услуги", "Товары");
			ГруппаТоварыУслугиОб.Записать();
			ГруппаТоварыУслуги = ГруппаТоварыУслугиОб.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого ТекСтрока Из ТЗ_СинхронизацияНоменклатуры Цикл
		// Обнулим
		БазоваяЕдиницаИзмерения = Неопределено;
		ЕдИзмОстатков			= Неопределено;
		ЕдИзмМестКлассификатор	= Неопределено;
		ЕдИзмМест				= Неопределено;
		
		// Базовая ед. изм.
		Если Не ЗначениеЗаполнено(ТекСтрока.ЕдиницаИзмеренияПоКлассификатору) Тогда
			Если (ЗначениеЗаполнено(ТекСтрока.НаимЕдИзм) Или
				ЗначениеЗаполнено(ТекСтрока.ОКЕИ_Тов)) Тогда
				
				// Ищем в классификаторе
				Отбор = Новый Структура;
				
				Если ЗначениеЗаполнено(ТекСтрока.ОКЕИ_Тов) Тогда
					Отбор.Вставить("Код", ТекСтрока.ОКЕИ_Тов);
					БазоваяЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду(ТекСтрока.ОКЕИ_Тов);
				Иначе
					Отбор.Вставить("НаименованиеЕдиницыИзмерения", ТекСтрока.НаимЕдИзм);
					БазоваяЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию(ТекСтрока.НаимЕдИзм);
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(БазоваяЕдиницаИзмерения) Тогда
					
					// Не нашли,создаем новую едизм в спр-ке "Классификатор Едизм" (базовую)
					НайденныеСтроки = ТЗ_ЕдИзм.НайтиСтроки(Отбор);
					
					Если НайденныеСтроки.Количество() = 0 Тогда
						Отбор = Новый Структура;
						Отбор.Вставить("УсловноеОбозначениеНациональное", ТекСтрока.НаимЕдИзм);
						
						НайденныеСтроки = ТЗ_ЕдИзм.НайтиСтроки(Отбор);
						
						Если НайденныеСтроки.Количество() = 0 Тогда
							Сообщить("Единица измерения [" + ТекСтрока.ВидУпак + "]" + " не найдена в классификаторе. Создайте вручную.");
						КонецЕсли;
					КонецЕсли;
					
					Если НЕ НайденныеСтроки.Количество() = 0 Тогда
						ТекСтрокаТЗ 				= НайденныеСтроки[0];
						БазоваяЕдиницаИзмерения 	= СоздатьЗаписьВКлассификаторе(ТекСтрокаТЗ, "КлассификаторЕдиницИзмерения");
					Иначе
						БазоваяЕдиницаИзмерения		= Справочники.КлассификаторЕдиницИзмерения.ПустаяСсылка();
					КонецЕсли;
					
				КонецЕсли;
				ТекСтрока.ЕдиницаИзмеренияПоКлассификатору 	= БазоваяЕдиницаИзмерения.Ссылка;	
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекСтрока.Номенклатура) И ЗначениеЗаполнено(ТекСтрока.НаимТов) Тогда
			НоваяНоменклатура = Справочники.Номенклатура.СоздатьЭлемент();
			// Кастом для клиентов со сбитой нумерацией объектов
			//НоваяНоменклатура.УстановитьНовыйКод("Sd-");
			НоваяНоменклатура.Наименование = ТекСтрока.НаимТов;
			НоваяНоменклатура.Родитель = ГруппаТоварыУслуги;
			Если НЕ ЭтоБГУ Тогда 
				НоваяНоменклатура.Артикул = СокрЛП(ТекСтрока.АртикулТов);
				НоваяНоменклатура.БазоваяЕдиницаИзмерения = ТекСтрока.ЕдиницаИзмеренияПоКлассификатору;
				НоваяНоменклатура.Комментарий = "Создана автоматически при загрузке из Synerdocs пользователем <" + Пользователь + "> от " + ТекущаяДата();
				НоваяНоменклатура.Услуга = ЭтоУслуги;
			Иначе
				НоваяНоменклатура.ЕдиницаИзмерения = ТекСтрока.ЕдиницаИзмеренияПоКлассификатору;
			КонецЕсли;
			
			//дальше реквизиты для УТ и КА
			Если ЕстьРеквизитСправочника("ВидНоменклатуры", МетаданныеСправочникаНоменклатура) Тогда
				Если Не НоваяНоменклатура.Услуга Тогда
					ВидНоменклатуры = Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Товар");
					Если Не ЗначениеЗаполнено(ВидНоменклатуры) Тогда
						ВидНоменклатуры = Справочники.ВидыНоменклатуры.НайтиПоРеквизиту("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.Товар);
					КонецЕсли;
				Иначе
					ВидНоменклатуры = Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Услуга");
					Если Не ЗначениеЗаполнено(ВидНоменклатуры) Тогда
						ВидНоменклатуры = Справочники.ВидыНоменклатуры.НайтиПоРеквизиту("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.Услуга);
					КонецЕсли;
				КонецЕсли;
				
				НоваяНоменклатура.ВидНоменклатуры = ВидНоменклатуры;
			КонецЕсли;
			
			НоваяНоменклатура.Записать();
			НоваяНоменклатура.НаименованиеПолное = НоваяНоменклатура.Наименование;
			НоваяНоменклатура.Записать();
			
			ТекСтрока.Номенклатура = НоваяНоменклатура.Ссылка;
		Иначе
			НоваяНоменклатура = ТекСтрока.Номенклатура.ПолучитьОбъект();
		КонецЕсли;
		
		Если НЕ Метаданные.Имя = "БухгалтерияПредприятия" И НЕ Метаданные.Имя = "БухгалтерияПредприятияКОРП" И НЕ ЭтоБГУ Тогда
			// Единицы изм. для остатков и отчетов
			Запрос = Новый Запрос("ВЫБРАТЬ
			|	ЕдиницыИзмерения.Ссылка
			|ИЗ
			|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
			|ГДЕ
			|	(ВЫРАЗИТЬ(ЕдиницыИзмерения.Владелец КАК Справочник.Номенклатура)) = &Владелец
			|	И ЕдиницыИзмерения.Наименование = &Наименование");
			Запрос.УстановитьПараметр("Владелец", НоваяНоменклатура.Ссылка);
			Запрос.УстановитьПараметр("Наименование", ТекСтрока.ЕдиницаИзмеренияПоКлассификатору.Наименование);
			Результат = Запрос.Выполнить().Выбрать();
			
			ЕдИзмОстатков = ?(Результат.Следующий(), Результат.Ссылка, Неопределено);
			
			Если НЕ ЗначениеЗаполнено(ЕдИзмОстатков) Тогда
				ЕдИзмОстатков = СоздатьЗаписьВКлассификаторе(ТекСтрокаТЗ, "ЕдиницыИзмерения", Ложь, НоваяНоменклатура, ТекСтрока.ЕдиницаИзмеренияПоКлассификатору);
			КонецЕсли;
			
			НоваяНоменклатура.ЕдиницаХраненияОстатков 	= ЕдИзмОстатков;
			НоваяНоменклатура.ЕдиницаДляОтчетов			= ЕдИзмОстатков;
		КонецЕсли;
		
		ТекСтрока.ЕдИзмОстатков = ЕдИзмОстатков;
		// Единица измерения мест
		Если ЗначениеЗаполнено(ТекСтрока.ВидУпак) Тогда
			
			// Сначала ищем единицу в классифкаторе
			Отбор = Новый Структура;
			Отбор.Вставить("НаименованиеЕдиницыИзмерения", ТекСтрока.ВидУпак);
			
			НайденныеСтроки = ТЗ_ЕдИзм.НайтиСтроки(Отбор);
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				Отбор = Новый Структура;
				Отбор.Вставить("УсловноеОбозначениеНациональное", ТекСтрока.ВидУпак);
				НайденныеСтроки = ТЗ_ЕдИзм.НайтиСтроки(Отбор);
			КонецЕсли;
			
			Если НЕ НайденныеСтроки.Количество() = 0 Тогда
				ТекСтрокаТЗ 			= НайденныеСтроки[0];
				ЕдИзмМестКлассификатор 	= Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду(ТекСтрокаТЗ.Код);
				
				Если НЕ ЗначениеЗаполнено(ЕдИзмМестКлассификатор) Тогда
					ЕдИзмМестКлассификатор = СоздатьЗаписьВКлассификаторе(ТекСтрокаТЗ, "КлассификаторЕдиницИзмерения");
				КонецЕсли;
			Иначе
				Сообщить("Единица измерения [" + ТекСтрока.ВидУпак + "]" + " не найдена в классификаторе. Создайте вручную."); 
			КонецЕсли;
			
			Если НЕ Метаданные.Имя = "БухгалтерияПредприятия" И НЕ Метаданные.Имя = "БухгалтерияПредприятияКОРП" И НЕ ЭтоБГУ Тогда
				// Ищем в справочнике "единицы измерения"
				Если НЕ ЕдИзмМестКлассификатор = Неопределено Тогда
					Запрос = Новый Запрос("ВЫБРАТЬ
					|	ЕдиницыИзмерения.Ссылка
					|ИЗ
					|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
					|ГДЕ
					|	ЕдиницыИзмерения.ПометкаУдаления = ЛОЖЬ
					|	И (ВЫРАЗИТЬ(ЕдиницыИзмерения.Владелец КАК Справочник.Номенклатура)) = &НоменклатураСсылка
					|	И ЕдиницыИзмерения.ЕдиницаПоКлассификатору.Ссылка = &ЕдИзмПоКлассификатору");
					Запрос.УстановитьПараметр("НоменклатураСсылка", НоваяНоменклатура.Ссылка);	
					Запрос.УстановитьПараметр("ЕдИзмПоКлассификатору", ЕдИзмМестКлассификатор);	
					Результат = Запрос.Выполнить().Выбрать();
					
					ЕдИзмМест = ?(Результат.Следующий(), Результат.Ссылка, Неопределено);
					
					// Теперь запишем в справочник "Единицы измерения"
					Если НЕ ЗначениеЗаполнено(ЕдИзмМест) Тогда
						ЕдИзмМест = СоздатьЗаписьВКлассификаторе(ТекСтрокаТЗ, "ЕдиницыИзмерения", Ложь, НоваяНоменклатура, ЕдИзмМестКлассификатор, ТекСтрока);
					КонецЕсли;
				КонецЕсли;
				НоваяНоменклатура.ЕдиницаИзмеренияМест = ЕдИзмМест;
			Иначе
				ЕдИзмМест = ЕдИзмМестКлассификатор;	
			КонецЕсли;
			
			ТекСтрока.ЕдиницаИзмеренияУпакПоКлассификатору 	= ?(НЕ ЕдИзмМест = Неопределено, ЕдИзмМест.Ссылка, Неопределено);			
			ТекСтрока.ЕдиницаИзмеренияУпак					= ?(НЕ ЕдИзмМест = Неопределено, ЕдИзмМест.Ссылка, Неопределено);			
		КонецЕсли;
		
		НоваяНоменклатура.Записать();
		
		// Создаем новый
		Если ЗначениеЗаполнено(ТекСтрока.НомерГТДПредставление) И НЕ ЗначениеЗаполнено(ТекСтрока.НомерГТД) Тогда
			Запрос = Новый Запрос("ВЫБРАТЬ
			|	НомераГТД.Ссылка
			|ИЗ
			|	Справочник.НомераГТД КАК НомераГТД
			|ГДЕ
			|	(ВЫРАЗИТЬ(НомераГТД.Код КАК СТРОКА(29))) = (ВЫРАЗИТЬ(&Код КАК СТРОКА(29)))");
			Запрос.УстановитьПараметр("Код", ТекСтрока.НомерГТДПредставление);
			Результат = Запрос.Выполнить().Выбрать();
			
			ЕстьГТД = ?(Результат.Следующий(), Результат.Ссылка, Неопределено);
			
			Если ЕстьГТД = Неопределено Тогда
				НовыйГТД 		= Справочники.НомераГТД.СоздатьЭлемент();
				НовыйГТД.Код 	= ТекСтрока.НомерГТДПредставление;
				
				Попытка
					НовыйГТД.Записать();
					ТекСтрока.НомерГТД = НовыйГТД.Ссылка;
				Исключение
					Сообщить(ОписаниеОшибки());
				КонецПопытки;
			Иначе
				ТекСтрока.НомерГТД = ЕстьГТД;
			КонецЕсли;
		КонецЕсли;
		
		//Страна
		Если НЕ ЗначениеЗаполнено(ТекСтрока.КодСтраныПредставление) Тогда
			Продолжить;
			// Такой страны нет в классификаторе 1С, попытаемся создать
		ИначеЕсли ЗначениеЗаполнено(ТекСтрока.КодСтраныПредставление) И НЕ ЗначениеЗаполнено(ТекСтрока.КодСтраны) Тогда
			// Смотрим код в классификаторе
			ЕстьСтрана = Справочники.КлассификаторСтранМира.НайтиПоКоду(ТекСтрока.КодСтраныПредставление);
			
			// Создаем новую
			Если НЕ ЗначениеЗаполнено(ЕстьСтрана) Тогда
				Отбор = Новый Структура;
				Отбор.Вставить("Код", ТекСтрока.КодСтраныПредставление);
				
				НайденныеСтроки = ТЗ_Страны.НайтиСтроки(Отбор);
				
				Если НЕ НайденныеСтроки.Количество() = 0 Тогда
					НоваяСтрана = СоздатьЗаписьВКлассификаторе(НайденныеСтроки[0], "КлассификаторСтранМира");
				КонецЕсли;
			Иначе
				НоваяСтрана = ЕстьСтрана;
			КонецЕсли;
			
			Если НЕ НоваяСтрана = Неопределено Тогда
				ТекСтрока.КодСтраны = НоваяСтрана.Ссылка;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ СинхронизироватьАвтоматически Тогда
		ПроверитьЗаполнение();
	КонецЕсли;
		
КонецПроцедуры

Процедура ОсновныеДействияФормыСинхронизировать(Кнопка)

	Если ТЗ_СинхронизацияНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура", Справочники.Номенклатура.ПустаяСсылка())).Количество() = 0 Тогда
	//Если ?(СинхронизироватьАвтоматически, ПроверитьЗаполнение(), Истина) Тогда
		
		Для Каждого ТекСтрока Из ТЗ_СинхронизацияНоменклатуры Цикл
			Если ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
				//синхронизируем
				Если Не ТекСтрока.Синхронизировано Тогда
					//проверяем, что еще не синхронизировано
					Если Метаданные.Справочники.Найти("НоменклатураПоставщиков") <> НЕОПРЕДЕЛЕНО Тогда
						//Буха - записываем соответствие в справочнике "НоменклатураПоставщиков"
						
						НоменклатураПоставщиков = Справочники.НоменклатураПоставщиков.СоздатьЭлемент();
						НоменклатураПоставщиков.Владелец = Контрагент;
						НоменклатураПоставщиков.Идентификатор = ТекСтрока.КодТов;
						НоменклатураПоставщиков.Наименование = ТекСтрока.НаимТов;
						НоменклатураПоставщиков.Артикул = СокрЛП(ТекСтрока.АртикулТов);
						НоменклатураПоставщиков.Номенклатура = ТекСтрока.Номенклатура;
						НоменклатураПоставщиков.Записать();
						
					ИначеЕсли Метаданные.РегистрыСведений.Найти("НоменклатураКонтрагентов") <> НЕОПРЕДЕЛЕНО Тогда
						//УТ и КА - записываем соответствие в РСВ "НоменклатураКонтрагентов"
						
						НоваяЗапись = РегистрыСведений.НоменклатураКонтрагентов.СоздатьМенеджерЗаписи();
						НоваяЗапись.Контрагент = Контрагент;
						НоваяЗапись.Номенклатура = ТекСтрока.Номенклатура;
						НоваяЗапись.КодНоменклатурыКонтрагента = ТекСтрока.КодТов;
						НоваяЗапись.АртикулНоменклатурыКонтрагента = СокрЛП(ТекСтрока.АртикулТов);
						НоваяЗапись.НаименованиеНоменклатурыКонтрагента = ТекСтрока.НаимТов;
						
						НоваяЗапись.Записать();
						
					КонецЕсли;
					ТекСтрока.Синхронизировано = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если ЭтаФорма.Открыта() Тогда
			ЭтаФорма.Закрыть(ТЗ_СинхронизацияНоменклатуры);
		КонецЕсли;
		
	Иначе
		
		Сообщить("Не для всей номенклатуры установлены соответствия!");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ТЗ_СинхронизацияНоменклатурыПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого СтрокаТабличногоПоля Из ОформленияСтрок Цикл
		ДанныеСтроки = СтрокаТабличногоПоля.ДанныеСтроки;
		
		//Если нет характеристик в ЭД или это конф бух
		Если НЕ ПолеХарактеристикиДоступно Тогда
			СтрокаТабличногоПоля.Ячейки.ХарактеристикаНоменклатуры.ТолькоПросмотр = Истина;
		Иначе
			СтрокаТабличногоПоля.Ячейки.ХарактеристикаНоменклатуры.ТолькоПросмотр = (ДанныеСтроки.ХарактерТов = Неопределено);
		КонецЕсли;		
		
		// Если нет упаковки, то поле не доступно
		СтрокаТабличногоПоля.Ячейки.ЕдиницаИзмеренияУпакПоКлассификатору.ТолькоПросмотр = (ДанныеСтроки.ВидУпак = Неопределено);
		
		//Если нет ГТД, то поле не доступно
		СтрокаТабличногоПоля.Ячейки.НомерГТД.ТолькоПросмотр = НЕ ЗначениеЗаполнено(ДанныеСтроки.НомерГТДПредставление);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ СинхронизироватьАвтоматически Тогда
		ВсеГотово = Истина;
		Для Каждого СтрокаТЧ Из ТЗ_СинхронизацияНоменклатуры Цикл
			Если ПолеХарактеристикиДоступно И ЗначениеЗаполнено(СтрокаТЧ.ХарактерТов) И НЕ ЗначениеЗаполнено(СтрокаТЧ.ХарактеристикаНоменклатуры) Тогда
				ВсеГотово = Ложь;
				Прервать;
			ИначеЕсли ЗначениеЗаполнено(СтрокаТЧ.ВидУпак) И НЕ ЗначениеЗаполнено(СтрокаТЧ.ЕдиницаИзмеренияУпакПоКлассификатору) Тогда
				ВсеГотово = Ложь;
				Прервать;			
			КонецЕсли;
		КонецЦикла;
		
		Если Не ВсеГотово Тогда
			Ответ = Вопрос("Не для всех позиций номенклатуры установлены соответствия. Продолжить?", РежимДиалогаВопрос.ДаНет, , , "Внимание!");
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

Процедура АвтоматическаяСинхронизация()
	
	СоздатьНенайденное(Неопределено);
	ОсновныеДействияФормыСинхронизировать(Неопределено);
	
КонецПроцедуры

