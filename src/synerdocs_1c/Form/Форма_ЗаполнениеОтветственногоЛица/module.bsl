
//========================================================================
// Форма заполнения реквизитов ответственного лица.
// Используется для заполнения объекта Модуль_ОбъектнаяМодель.Новый_ОтветственноеЛицо().
//========================================================================

Перем _Параметры;

// Модули
Перем ОбъектнаяМодель;

//========================================================================
// ИНИЦИАЛИЗАЦИЯ
//========================================================================

Процедура ПодключитьМодули()
	
	ОбъектнаяМодель = Модуль("Модуль_ОбъектнаяМодель");
	
КонецПроцедуры

Процедура Инициализировать()
	
	ПодключитьМодули();
	
КонецПроцедуры

Процедура ИнициализироватьФорму()
	
	Параметры = ПараметрыФормы();
	
	// Значения переключателей
	ВидыОЛ = ОбъектнаяМодель.ВидыОтветственногоЛица();
	ЭлементыФормы.СтатусСотрудникОрганизации.ВыбираемоеЗначение					= ВидыОЛ.СотрудникОрганизации;
	ЭлементыФормы.СтатусПредставительДовереннойОрганизации.ВыбираемоеЗначение	= ВидыОЛ.ПредставительДовереннойОрганизации;
	ЭлементыФормы.СтатусФизЛицо.ВыбираемоеЗначение								= ВидыОЛ.ФизЛицо;
	
	УстановитьСтатус(ВидыОЛ.СотрудникОрганизации);
	
	УстановитьОтветственноеЛицо(Параметры.Модель);
	
КонецПроцедуры

Функция ПараметрыФормы()
	
	Если _Параметры = Неопределено Тогда
		ВызватьИсключение "Параметры формы не установлены";
	КонецЕсли;
	
	Возврат _Параметры;
	
КонецФункции

//========================================================================
// ЭКСПОРТНЫЙ ИНТЕРФЕЙС
//========================================================================

Функция Параметры() Экспорт
	
	Параметры = Новый Структура(
		"Модель"
	);
	
	Параметры.Модель = Неопределено; //: Модуль_ОбъектнаяМодель.Новый_ОтветственноеЛицо();
	
	Возврат Параметры;
	
КонецФункции

Функция УстановитьПараметры(Параметры) Экспорт
	
	_Параметры = ФиксированныеДанные(Параметры);
	
КонецФункции

Функция ПроверяемыеРеквизиты() Экспорт
	
	Поля = Новый СписокЗначений;
	
	Поля.Добавить("Должность",                НСтр("ru = 'Должность'"));
	Поля.Добавить("Фамилия",                  НСтр("ru = 'Фамилия'"));
	Поля.Добавить("Имя",                      НСтр("ru = 'Имя'"));
	Поля.Добавить("НаименованиеОрганизации",  НСтр("ru = 'Наименование'"));
	
	Возврат Поля;
	
КонецФункции

//========================================================================
// СОБЫТИЯ
//========================================================================

//===================================
//{ События формы

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьФорму();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	УстановитьОтображение();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты) Экспорт
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	ВидыОЛ = ОбъектнаяМодель.ВидыОтветственногоЛица();
	
	ПроверятьДолжность = (Статус <> ВидыОЛ.ФизЛицо);
	ПроверятьНаименование = (Статус = ВидыОЛ.ПредставительДовереннойОрганизации);
	
	Если НЕ ПроверятьДолжность Тогда
		НепроверяемыеРеквизиты.Добавить("Должность");
	КонецЕсли;
	
	Если НЕ ПроверятьНаименование Тогда
		НепроверяемыеРеквизиты.Добавить("НаименованиеОрганизации");
	КонецЕсли;
	
	УдалитьНепроверяемыеРеквизиты(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

//}

//===================================
//{ Кнопки формы

Процедура ОсновныеДействияФормыСохранить(Кнопка)
	
	Если НЕ ПроверитьЗаполнениеФормы(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;
	
	Сохранить();
	
КонецПроцедуры

//}

//===================================
//{ События элементов формы

Процедура СтатусПриИзменении(Элемент)
	
	УстановитьСтатус(Статус);
	
КонецПроцедуры

//}

//===================================
//{ Команды

Процедура Сохранить()
	
	Результат = ОтветственноеЛицо();
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

//}

//========================================================================
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//========================================================================

Процедура УстановитьОтображение()
	
	СтраницыОЛ = Новый Соответствие;
	СтраницыОЛ[ЭлементыФормы.СтатусСотрудникОрганизации.ВыбираемоеЗначение]					= ЭлементыФормы.СтатусыОтветственногоЛица.Страницы.СотрудникОрганизации;
	СтраницыОЛ[ЭлементыФормы.СтатусПредставительДовереннойОрганизации.ВыбираемоеЗначение]	= ЭлементыФормы.СтатусыОтветственногоЛица.Страницы.ПредставительДовереннойОрганизации;
	СтраницыОЛ[ЭлементыФормы.СтатусФизЛицо.ВыбираемоеЗначение]								= ЭлементыФормы.СтатусыОтветственногоЛица.Страницы.ФизЛицо;
	
	ЭлементыФормы.СтатусыОтветственногоЛица.ТекущаяСтраница = СтраницыОЛ[Статус];
	
КонецПроцедуры

//===================================
//{ Геттеры и сеттеры

// Модель формы

Процедура УстановитьОтветственноеЛицо(НовоеЗначение)
	
	Если НовоеЗначение = Неопределено Тогда
		ОтветственноеЛицо = ОбъектнаяМодель.Новый_ОтветственноеЛицо();
	Иначе
		ОтветственноеЛицо = НовоеЗначение;
	КонецЕсли;
	
	УстановитьСтатус(ОтветственноеЛицо.Вид);
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ОтветственноеЛицо.ФИО, "Фамилия, Имя, Отчество");
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ОтветственноеЛицо, "ОснованиеПолномочий, ОснованиеДоверия, Должность");
	
	НаименованиеОрганизации = ОтветственноеЛицо.НаименованиеОрганизации;
	
	ИныеСведения = ОтветственноеЛицо.ДопИнфо;
	
КонецПроцедуры

Функция ОтветственноеЛицо()
	
	ОтветственноеЛицо = ОбъектнаяМодель.Новый_ОтветственноеЛицо();
	
	ОтветственноеЛицо.Вид = Статус;
	
	ВидыОЛ = ОбъектнаяМодель.ВидыОтветственногоЛица();
	
	ЗаполнитьЗначенияСвойств(ОтветственноеЛицо.ФИО, ЭтаФорма, "Фамилия, Имя, Отчество");
	ОтветственноеЛицо.ДопИнфо = ИныеСведения;
	
	Если Статус = ВидыОЛ.СотрудникОрганизации
			ИЛИ Статус = ВидыОЛ.ПредставительДовереннойОрганизации Тогда
		ЗаполнитьЗначенияСвойств(ОтветственноеЛицо, ЭтаФорма, "ОснованиеПолномочий, Должность");
	КонецЕсли;
	
	Если Статус = ВидыОЛ.ПредставительДовереннойОрганизации Тогда
		ОтветственноеЛицо.НаименованиеОрганизации = НаименованиеОрганизации;
	КонецЕсли;
	
	Если Статус = ВидыОЛ.ПредставительДовереннойОрганизации
			ИЛИ Статус = ВидыОЛ.ФизЛицо Тогда
		ЗаполнитьЗначенияСвойств(ОтветственноеЛицо, ЭтаФорма, "ОснованиеДоверия");
	КонецЕсли;
	
	Возврат ОтветственноеЛицо;
	
КонецФункции

// Прочее

Процедура УстановитьСтатус(НовоеЗначение)
	
	Статус = НовоеЗначение;
	
	УстановитьОтображение();
	
КонецПроцедуры

//}


Инициализировать();

