
Процедура ПриОткрытии()
	
	СвязанныеДокументы.Очистить();
	
	//заполняем поля в зависимости от типа ЭД
	Если ЭД_Структура <> Неопределено Тогда
		//ЭлектронныйДокумент - структура:
		//Syn_Документ - документ Synerdocs
		//ТипЭД - (СФ, КСФ, Торг12, Акт)
		//ПредставлениеЭД - наименование документа
		//Комментарий
		//Статус
		//Документ1С - ссылка на документ 1С
		
		ПредставлениеЭД = ЭД_Структура.ПредставлениеЭД;
		
		//Связанные документы
		Попытка
			FullDocumentInfo = ExchangeService.GetFullDocumentInfo(Токен, Syn_ЯщикОрганизации, ЭД_Структура.Syn_IDДокумента,);
			Syn_Документ = FullDocumentInfo.Document;
			ТЗ_СвязанныеДокументы = ПолучитьСвязанныеДокументыSynerdocs(Syn_Документ);
			
			//достаем документы
			Для Каждого ТекСтрока Из ТЗ_СвязанныеДокументы Цикл
				//Если режим создания документов 1С, тогда выводим только отсутствующие, иначе все
				Если Не ЗначениеЗаполнено(ТекСтрока.Документ1С) Или
					 Не РежимСозданияДокументов1С Тогда
					НоваяСтрока = СвязанныеДокументы.Добавить();
					НоваяСтрока.ДокументПредставление = ТекСтрока.ДокументПредставление;
					НоваяСтрока.Тип = ТекСтрока.Тип;
					НоваяСтрока.IDДокумента = ТекСтрока.IDДокумента;
					НоваяСтрока.Документ = ТекСтрока.Документ1С;
					НоваяСтрока.Статус = ТекСтрока.Статус;
				КонецЕсли;
			КонецЦикла;
		Исключение
			ОписаниеОшибкиСтрокой = ОписаниеОшибки();
			ТекстОшибкиSynerdocs = РазобратьИсключениеSynerdocs(ОписаниеОшибкиСтрокой);
			
			ОтправитьУведомлениеПользователю("Ошибка получения информации об ЭД: " + ТекстОшибкиSynerdocs);
						
		КонецПопытки;					
	КонецЕсли;
	
	Если РежимСозданияДокументов1С Тогда
		УстановитьЗаголовокОкна(ЭтаФорма, "Связанные документы: создание документов 1С");
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Добавить("кнСоздатьДокументы", ТипКнопкиКоманднойПанели.Действие, "Создать документы", Новый Действие("ОсновныеДействияФормыСоздатьДокументы"));
		ЭлементыФормы.СвязанныеДокументы.Колонки.Выбран.Видимость = Истина;
		ЭлементыФормы.СвязанныеДокументы.Колонки.Выбран.Ширина = 1;
		ЭлементыФормы.СвязанныеДокументы.Колонки.Документ.Видимость = Истина;
	Иначе
		УстановитьЗаголовокОкна(ЭтаФорма, "Связанные документы: просмотр");
		ЭлементыФормы.СвязанныеДокументы.Колонки.Выбран.Видимость = Ложь;
		ЭлементыФормы.СвязанныеДокументы.Колонки.Документ.Видимость = Ложь;
	КонецЕсли;
	
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Добавить("кнЗакрыть", ТипКнопкиКоманднойПанели.Действие, "Отмена", Новый Действие("ОсновныеДействияФормыЗакрыть"));
	
	ЭлементыФормы.СвязанныеДокументы.Колонки.ДокументПредставление.Ширина = 300;
КонецПроцедуры

Процедура СвязанныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	Если ВыбраннаяСтрока <> НЕОПРЕДЕЛЕНО И
		 ЗначениеЗаполнено(ВыбраннаяСтрока.IDДокумента) Тогда
		//открываем карточку документа
		Форма_КарточкаЭД = ПолучитьФорму("Форма_КарточкаЭД");
	
		ПараметрыФормы = Форма_КарточкаЭД.Новый_ПараметрыФормы(ВыбраннаяСтрока.IDДокумента, Истина);
		Форма_КарточкаЭД.УстановитьПараметрыФормы(ПараметрыФормы);
		
		Форма_КарточкаЭД.ОткрытьМодально();
				
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыСоздатьДокументы(Кнопка)
	//сначала определим последовательность создания доков (для СФ лучше первым создавать Торг12, для КСФ-СФ)
	сз_СоздаваемыеДокументы = Новый СписокЗначений;
	
	//сначала добавляем в список создаваемых торг12 и акты, счет на оплату
	Если ЭД_Структура.ТипЭД = "Товарная накладная" Или
		 ЭД_Структура.ТипЭД = "Акт выполненных работ"  Или 
		 ЭД_Структура.ТипЭд = "Счет на оплату" Тогда 
		сз_СоздаваемыеДокументы.Добавить(ЭД_Структура.Syn_IDДокумента);
	КонецЕсли;
	
	Для Каждого ТекСтрока Из СвязанныеДокументы Цикл
		Если ТекСтрока.Выбран И 
			 Не ЗначениеЗаполнено(ТекСтрока.Документ) И
			 (ТекСтрока.Тип = "Товарная накладная" Или
		 	 ТекСтрока.Тип = "Акт выполненных работ") Тогда
			сз_СоздаваемыеДокументы.Добавить(ТекСтрока.IDДокумента);
		КонецЕсли;
	КонецЦикла;
		
	//затем добавляем в список создаваемых СФ
	Если ЭД_Структура.ТипЭД = "Счет-фактура" Тогда 
		сз_СоздаваемыеДокументы.Добавить(ЭД_Структура.Syn_IDДокумента);
	КонецЕсли;
	
	Для Каждого ТекСтрока Из СвязанныеДокументы Цикл
		Если ТекСтрока.Выбран И 
			 Не ЗначениеЗаполнено(ТекСтрока.Документ) И 
			 ТекСтрока.Тип = "Счет-фактура" Тогда
			сз_СоздаваемыеДокументы.Добавить(ТекСтрока.IDДокумента);
		КонецЕсли;
	КонецЦикла;
	
	//затем добавляем в список создаваемых исправленный СФ
	Если ЭД_Структура.ТипЭД = "Исправленный счет-фактура" Тогда 
		сз_СоздаваемыеДокументы.Добавить(ЭД_Структура.Syn_IDДокумента);
	КонецЕсли;
	
	Для Каждого ТекСтрока Из СвязанныеДокументы Цикл
		Если ТекСтрока.Выбран И 
			 Не ЗначениеЗаполнено(ТекСтрока.Документ) И 
			 ТекСтрока.Тип = "Исправленный счет-фактура" Тогда
			сз_СоздаваемыеДокументы.Добавить(ТекСтрока.IDДокумента);
		КонецЕсли;
	КонецЦикла;
		
	//в самом конце добавляем корректировочный СФ
	Если ЭД_Структура.ТипЭД = "Корректировочный счет-фактура" Тогда 
		сз_СоздаваемыеДокументы.Добавить(ЭД_Структура.Syn_IDДокумента);
	КонецЕсли;
	
	Для Каждого ТекСтрока Из СвязанныеДокументы Цикл
		Если ТекСтрока.Выбран И 
			 Не ЗначениеЗаполнено(ТекСтрока.Документ) И 
			 ТекСтрока.Тип = "Корректировочный счет-фактура" Тогда
			сз_СоздаваемыеДокументы.Добавить(ТекСтрока.IDДокумента);
		КонецЕсли;
	КонецЦикла;
	
	ОсновнойДокумент1С = НЕОПРЕДЕЛЕНО;
	//теперь бежим по списку создаваемых документов и последовательно их создаем
	Для Каждого СоздаваемыйДокумент Из сз_СоздаваемыеДокументы Цикл
		IDДокумента = СоздаваемыйДокумент.Значение;
		Попытка
			FullDocumentInfo = ExchangeService.GetFullDocumentInfo(Токен, Syn_ЯщикОрганизации, IDДокумента,);
			
			Отбор = Новый Структура;
			Отбор.Вставить("Ящик", FullDocumentInfo.From);
			Контрагенты =  Контрагенты_Авторизованные.НайтиСтроки(Отбор);
			ПредставлениеКонтрагента = ?(Контрагенты.Количество() > 0, Контрагенты.Получить(0).КонтрагентПредставление, Неопределено);
			
			//Данные для формы синхронизации
			СтруктураИнформации = Новый Структура;
			СтруктураИнформации.Вставить("Контрагент", ПредставлениеКонтрагента);
			СтруктураИнформации.Вставить("Документ", FullDocumentInfo.Document.Name);

		Исключение
			ОписаниеОшибкиСтрокой = ОписаниеОшибки();
			ТекстОшибкиSynerdocs = РазобратьИсключениеSynerdocs(ОписаниеОшибкиСтрокой);
			
			ОтправитьУведомлениеПользователю("Ошибка получения информации об ЭД: " + ТекстОшибкиSynerdocs);
						
			Возврат;
			
		КонецПопытки;
		
		СозданныйДокумент1С = СоздатьДокумент1С(FullDocumentInfo.Document, СтруктураИнформации);
		
		Если ЗначениеЗаполнено(СозданныйДокумент1С) Тогда
			//проверяем по ID, что за документ - основной или связанный
			Если ЭД_Структура.Syn_IDДокумента = IDДокумента Тогда
				ОсновнойДокумент1С = СозданныйДокумент1С;
			Иначе
				//ищем в ТЧ нужную строку по ИД
				НайденнаяСтрока = СвязанныеДокументы.Найти(IDДокумента, "IDДокумента");
				Если НайденнаяСтрока <> НЕОПРЕДЕЛЕНО Тогда
					НайденнаяСтрока.Документ = СозданныйДокумент1С;
				КонецЕсли;
			КонецЕсли;
		Иначе
			Сообщить("Выполнение операции прервано...");
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ОсновнойДокумент1С) Тогда
		Закрыть(ОсновнойДокумент1С);
	КонецЕсли;
		
КонецПроцедуры

Процедура ОсновныеДействияФормыЗакрыть(Кнопка)
	ЭтаФорма.Закрыть();
КонецПроцедуры
