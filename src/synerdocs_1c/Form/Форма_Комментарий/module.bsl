
Перем _ИмяФормы;

Перем СообщениеОтправлено, ЭтоСогласование;

// Модули
Перем Телеметрия;
Перем СобытияТелеметрии;

Процедура ПодключитьМодули()
	
	Модули = ТребуютсяМодули("Модуль_Телеметрия");
	Телеметрия = Модули.Модуль_Телеметрия;
	
	СобытияТелеметрии = Телеметрия.ОписаниеСобытий();
	
КонецПроцедуры

Процедура ИнициализироватьФорму()
	
	ПодключитьМодули();
	
	СообщениеОтправлено = Ложь;
	
КонецПроцедуры

//========================================================================
// ЭКСПОРТНЫЙ ИНТЕРФЕЙС
//========================================================================

Функция ИмяФормы() Экспорт
	
	Если _ИмяФормы = Неопределено Тогда
		_ИмяФормы = ПолучитьИмяФормы(ЭтаФорма);
	КонецЕсли;
	
	Возврат _ИмяФормы;
	
КонецФункции


Процедура КнопкаВыполнитьНажатие(Кнопка)

	// Согласование
	Если ЭтоСогласование Тогда
		
		Попытка
			ТекПользовательСервиса = ExchangeService.GetUserInfo(Токен, Syn_ЯщикОрганизации);
			
			ФабрикаСервиса			= ExchangeService.ФабрикаXDTO;
			Тип_DocumentTag 		= ФабрикаСервиса.Тип("http://schemas.datacontract.org/2004/07/Midway.ObjectModel", "DocumentTag");
			Тип_DocumentTagType		= ФабрикаСервиса.Тип("http://schemas.datacontract.org/2004/07/Midway.ObjectModel", "DocumentTagType");
			
			Объект_DocumentTag 		= ФабрикаСервиса.Создать(Тип_DocumentTag);
			Объект_DocumentTagType  = ФабрикаСервиса.Создать(Тип_DocumentTagType);
			
			
			Объект_DocumentTag.Comment				= Комментарий;
		    Объект_DocumentTag.DocumentId			= СтруктураСогласования.ИД;
			Объект_DocumentTag.Login				= ТекПользовательСервиса.Login;
			Объект_DocumentTag.OrganizationBoxId 	= Syn_ЯщикОрганизации;
			Объект_DocumentTag.TagType				= ?(СтруктураСогласования.ЭтоСогласование, "Approved", "Disapproved");
			
			ExchangeService.CreateDocumentTag(Токен, Объект_DocumentTag);
			
			СообщениеОтправлено = Истина;
			ЭтаФорма.Закрыть(Истина);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	
	// Подписание/отказ	
	Иначе
		
		ТипЭД_УОУ = ?(ЭтоРегламентЭСФ(ЭД_Структура.Syn_Документ), "УточнениеСФ", "УточнениеОбщ");
		//Генерируем уведомление об уточнении, подписываем его и отправляем оператору
		
		//Получаем отправителя сообщения
		Попытка
			FullDocumentInfo = ExchangeService.GetFlowDocumentInfo(Токен, Syn_ЯщикОрганизации, ЭД_Структура.Syn_Документ.Id,);
			ЯщикОтправителя = FullDocumentInfo.From;
		Исключение
			ОписаниеОшибкиСтрокой = ОписаниеОшибки();
			ТекстОшибкиSynerdocs = РазобратьИсключениеSynerdocs(ОписаниеОшибкиСтрокой);
			
			ОтправитьУведомлениеПользователю("Ошибка получения информации об ЭД: " + ТекстОшибкиSynerdocs);
			
			Возврат;
		КонецПопытки;
		
		Если НЕ ЭД_Структура.Пересланный Тогда
			
			Попытка
				//Двоичные данные извещения
				УОУ_Стуктура = СформироватьЭД(ЭД_Структура.Syn_Документ, ТипЭД_УОУ, Комментарий, , ,);
				
				Если УОУ_Стуктура <> НЕОПРЕДЕЛЕНО И
					УОУ_Стуктура.Документ_ДвоичныеДанные <> НЕОПРЕДЕЛЕНО Тогда
					//Создаем Document в СО
					Syn_УОУ = СоздатьОбъект_Document(, УОУ_Стуктура.Документ_ДвоичныеДанные, ТипЭД_УОУ, УОУ_Стуктура.Документ_ИмяФайла, ЭД_Структура.Syn_Документ, Комментарий);
					
					//Формируем ЭЦП к документу
					ЭЦП_ДвоичныеДанные = СформироватьЭЦПДокумента(, УОУ_Стуктура.Документ_ДвоичныеДанные, УОУ_Стуктура.Документ_ИмяФайла);
					
					Если ЭЦП_ДвоичныеДанные = Неопределено Тогда
						Возврат;
					КонецЕсли;
					
					//создаем Подпись в СО
					Syn_ЭЦП = СоздатьОбъект_Sign(Syn_УОУ.Id, ЭЦП_ДвоичныеДанные);
					
					м_Documents = Новый Массив;
					м_Signs = Новый Массив;
					
					м_Documents.Добавить(Syn_УОУ); 
					м_Signs.Добавить(Syn_ЭЦП);
					
					//Создаем массив документов
					Тип_ArrayOfDocument = ExchangeService.ФабрикаXDTO.Тип("http://schemas.datacontract.org/2004/07/Midway.ObjectModel", "ArrayOfDocument");
					ArrayOfDocument = ExchangeService.ФабрикаXDTO.Создать(Тип_ArrayOfDocument);
					ArrayOfDocument.Document.Добавить(Syn_УОУ);
					
					//Создаем массив ЭЦП
					Тип_ArrayOfSign = ExchangeService.ФабрикаXDTO.Тип("http://schemas.datacontract.org/2004/07/Midway.ObjectModel", "ArrayOfSign");
					ArrayOfSign = ExchangeService.ФабрикаXDTO.Создать(Тип_ArrayOfSign);
					ArrayOfSign.Sign.Добавить(Syn_ЭЦП);
					
					//Создаем сообщение в СО и отправляем его
					Тип_Message = ExchangeService.ФабрикаXDTO.Тип("http://schemas.datacontract.org/2004/07/Midway.ObjectModel", "Message");
					Message = ExchangeService.ФабрикаXDTO.Создать(Тип_Message);
					Message.Documents = ArrayOfDocument;
					Message.From = Syn_ЯщикОрганизации;
					Message.Signs = ArrayOfSign;
					Message.To = ЯщикОтправителя;
					Message.Id = Строка(Новый УникальныйИдентификатор());
				КонецЕсли;
			Исключение
				ОписаниеОшибкиСтрокой = ОписаниеОшибки();
				ТекстОшибкиSynerdocs = РазобратьИсключениеSynerdocs(ОписаниеОшибкиСтрокой);
				
				ОтправитьУведомлениеПользователю("Ошибка в отказе от подписи (формировании уведомления об уточнении): " + ТекстОшибкиSynerdocs);
				
				Возврат;
			КонецПопытки;
			
			Если ОтправитьСообщениеВСервисОбмена(Message) <> НЕОПРЕДЕЛЕНО Тогда
				СообщениеОтправлено = Истина;
				ЭтаФорма.Закрыть(Истина);
			КонецЕсли;
			
		Иначе
			
			Попытка
				Тип_RejectSign 			= ExchangeService.ФабрикаXDTO.Тип("http://schemas.datacontract.org/2004/07/Midway.ObjectModel", "RejectSign");
				RejectSign 				= ExchangeService.ФабрикаXDTO.Создать(Тип_RejectSign);
				RejectSign.From 		= Syn_ЯщикОрганизации; 
				RejectSign.DocumentId   = ЭД_Структура.Syn_Документ.Id;
				RejectSign.Comment		= Комментарий; 
				ExchangeService.RejectSign(Токен, "SentForward", RejectSign);
				
				ЭтаФорма.Закрыть(Истина);
				
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЭтоСогласование = (СтруктураСогласования <> Неопределено);
	
	//Устанавливаем заголовок в зависимости от того, откуда вызвана форма и какой тип ЭД
	
	//заполняем поля в зависимости от типа ЭД
	Если ЭтоСогласование Тогда 
		
		ПредставлениеЭД = СтруктураСогласования.ПредставлениеЭД;
		
		УстановитьЗаголовокОкна(ЭтаФорма, "Согласование документа");
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыВыполнить.Текст = ?(СтруктураСогласования.ЭтоСогласование, "Согласовать", "Отказать в согласовании");
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыЗакрыть.Текст = "Отменить";

	Иначе
		
		ПредставлениеЭД = ЭД_Структура.ПредставлениеЭД;
		
		Если ПредставлениеЭД = "" Тогда
			СтруктураРеквизитов = ПолучитьОсновныеРеквизитыЭД(ЭД_Структура.Syn_Документ);
		
			Если СтруктураРеквизитов <> НЕОПРЕДЕЛЕНО Тогда
				ПредставлениеЭД = СтруктураРеквизитов.Представление;
			КонецЕсли;
		КонецЕсли;
	
		Комментарий = ЭД_Структура.Комментарий;
		Если ЭД_Структура.ТипЭД = "Счет-фактура" Или (ЭД_Структура.ТипЭД = "Нетипизированный документ" И Не ЭД_Структура.Syn_Документ.NeedSign) Тогда
			УстановитьЗаголовокОкна(ЭтаФорма, "Уведомление об уточнении");
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыВыполнить.Текст = "Отправить";
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыЗакрыть.Текст = "Отменить";
		Иначе                                                                                            
			УстановитьЗаголовокОкна(ЭтаФорма, "Отказ в подписи");
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыВыполнить.Текст = "Отправить";
			ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыЗакрыть.Текст = "Отменить";
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	Если НЕ СообщениеОтправлено Тогда
		Телеметрия.ОтправитьАналитику(
			?(ЭтоСогласование,
				СобытияТелеметрии.Согласование.Отмена,
				СобытияТелеметрии.Подписание.Отмена
			),
			ЭтаФорма
		);
	КонецЕсли;
	
КонецПроцедуры


ИнициализироватьФорму();
