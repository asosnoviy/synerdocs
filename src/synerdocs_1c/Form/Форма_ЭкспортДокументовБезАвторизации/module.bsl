
Перем _ИмяФормы;

Перем ВыгрузкаЗавершена;

// Модули
Перем Телеметрия, МенеджерНастроек, ФормированиеДокументов;
Перем СобытияТелеметрии;

Процедура ПодключитьМодули()
	
	Телеметрия				= Модуль("Модуль_Телеметрия");
	МенеджерНастроек		= Модуль("Модуль_МенеджерНастроек");
	ФормированиеДокументов	= Модуль("Модуль_ФормированиеДокументов");
	
	СобытияТелеметрии = Телеметрия.ОписаниеСобытий();
	
КонецПроцедуры

Процедура ИнициализироватьФорму()
	
	ПодключитьМодули();
	
	ВыгрузкаЗавершена = Ложь;
	
КонецПроцедуры

//========================================================================
// ЭКСПОРТНЫЙ ИНТЕРФЕЙС
//========================================================================

Функция ИмяФормы() Экспорт
	
	Если _ИмяФормы = Неопределено Тогда
		_ИмяФормы = ПолучитьИмяФормы(ЭтаФорма);
	КонецЕсли;
	
	Возврат _ИмяФормы;
	
КонецФункции


Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	//проверим существование выбранной папки
	Файл_КаталогЭкспортаЭД = Новый Файл(КаталогЭкспортаЭД);
	Если НЕ Файл_КаталогЭкспортаЭД.Существует() Тогда
		Если Вопрос("Указанный каталог не существует. Создать?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			СоздатьКаталог(Файл_КаталогЭкспортаЭД.ПолноеИмя);
		Иначе
			ОтправитьУведомлениеПользователю("Выбранный каталог не существует. Выберите существующий каталог.");
			Возврат;
		КонецЕсли;
	ИначеЕсли Файл_КаталогЭкспортаЭД.ЭтоФайл() Тогда
		ОтправитьУведомлениеПользователю("Выбран файл. Необходимо выбрать существующий каталог.");
		Возврат;
	КонецЕсли;
	
	Настройки = МенеджерНастроек.НастройкиИР();
	Если Настройки.ПоддержкаНовыхФорматов.Включена Тогда
		
		СписокДокументов = ФормированиеДокументов.Новый_СписокДокументовДляСериализации(); //: СписокДокументов = Новый ТаблицаЗначений;
		Для Каждого СтрокаТЧ Из ДокументыДляЭкспорта Цикл //: СтрокаТЧ = ОтправитьДокументы[0];
			НоваяСтрока = СписокДокументов.Добавить();
			НоваяСтрока.Ссылка = СтрокаТЧ.Документ;
		КонецЦикла;
		
		СериализованныеДокументы = ФормированиеДокументов.СформироватьДокументы(СписокДокументов);
		ВыгрузитьДокументы(СериализованныеДокументы);
		
		ВыгрузкаЗавершена = Истина;
		
		Закрыть();
		
		Возврат;
		
	КонецЕсли;
	
	
	Для Каждого ТекСтрока Из ДокументыДляЭкспорта Цикл //: ДокументыДляЭкспорта = ОтправитьДокументы;
		
		ДокументПредставление = СокрЛП(СтрЗаменить(ТекСтрока.ДокументПредставление, ":", ""));
		
		//Кроме того, убираем точку в конце (например, "г.")
		Если Прав(ДокументПредставление, 1) = "." Тогда
			ДокументПредставление = Лев(ДокументПредставление, СтрДлина(ДокументПредставление) - 1);
		КонецЕсли;
		
		//получаем все содержимое ЭД
		Попытка
			
			ДокументXMLСтруктура = Неопределено;
			ТипДокумента = ТекСтрока.Тип;
			
			Если ТипДокумента = "Счет на оплату" Тогда
				
				// не выгружаем
				Сообщить("Выгрузка документов [" + ТипДокумента + "] не предусмотрена.");
				Продолжить;
				
			ИначеЕсли ТипДокумента = "Акт" Тогда
				
				ДокументXMLСтруктура = ?(НЕ ЭтоБГУ,СоздатьЭДАктПродавец(ТекСтрока.Документ, Истина, Неопределено),СоздатьЭДАктПродавецБГУ(ТекСтрока.Документ, Истина, Неопределено));
				
			ИначеЕсли ТипДокумента = "Торг12" Тогда
				
				ДокументXMLСтруктура = ?(НЕ ЭтоБГУ,СоздатьЭДТорг12Продавец(ТекСтрока.Документ, Истина, Неопределено),СоздатьЭДТорг12ПродавецБГУ(ТекСтрока.Документ, Истина, Неопределено));
				
			КонецЕсли;
			
			Если ДокументXMLСтруктура <> Неопределено Тогда
				СохранитьЭлектронныйДокументНаДиск(ДокументXMLСтруктура.Документ_ДвоичныеДанные, ДокументПредставление + ".xml", КаталогЭкспортаЭД);
			КонецЕсли;
			
			ВыгрузкаЗавершена = Истина;
			
			Закрыть();
			
		Исключение
			
			ОписаниеОшибкиСтрокой = ОписаниеОшибки();
			ТекстОшибкиSynerdocs = ОписаниеОшибкиСтрокой;
			
			ОтправитьУведомлениеПользователю("Ошибка получения информации об ЭД: " + ТекстОшибкиSynerdocs);
			
			Возврат;
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыгрузитьДокументы(СериализованныеДокументы)
	
	Для Каждого Сериализация Из СериализованныеДокументы Цикл
		
		Документ = Сериализация.РезультатСериализации.Документ;
		
		СохранитьЭлектронныйДокументНаДиск(Документ.Содержимое, Документ.Имя, КаталогЭкспортаЭД);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбзорНажатие(Элемент)
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораКаталога.Каталог = КаталогЭкспортаЭД;
	ДиалогВыбораКаталога.Заголовок = "Укажите каталог";
	Если ДиалогВыбораКаталога.Выбрать() Тогда
		КаталогЭкспортаЭД = ДиалогВыбораКаталога.Каталог;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	УстановитьЗаголовокОкна(ЭтаФорма, "Настройка экспорта");
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	//Восстанавливаем настройки пользователя
	Попытка
		СтруктураНастроек = ВосстановитьЗначение("Syn_НастройкиЭкспортаДокументов");
		Если ТипЗнч(СтруктураНастроек) = Тип("Структура") Тогда
			КаталогЭкспортаЭД = СтруктураНастроек.КаталогЭкспортаЭД;
			ВариантЭкспортаДокументов = СтруктураНастроек.ВариантЭкспортаДокументов;
			ВариантАрхивацииДокументов = СтруктураНастроек.ВариантАрхивацииДокументов;
		КонецЕсли;
	Исключение
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	//: ДокументыДляЭкспорта = Новый Массив;
	
	Если НЕ ВыгрузкаЗавершена Тогда
		Телеметрия.ОтправитьАналитику(
			СобытияТелеметрии.Экспорт.Отмена,
			ЭтаФорма, , ,
			ДокументыДляЭкспорта.Количество()
		);
	КонецЕсли;
	
КонецПроцедуры


ИнициализироватьФорму();
