
Перем _ИмяФормы;

//========================================================================
// ЭКСПОРТНЫЙ ИНТЕРФЕЙС
//========================================================================

Функция ИмяФормы() Экспорт
	
	Если _ИмяФормы = Неопределено Тогда
		_ИмяФормы = ПолучитьИмяФормы(ЭтаФорма);
	КонецЕсли;
	
	Возврат _ИмяФормы;
	
КонецФункции


Процедура ПриОткрытии()
	
	УстановитьЗаголовокОкна(ЭтаФорма, "Цепочка документооборота");
	ЦепочкаДокументооборота.Очистить();
	
	ЭлементыФормы.ЦепочкаДокументооборота.Колонки.ПолученОтправлен.Ширина = 3;
	ЭлементыФормы.ЦепочкаДокументооборота.Колонки.НомерСтроки.Ширина = 1;
	ЭлементыФормы.ЦепочкаДокументооборота.Колонки.Картинка.Ширина = 1;
	//заполняем поля в зависимости от типа ЭД
	Если ЭД_Структура <> НЕОПРЕДЕЛЕНО Тогда
		//ЭлектронныйДокумент - структура:
		//Syn_Документ - документ Synerdocs
		//ТипЭД - (СФ, КСФ, Торг12, Акт)
		//ПредставлениеЭД - наименование документа
		//Комментарий
		//Статус
		//Документ1С - ссылка на документ 1С
		Попытка
			ОсновнойДокумент_FullDocumentInfo = ExchangeService.GetFlowDocumentInfo(Токен, Syn_ЯщикОрганизации, ЭД_Структура.Syn_IDДокумента,);
			ОсновнойДокумент_Syn_Документ = ОсновнойДокумент_FullDocumentInfo.Document;
		Исключение
			ОписаниеОшибкиСтрокой = ОписаниеОшибки();
			ТекстОшибкиSynerdocs = РазобратьИсключениеSynerdocs(ОписаниеОшибкиСтрокой);
			
			ОтправитьУведомлениеПользователю("Ошибка получения информации об ЭД: " + ТекстОшибкиSynerdocs);
						
			Возврат;
			
		КонецПопытки;
		
		//проверка типа документа - в зависимости от этого разные цепочки
		Если ЭтоРегламентЭСФ(ОсновнойДокумент_Syn_Документ) Тогда
			//Счет-фактура
			//Добавляем первую строку - сам документ
			НоваяСтрока = ЦепочкаДокументооборота.Добавить();
			ЗаполнитьСтрокуДокументооборота(НоваяСтрока, ОсновнойДокумент_FullDocumentInfo.Document.Id);
			
			//Далее смотрим все служебные документы к этому документу
			Syn_СлужебныеДокументы = ОсновнойДокумент_FullDocumentInfo.ServiceDocuments;
			Для ы = 0 По Syn_СлужебныеДокументы.ServiceDocument.Количество() - 1 Цикл
				Syn_СлужебныйДокумент = Syn_СлужебныеДокументы.ServiceDocument[ы];
				НоваяСтрока = ЦепочкаДокументооборота.Добавить();
				ЗаполнитьСтрокуДокументооборота(НоваяСтрока, Syn_СлужебныйДокумент.ID);
			КонецЦикла;
		Иначе
			//Акт или Торг12
			//Добавляем первую строку - сам документ
			НоваяСтрока = ЦепочкаДокументооборота.Добавить();
			ЗаполнитьСтрокуДокументооборота(НоваяСтрока, ЭД_Структура.Syn_IDДокумента);
			
			//Далее смотрим все служебные документы к этому документу
			Syn_СлужебныеДокументы = ОсновнойДокумент_FullDocumentInfo.ServiceDocuments;
			
			Если НЕ Syn_СлужебныеДокументы = Неопределено Тогда
				Для ы = 0 По Syn_СлужебныеДокументы.ServiceDocument.Количество() - 1 Цикл
					Syn_СлужебныйДокумент = Syn_СлужебныеДокументы.ServiceDocument[ы];
					НоваяСтрока = ЦепочкаДокументооборота.Добавить();
					ЗаполнитьСтрокуДокументооборота(НоваяСтрока, Syn_СлужебныйДокумент.ID);				
				КонецЦикла;
			КонецЕсли;
			
			//Далее смотрим подписи
			Syn_Подписи = ОсновнойДокумент_FullDocumentInfo.Signs.Sign;
			
			Для Каждого Элемент Из Syn_Подписи Цикл 
				Если Элемент.From <> Syn_ЯщикОрганизации Тогда
					НоваяСтрока = ЦепочкаДокументооборота.Добавить();
					НоваяСтрока.IDДокумента = Элемент.Id;
					НоваяСтрока.ДатаСобытия = Элемент.SentDate;
					НоваяСтрока.ДокументПредставление = "Подпись от " + Элемент.SentDate + " документа <" + ОсновнойДокумент_FullDocumentInfo.Document.Name + ">";
					// FIXME: Не работает, если контрагент не авторизирован
					НоваяСтрока.ОтправительПредставление = ?(НЕ ЭтоБГУ,ПолучитьОбъектПоЗначениюСвойства("Syn_IDКонтрагента", Контрагенты_Авторизованные.Найти(Элемент.From,"Ящик").IDКонтрагента),
															ПолучитьОбъектПоЗначениюСвойстваБГУ("Syn_IDКонтрагента",  Контрагенты_Авторизованные.Найти(Элемент.From,"Ящик").IDКонтрагента, НЕОПРЕДЕЛЕНО));
					НоваяСтрока.ПодлинностьЭЦП = "Штамп времени: " + Элемент.TimeStamp;
        		    НоваяСтрока.ПолученОтправлен = ?(Элемент.From = Syn_ЯщикОрганизации, "Отправлен", "Получен"); 
					НоваяСтрока.СертификатОтправителя = "Подписал: " + Элемент.Subject;
					НоваяСтрока.Отправитель = НоваяСтрока.ОтправительПредставление;
				КонецЕсли;
			КонецЦикла;
									
		КонецЕсли;
	КонецЕсли;
	
	
	ЭлементыФормы.ЦепочкаДокументооборота.Колонки.Картинка.Положение = ПоложениеКолонки.НаСледующейСтроке;
	
	ЦепочкаДокументооборота.Сортировать("ДатаСобытия ВОЗР"); 
	
КонецПроцедуры

//Процедура заполняет текущую строку цепочки документооборота
//
// Параметры: 
//	СтрокаДокументооборота: текущая строка табличной части
//  Syn_IDДокумента: ID документа сервиса
//
Процедура ЗаполнитьСтрокуДокументооборота(СтрокаДокументооборота, Syn_IDДокумента)
	Попытка
		FullDocumentInfo = ExchangeService.GetFullDocumentInfo(Токен, Syn_ЯщикОрганизации, Syn_IDДокумента,);
		Syn_Документ = FullDocumentInfo.Document;
		
		СтруктураРеквизитов = ?(Не ЭтоСлужебныйДокумент(Syn_Документ), 
								ПолучитьОсновныеРеквизитыЭД(Syn_Документ),
								ПолучитьОсновныеРеквизитыЭД_СлужебныйДокумент(Syn_Документ));
		
		ЭтоВходящийДокумент = FullDocumentInfo.From <> Syn_ЯщикОрганизации;
		
		СтрокаДокументооборота.ПолученОтправлен = ?(ЭтоВходящийДокумент, "Получен", "Отправлен");
		СтрокаДокументооборота.ДокументПредставление = СтруктураРеквизитов.Представление;
		СтрокаДокументооборота.Документ = ПолучитьОбъектПоЗначениюСвойства("Syn_IDДокумента", Syn_IDДокумента);
		СтрокаДокументооборота.IDДокумента = Syn_IDДокумента;
		
		Syn_ЯщикОтправителя = FullDocumentInfo.From;
		//По ящику найдем отправителя (можно в принципе было брать из XML)
		Если Syn_ЯщикОтправителя <> Syn_ЯщикОператораЭДО Тогда
			InnKppName = ExchangeService.GetInnKppNameByBoxId(Токен, Syn_ЯщикОтправителя);
			СтрокаДокументооборота.ОтправительПредставление = InnKppName.Name;
			СтрокаДокументооборота.Отправитель = ?(ЭтоВходящийДокумент, 
												   ПолучитьОбъектПоЗначениюСвойства("Syn_ЯщикКонтрагента", Syn_ЯщикОтправителя),
												   Организация);
		Иначе
			СтрокаДокументооборота.ОтправительПредставление = "Оператор";
		КонецЕсли;										   
									
		Syn_Подписи = FullDocumentInfo.Signs;
		//Ищем подпись отправителя по ящику
		Для ы = 0 По Syn_Подписи.Sign.Количество() - 1 Цикл
			Syn_Подпись = Syn_Подписи.Sign[ы];
			Если Syn_Подпись <> НЕОПРЕДЕЛЕНО И
				 Syn_Подпись.From = Syn_ЯщикОтправителя Тогда
				СтрокаДокументооборота.СертификатОтправителя = "Подписал: " + ?(Найти(Syn_Подпись.Subject,"CN=") > 0, Сред(Syn_Подпись.Subject, 4), Syn_Подпись.Subject);
				СтрокаДокументооборота.ПодлинностьЭЦП = "Штамп времени: " + ДатаВремяUTC(Syn_Подпись.SentDate);
				Прервать;
			КонецЕсли;	
		КонецЦикла;
		
		СтрокаДокументооборота.ДатаСобытия = FullDocumentInfo.SentDate;
		СтрокаДокументооборота.ДатаПредставление = ДатаВремяUTC(СтрокаДокументооборота.ДатаСобытия);
	Исключение
		ОписаниеОшибкиСтрокой = ОписаниеОшибки();
		ТекстОшибкиSynerdocs = РазобратьИсключениеSynerdocs(ОписаниеОшибкиСтрокой);
		
		ОтправитьУведомлениеПользователю("Ошибка получения информации об ЭД: " + ТекстОшибкиSynerdocs);
				
		Возврат;
		
	КонецПопытки;
КонецПроцедуры

Процедура ЦепочкаДокументооборотаПриПолученииДанных(Элемент, ОформленияСтрок)
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки     = 0;
	КонецЦикла;
КонецПроцедуры

Процедура ОсновныеДействияФормыЭкспортДокументов(Кнопка)
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(ЦепочкаДокументооборота[0]);
	ВыбранныеСтроки = ЦепочкаДокументооборота.Выгрузить(МассивСтрок);
	Форма_ЭкспортДокументов = ПолучитьФорму("Форма_ЭкспортДокументов");
	Форма_ЭкспортДокументов.ДокументыДляЭкспорта = ВыбранныеСтроки;
	Форма_ЭкспортДокументов.ОткрытьМодально();
	
КонецПроцедуры

